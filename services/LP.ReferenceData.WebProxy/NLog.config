<?xml version="1.0" encoding="utf-8"?>

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\ErrorLog\Services\ReferenceData-Internal-NLog.txt">

  <!-- Enable ASP.Net Core Layout Renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
  </extensions>

  <!-- Targets to Write To -->
  <targets async ="true">
    <!-- Write Logs to File  -->
    <target xsi:type="File" name="AllLogsFile" fileName="./Logs\ReferenceData-Log-${shortdate}.log"
            layout="${activityid}|
${machinename}|
${date:universalTime=true}|
${event-properties:requestType}|
${event-properties:requestUrl}|
${event-properties:payload}|
${uppercase:${level}}|
${logger}|
${message}|
${event-properties:query}|
${event-properties:elapsedTime}|
${exception:format=tostring}" />

    <!-- Log File only for Own Logs -->
    <target xsi:type="File" name="OwnLogsFile" fileName="c:\temp\ErrorLog\Services\ReferenceData\NLog-Own-${shortdate}.log"
            layout="${activityid}|${date:universalTime=true}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />


    <target name="databaseLogs"
            xsi:type="Database"
            connectionStringName="FinanceDB"
            commandText = "exec InsertLog 
           @RequestBatch,
            @MachineName,
            @RequestURL,
            @RequestType,
            @Payload,
            @Query,
            @Logged,
            @ElapsedTime,
            @Level,
            @Message,
            @Logger,
            @Exception">

      <parameter name="@RequestBatch" layout="${activityid}" />
      <parameter name="@MachineName" layout="${machinename}" />
      <parameter name="@Logged" layout="${date}" />
      <parameter name="@RequestURL" layout="${event-properties:requestUrl}" />
      <parameter name="@RequestType" layout="${event-properties:requestType}" />
      <parameter name="@Payload" layout="${event-properties:payload}" />
      <parameter name="@Query" layout="${event-properties:query}" />
      <parameter name="@ElapsedTime" layout="${event-properties:elapsedTime}" />
      <parameter name="@Level" layout="${level}" />
      <parameter name="@Message" layout="${message}" />
      <parameter name="@Logger" layout="${logger}" />
      <parameter name="@Exception" layout="${exception:tostring}" />
    </target>

    <target xsi:type="ColoredConsole" name="ConsoleLogs" useDefaultRowHighlightingRules="false"
            layout="${longdate}|${level:uppercase=true}|${logger}|${message}">
      <highlight-row condition="level == LogLevel.Debug" foregroundColor="DarkGray" />
      <highlight-row condition="level == LogLevel.Info" foregroundColor="Green" />
      <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
      <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
      <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
    </target>
  </targets>

  <!-- Rules to Map from Logger Name to Target -->
  <rules>
    <!--All Logs, Including from Microsoft-->
    <logger name="*" writeTo="databaseLogs"/>
    <logger name="*" minlevel="Trace" writeTo="AllLogsFile" />
    <logger name="*" minlevel="Trace" writeTo="ConsoleLogs" />
    <!--Skip Non-Critical Microsoft Logs and so Log only Own Logs-->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <!-- BlackHole without writeTo -->
    <logger name="*" minlevel="Trace" writeTo="OwnLogsFile" />
  </rules>
</nlog>