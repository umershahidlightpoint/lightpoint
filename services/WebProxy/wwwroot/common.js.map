{"version":3,"sources":["./src/services/account-api.service.ts","./src/services/fund-theoretical-api.service.ts","./src/services/reports-api.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountApiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseUrl = window['config']\r\n      ? window['config'].remoteServerUrl\r\n      : environment.testCaseRemoteServerUrl;\r\n  }\r\n\r\n  /*\r\n  Get a Searched Account\r\n  */\r\n  getAccount(keyword: string | null | undefined) {\r\n    const url = this.baseUrl + '/account/data/Search/?search=' + keyword;\r\n    const params: any = {};\r\n    if (keyword !== undefined) {\r\n      params.keyword = keyword;\r\n    }\r\n\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get the Accounts\r\n  */\r\n  getAccounts(keyword: string | null | undefined) {\r\n    const url = this.baseUrl + '/accounts';\r\n    const params: any = {};\r\n    if (keyword !== undefined) {\r\n      params.keyword = keyword;\r\n    }\r\n\r\n    return this.http.get(url, { params }).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get All Accounts\r\n  */\r\n  getAllAccounts() {\r\n    const url = this.baseUrl + '/account';\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get the Account Types\r\n  */\r\n  getAccountTypes(keyword: string) {\r\n    const url = this.baseUrl + '/account_types';\r\n    const params: any = {};\r\n    if (keyword !== undefined) {\r\n      params.keyword = keyword;\r\n    }\r\n\r\n    return this.http.get(url, { params }).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get the Account Tags\r\n  */\r\n  getAccountTags(id) {\r\n    const url = this.baseUrl + '/account/' + id;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Create an Account\r\n  */\r\n  createAccount(data) {\r\n    const url = this.baseUrl + '/account';\r\n    return this.http.post(url, data).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Edit an Account\r\n  */\r\n  editAccount(params) {\r\n    const url = this.baseUrl + '/account/' + params.id;\r\n    return this.http.put(url, params).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Patch an Account\r\n  */\r\n  patchAccount(id, params) {\r\n    const url = this.baseUrl + '/account/' + id;\r\n    return this.http.patch(url, params).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Delete an Account\r\n  */\r\n  deleteAccount(id) {\r\n    const url = this.baseUrl + '/account/' + id;\r\n    return this.http.delete(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get the Account Categories\r\n  */\r\n  accountCategories() {\r\n    const url = this.baseUrl + '/account_category/';\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get All Account Tags\r\n  */\r\n  accountTags() {\r\n    const url = this.baseUrl + '/account_tag';\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get an Account Type\r\n  */\r\n  accountTypes(id) {\r\n    const url = this.baseUrl + '/account_type?accountCategoryId=' + id;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FundTheoreticalApiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseUrl = window['config'].remoteServerUrl;\r\n  }\r\n  /*\r\n  Monthly Performance\r\n  */\r\n  getMonthlyPerformance(): Observable<any> {\r\n    const url = this.baseUrl + '/calculation/monthlyPerformance';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  calMonthlyPerformance(data): Observable<any> {\r\n    const url = this.baseUrl + '/calculation/monthlyPerformance';\r\n    return this.http.post(url, data);\r\n  }\r\n\r\n  commitMonthlyPerformance(data): Observable<any> {\r\n    const url = this.baseUrl + '/calculation/monthlyPerformance';\r\n    return this.http.put(url, data);\r\n  }\r\n\r\n  monthlyPerformanceAudit(id): Observable<any> {\r\n    const url = this.baseUrl + '/calculation/monthlyPerformanceAudit?id=' + id;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  getMonthlyPerformanceStatus(): Observable<any> {\r\n    const url = this.baseUrl + '/calculation/monthlyPerformance/status';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /*\r\n  Tax Rate\r\n  */\r\n  getTaxRates(): Observable<any> {\r\n    const url = this.baseUrl + '/taxRate';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  createTaxRate(data) {\r\n    const url = this.baseUrl + '/taxRate';\r\n    return this.http.post(url, data).pipe(map((response: any) => response));\r\n  }\r\n\r\n  editTaxRate(id, data) {\r\n    const url = this.baseUrl + '/taxRate/' + id;\r\n    return this.http.put(url, data).pipe(map((response: any) => response));\r\n  }\r\n\r\n  deleteTaxRate(id) {\r\n    const url = this.baseUrl + '/taxRate/' + id;\r\n    return this.http.delete(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Market Price\r\n  */\r\n  getMarketPriceData(): Observable<any> {\r\n    const url = this.baseUrl + '/marketdata/prices';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  editMarketPriceData(data): Observable<any> {\r\n    const url = this.baseUrl + '/marketdata/prices';\r\n    return this.http.put(url, data);\r\n  }\r\n\r\n  getMarketPriceAudit(id): Observable<any> {\r\n    const url = this.baseUrl + '/marketdata/audit?id=' + id;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  uploadMarketPriceData(file: File): Observable<any> {\r\n    const url = this.baseUrl + '/marketdata/prices/upload';\r\n    const formData: FormData = new FormData();\r\n    formData.append('fileKey', file, file.name);\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  /* \r\n  Daily PnL\r\n  */\r\n  getDailyUnofficialPnL(from, to): Observable<any> {\r\n    const url = this.baseUrl + '/calculation/dailyUnofficialPnl?from=' + from + '&to=' + to;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  uploadDailyUnofficialPnl(file: File): Observable<any> {\r\n    const url = this.baseUrl + '/calculation/dailyUnofficialPnlAudit/upload';\r\n    const formData: FormData = new FormData();\r\n    formData.append('fileKey', file, file.name);\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  /*\r\n  Fx Rate\r\n  */\r\n  getFxRatesData(): Observable<any> {\r\n    const url = this.baseUrl + '/fxRates/fxRate';\r\n    return this.http.get(url);\r\n  }\r\n\r\n  GetAuditTrail(id): Observable<any> {\r\n    const url = this.baseUrl + '/fxRates/audit?id=' + id;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  editFxRatePriceData(data): Observable<any> {\r\n    const url = this.baseUrl + '/fxRates/fxRate';\r\n    return this.http.put(url, data);\r\n  }\r\n\r\n  uploadFxData(file: File): Observable<any> {\r\n    const url = this.baseUrl + '/fxRates/upload';\r\n    const formData: FormData = new FormData();\r\n    formData.append('fileKey', file, file.name);\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  uploadTradeData(file: File): Observable<any> {\r\n    const url = this.baseUrl + '/fileManagement/uploadTrade';\r\n    const formData: FormData = new FormData();\r\n    formData.append('fileKey', file, file.name);\r\n    return this.http.post(url, formData);\r\n  }\r\n\r\n  commitTradeData(data): Observable<any> {\r\n    const url = this.baseUrl + '/fileManagement/commitTrade';\r\n    return this.http.post(url, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportsApiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseUrl = window['config']\r\n      ? window['config'].remoteServerUrl\r\n      : environment.testCaseRemoteServerUrl;\r\n  }\r\n\r\n  /*\r\n  Get Trial Balance Report\r\n  */\r\n  getTrialBalanceReport(fromDate, toDate, fund) {\r\n    const url =\r\n      this.baseUrl +\r\n      '/journal/trialBalanceReport?from=' +\r\n      fromDate +\r\n      '&to=' +\r\n      toDate +\r\n      '&fund=' +\r\n      fund;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getReconReport(date, fund) {\r\n    const url = this.baseUrl + '/journal/recon?source=daypnl&date=' + date + '&fund=' + fund;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getBookmonReconReport(date, fund) {\r\n    const url = this.baseUrl + '/journal/recon?source=exposure&date=' + date + '&fund=' + fund;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getFundAdminReconReport(date, fund) {\r\n    const url = this.baseUrl + '/journal/recon?source=fundadmin&date=' + date + '&fund=' + fund;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getDetailPnLToDateReport(fromDate, toDate, symbol) {\r\n    const url =\r\n      this.baseUrl +\r\n      '/journal/detailPnLDateReport?from=' +\r\n      fromDate +\r\n      '&to=' +\r\n      toDate +\r\n      '&symbol=' +\r\n      symbol;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get Cost Basis Report\r\n  */\r\n  getCostBasisReport(date, symbol, fund) {\r\n    const url =\r\n      this.baseUrl +\r\n      '/journal/costbasisReport?date=' +\r\n      date +\r\n      '&symbol=' +\r\n      symbol +\r\n      '&fund=' +\r\n      fund;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get Cost Basis Chart\r\n  */\r\n  getCostBasisChart(symbol) {\r\n    const url = this.baseUrl + '/journal/costbasisChart?symbol=' + symbol;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getTaxLotReport(fromDate, toDate, symbol, fund, side) {\r\n    const url =\r\n      this.baseUrl +\r\n      '/journal/taxlotReport?from=' +\r\n      fromDate +\r\n      '&to=' +\r\n      toDate +\r\n      '&symbol=' +\r\n      symbol +\r\n      '&fund=' +\r\n      fund +\r\n      '&side=' +\r\n      side;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getClosingTaxLots(lporderid, fromDate, toDate) {\r\n    const url = this.baseUrl + '/journal/closingTaxLots?orderid=' + lporderid + '&to=' + toDate;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getTaxLotsReport(fromDate, toDate, fund) {\r\n    const url =\r\n      this.baseUrl + '/journal/taxlotsReport?from=' + fromDate + '&to=' + toDate + '&fund=' + fund;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getLatestJournalDate() {\r\n    const url = this.baseUrl + '/journal/lastPostedDate';\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getPeriodJournals(symbol, now, period) {\r\n    const url =\r\n      this.baseUrl +\r\n      '/journal/periodJournals?symbol=' +\r\n      symbol +\r\n      '&now=' +\r\n      now +\r\n      '&period=' +\r\n      period;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getValidDates(column, source) {\r\n    const url = this.baseUrl + '/journal/validDates?columnName=' + column + '&source=' + source;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getPositionMarketValueAppraisalReport(date) {\r\n    const url = this.baseUrl + '/journal/marketValueAppraisalReport?date=' + date;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getHistoricPerformanceReport(fromDate, toDate) {\r\n    const url = this.baseUrl + '/journal/historicPerformanceReport?from=' + fromDate + '&to=' + toDate;\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}