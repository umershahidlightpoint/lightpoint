{"version":3,"sources":["./src/app/main/operations/file-exception/file-exception.component.html","./src/app/main/operations/file-management/file-management.component.html","./src/app/main/operations/file-upload/file-upload.component.html","./src/app/main/operations/operations.component.html","./src/app/main/operations/services-log/services-log.component.html","./src/app/main/operations/services-status/services-status.component.html","./src/app/main/operations/silver-file-management/silver-file-management.component.html","./src/app/main/operations/file-exception/file-exception.component.scss","./src/app/main/operations/file-exception/file-exception.component.ts","./src/app/main/operations/file-management/file-management.component.scss","./src/app/main/operations/file-management/file-management.component.ts","./src/app/main/operations/file-upload/file-upload.component.scss","./src/app/main/operations/file-upload/file-upload.component.ts","./src/app/main/operations/operations.component.scss","./src/app/main/operations/operations.component.ts","./src/app/main/operations/operations.module.ts","./src/app/main/operations/operations.route.ts","./src/app/main/operations/services-log/services-log.component.scss","./src/app/main/operations/services-log/services-log.component.ts","./src/app/main/operations/services-status/services-status.component.scss","./src/app/main/operations/services-status/services-status.component.ts","./src/app/main/operations/silver-file-management/silver-file-management.component.scss","./src/app/main/operations/silver-file-management/silver-file-management.component.ts","./src/services/file-management-api.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,i3BAAkzB,0BAA0B,+E;;;;;;;;;;;;ACA31B;AAAe,khC;;;;;;;;;;;;ACAf;AAAe,kbAAmX,YAAY,kwBAAkwB,+CAA+C,8a;;;;;;;;;;;;ACA/rC;AAAe,64CAA80C,eAAe,y3EAAy3E,WAAW,q1E;;;;;;;;;;;;ACAhvH;AAAe,gQ;;;;;;;;;;;;ACAf;AAAe,wvBAAyrB,uBAAuB,yEAAyE,iIAAiI,yBAAyB,kBAAkB,kF;;;;;;;;;;;;ACAp9B;AAAe,4hC;;;;;;;;;;;;ACAf;AAAe,6GAA8C,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4B;AAEnD;AACK;AACU;AACQ;AAC5B;AACiE;AACnC;AACqB;AACD;AAOnF;IAaE,gCACU,wBAAkD,EAClD,aAA4B,EAC5B,WAAwB;QAFxB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QAblC,oBAAe,GAAG,KAAK,CAAC;QACxB,aAAQ,GAAG,KAAK,CAAC;QAKjB,sBAAiB,GAAG,IAAI,CAAC;QAEzB,mBAAc,GAAG,4EAAW,CAAC,GAAG,CAAC,CAAC;IAM/B,CAAC;IAEJ,yCAAQ,GAAR;QACE,gEAAgE;QAChE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gDAAe,GAAf;QAAA,iBAOC;QANC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG;YAClC,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACpB,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE;gBAClB,KAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI;YACb,mBAAmB,EAAE,IAAI;YACzB,mBAAmB,EAAE,EAAE,eAAe,EAAE,kEAAuB,EAAE;YACjE,iBAAiB,EAAE,OAAO;YAC1B,cAAc,EAAE,OAAO;YACvB,cAAc,EAAE,OAAO;YACvB,sBAAsB,EAAE,OAAO;YAC/B,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,IAAI;YAClB,wBAAwB,EAAE,KAAK;YAC/B,4BAA4B,EAAE,IAAI;YAClC,YAAY,EAAE,EAAE;YAChB,YAAY,EAAE,IAAI;YAClB,wBAAwB,EAAE;gBACxB,iBAAiB,EAAE;oBACjB,UAAU,EAAE;wBACV,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAC5B,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,eAAe,EAAE;wBAC7C;4BACE,UAAU,EAAE,SAAS;4BACrB,qBAAqB,EAAE,+GAAyB;4BAChD,kBAAkB,EAAE;gCAClB,UAAU,EAAE,IAAI,CAAC,aAAa;6BAC/B;yBACF;qBACF;oBACD,mBAAmB,YAAC,MAAM;wBACxB,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;oBAChC,CAAC;iBACF;gBACD,gBAAgB,EAAE,gBAAM;oBACtB,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACpD,CAAC;gBACD,WAAW,EAAE,gBAAM,IAAK,CAAC;gBACzB,mBAAmB,EAAE,gBAAM;oBACzB,mFAAkB,CAAC,MAAM,CAAC,CAAC;oBAC3B,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;gBAChC,CAAC;gBACD,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,IAAI;iBACb;aACF;SACa,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,wEAAO,CAChC,gEAAM,CAAC,eAAe,EACtB,kEAAQ,CAAC,aAAa,EACtB,IAAI,CAAC,WAAW,CACjB,CAAC;IACJ,CAAC;IAED,iDAAgB,GAAhB;QACE,IAAM,OAAO,GAAgC;YAC3C;gBACE,KAAK,EAAE,IAAI;gBACX,UAAU,EAAE,mBAAmB;gBAC/B,IAAI,EAAE,IAAI;aACX;YACD;gBACE,KAAK,EAAE,UAAU;gBACjB,UAAU,EAAE,WAAW;gBACvB,YAAY,EAAE,qBAAqB;aACpC;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,UAAU,EAAE,eAAe;aAC5B;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,UAAU,EAAE,QAAQ;aACrB;YACD;gBACE,KAAK,EAAE,gBAAgB;gBACvB,UAAU,EAAE,OAAO;gBACnB,IAAI,EAAE,eAAe;aACtB;SACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,qDAAoB,GAApB;QAAA,iBAgCC;QA/BC,IAAI,CAAC,wBAAwB;aAC1B,uBAAuB,EAAE;aACzB,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CACR,cAAI;YACF,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAI,IAAI,QAAC;oBACvC,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,eAAe,EAAE,IAAI,CAAC,eAAe;oBACrC,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,MAAM,EAAE,IAAI,CAAC,MAAM;oBACnB,YAAY,EAAE,mCAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;oBAC5D,cAAc,EAAE,IAAI,CAAC,UAAU;oBAC/B,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC;wBAC1C,eAAe,EAAE,CAAC,CAAC,SAAS;wBAC5B,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,SAAS;wBACzC,MAAM,EAAE,CAAC,CAAC,MAAM;qBACjB,CAAC,EAJyC,CAIzC,CAAC;iBACJ,CAAC,EAZsC,CAYtC,CAAC,CAAC;aACL;YACD,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAE9C,mFAAkB,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;YACrC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC1C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;QACrE,CAAC,CACF,CAAC;QACJ,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,2CAAU,GAAV,UAAW,GAAG;QACZ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;;gBA1ImC,iGAAwB;gBACnC,wDAAa;gBACf,4EAAW;;IAfa;QAA9C,+DAAS,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAgB,yDAAW;iEAAM;IADpE,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,8PAA8C;;SAE/C,CAAC;+EAeoC,iGAAwB;YACnC,wDAAa;YACf,4EAAW;OAhBvB,sBAAsB,CAyJlC;IAAD,6BAAC;CAAA;AAzJkC;;;;;;;;;;;;;ACjBnC;AAAe,6GAA8C,2L;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4B;AAE9C;AACU;AACQ;AAC5B;AACkE;AACf;AAEtB;AAE4B;AAO1F;IAwBE,iCACU,wBAAkD,EAClD,aAA4B;QAFtC,iBAKC;QAJS,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,kBAAa,GAAb,aAAa,CAAe;QApBtC,gBAAW,GAAG;YACZ,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE,aAAa;YACxB,UAAU,EAAE;gBACV,MAAM;gBACN,QAAQ;gBACR,QAAQ;gBACR,YAAY;gBACZ,cAAc;gBACd,iBAAiB;gBACjB,eAAe;aAChB;SACF,CAAC;QAEF,UAAK,GAAG,6DAAK,CAAC;QAEd,uBAAkB,GAAG,2EAAW,CAAC,GAAG,CAAC,CAAC;QA4ItC,wBAAmB,GAAG,UAAC,MAA0B;YAC/C,IAAM,OAAO,GAAG;gBACd;oBACE,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE;wBACN,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAC3B,CAAC;iBACF;aACF,CAAC;YACF,OAAO,mFAAc,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAC5D,CAAC,CAAC;QAhJA,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,0CAAQ,GAAR,cAAY,CAAC;IAEb,iDAAe,GAAf;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,GAAG;YACtB,OAAO,EAAE,IAAI;YACb,mBAAmB,EAAE,EAAE,eAAe,EAAE,kEAAuB,EAAE;YACjE,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,IAAI;YAClB,wBAAwB,EAAE,KAAK;YAC/B,4BAA4B,EAAE,IAAI;YAClC,YAAY,EAAE,EAAE;YAChB,WAAW,EAAE,gBAAM,IAAK,CAAC;YACzB,mBAAmB,EAAE,gBAAM;gBACzB,kFAAkB,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC;SACa,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,WAAW,GAAG,gBAAM;YACxC,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE;gBAC1B,OAAO,EAAE,eAAe,EAAE,SAAS,EAAE,CAAC;aACvC;QACH,CAAC,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,uEAAO,CAAC,gEAAM,CAAC,OAAO,EAAE,kEAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACjG,CAAC;IAED,4CAAU,GAAV;QACE,IAAM,OAAO,GAAgC;YAC3C;gBACE,KAAK,EAAE,IAAI;gBACX,UAAU,EAAE,IAAI;gBAChB,IAAI,EAAE,IAAI;aACX;YACD;gBACE,KAAK,EAAE,MAAM;gBACb,UAAU,EAAE,WAAW;gBACvB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,cAAc,EAAE,IAAI;gBACpB,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,MAAM;gBACb,UAAU,EAAE,MAAM;gBAClB,IAAI,EAAE,IAAI;aACX;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,UAAU,EAAE,gBAAgB;gBAC5B,IAAI,EAAE,IAAI;aACX;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,UAAU,EAAE,QAAQ;gBACpB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,QAAQ;gBACf,UAAU,EAAE,QAAQ;gBACpB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,YAAY;gBACnB,UAAU,EAAE,YAAY;gBACxB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;gBACf,IAAI,EAAE,eAAe;aACtB;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,UAAU,EAAE,eAAe;gBAC3B,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,cAAc,EAAE,IAAI;gBACpB,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,iBAAiB;gBACxB,UAAU,EAAE,YAAY;gBACxB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;aACb;YACD;gBACE,KAAK,EAAE,eAAe;gBACtB,UAAU,EAAE,UAAU;gBACtB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;aACb;YACD;gBACE,UAAU,EAAE,MAAM;gBAClB,qBAAqB,EAAE,wGAAyB;gBAChD,kBAAkB,EAAE;oBAClB,UAAU,EAAE,IAAI,CAAC,aAAa;iBAC/B;aACF;SACF,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,gBAAM;YACvD,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,cAAI,IAAI,QAAC;gBACvC,EAAE,EAAE,IAAI,CAAC,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,YAAY,EAAE,IAAI,CAAC,cAAc;gBACjC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,eAAe,EAAE,mCAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC;gBAC9E,aAAa,EAAE,mCAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC;gBAC1E,YAAY,EAAE,mCAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC;gBACvE,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,CAAC,EAZsC,CAYtC,CAAC,CAAC;YACJ,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,kDAAgB,GAAhB;QACE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QAC/C,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAcD,0DAAwB,GAAxB,UAAyB,KAAc;QACrC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,UAAC,IAAI,EAAE,KAAK;YAChD,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aACzB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX,UAAY,MAAM;QAChB,IAAM,KAAK,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QACzD,IAAM,GAAG,GAAG;YACV,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YAC3B,MAAM,EAAE,YAAY;SACrB,CAAC;QACF,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5D,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,KAAK,CAAC,QAAQ,EAAE,CAAC;aAClB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAY,GAAZ,UAAa,IAAI,IAAG,CAAC;;gBA3Ke,iGAAwB;gBACnC,wDAAa;;IAzBS;QAA9C,+DAAS,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAgB,yDAAW;kEAAM;IADpE,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iQAA+C;;SAEhD,CAAC;+EA0BoC,iGAAwB;YACnC,wDAAa;OA1B3B,uBAAuB,CAqMnC;IAAD,8BAAC;CAAA;AArMmC;;;;;;;;;;;;;AClBpC;AAAe,gLAAiH,oBAAoB,GAAG,6CAA6C,+6B;;;;;;;;;;;;;;;;;;;;;;;;ACA3H;AAE9B;AACU;AACrD,iCAAiC;AACiF;AAC/C;AACmB;AACb;AACL;AAOpE;IAmBE,6BACU,cAAmC,EACnC,yBAAoD,EACpD,aAA4B,EAC5B,cAA8B;QAH9B,mBAAc,GAAd,cAAc,CAAqB;QACnC,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAnBxC,uBAAkB,GAAG,2EAAW,CAAC,GAAG,CAAC,CAAC;QAEtC,gBAAW,GAAG,KAAK,CAAC;QAEpB,iBAAY,GAAG,oEAAY,CAAC;QAE5B,YAAO,GAAU,EAAE,CAAC;QAEpB,iBAAY,GAAS,IAAI,CAAC;QAC1B,sBAAiB,GAAG,IAAI,CAAC;QACzB,iBAAY,GAAG,KAAK,CAAC;QACrB,kBAAa,GAAG,KAAK,CAAC;QACtB,aAAQ,GAAG,oBAAoB,CAAC;QAChC,cAAS,GAAG,CAAC,qBAAqB,EAAE,WAAW,EAAE,eAAe,EAAE,SAAS,CAAC,CAAC;IAO1E,CAAC;IAEJ,sCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG;YAChB,OAAO,EAAE,IAAI;YACb,mBAAmB,EAAE,IAAI;YACzB,mBAAmB,EAAE,EAAE,eAAe,EAAE,kEAAuB,EAAE;YACjE,YAAY,EAAE,QAAQ;YACtB,iBAAiB,EAAE,OAAO;YAC1B,cAAc,EAAE,OAAO;YACvB,cAAc,EAAE,OAAO;YACvB,sBAAsB,EAAE,OAAO;YAC/B,WAAW,EAAE,IAAI;YACjB,eAAe,EAAE,IAAI;YACrB,sBAAsB,EAAE;gBACtB,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,aAAa,EAAE,gBAAM,IAAK,CAAC;YAC3B,mBAAmB,EAAE,cAAO,CAAC;YAC7B,WAAW,EAAE,gBAAM;gBACjB,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAChC,CAAC;YACD,mBAAmB,EAAE,gBAAM;gBACzB,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAChC,CAAC;YACD,aAAa,EAAE;gBACb,SAAS,EAAE,IAAI;aAChB;SACa,CAAC;IACnB,CAAC;IAED,4CAAc,GAAd,UAAe,gBAAgB;QAC7B,IAAI,CAAC,iBAAiB;YACpB,IAAI,CAAC,YAAY,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACtF,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC;IACnC,CAAC;IAED,yCAAW,GAAX,UAAY,KAAe;QACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,QAAQ,KAAK,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/E,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,wCAAU,GAAV;QAAA,iBAuBC;QAtBC,IAAI,IAAI,CAAC,QAAQ,KAAK,qBAAqB,EAAE;YAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,yBAAyB,CAAC,2BAA2B,EAAE,CAAC,SAAS,CAAC,kBAAQ;gBAC7E,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,QAAQ,CAAC,YAAY,EAAE;oBACzB,IAAI,QAAQ,CAAC,OAAO,EAAE;wBACpB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,KAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;qBACpC;yBAAM;wBACL,KAAI,CAAC,wBAAwB,EAAE,CAAC;qBACjC;iBACF;qBAAM;oBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;iBAC9D;YACH,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;YACxC,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,eAAe,EAAE;YAC5C,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;aAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;IACH,CAAC;IAED,sDAAwB,GAAxB;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAChF,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,QAAQ,CAAC,YAAY,EAAE;gBACzB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;aAC3D;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAwB,GAAxB;QAAA,iBAcC;QAbC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,yBAAyB;aAC3B,wBAAwB,CAAC,IAAI,CAAC,YAAY,CAAC;aAC3C,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,QAAQ,CAAC,YAAY,EAAE;gBACzB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;aAC3D;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAgB,GAAhB;QAAA,iBAuBC;QAtBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,yBAAyB,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACxF,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;gBACvD,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;aAC3D;iBAAM,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC9D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC7B,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBAEhC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAE7C,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;aAC1D;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAiB,GAAjB;QAAA,iBAuBC;QAtBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC/E,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;gBACvD,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;aAC3D;iBAAM,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;gBAC9D,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;gBAC7B,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;gBAEhC,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAE7C,KAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;aAC1D;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;MAEE;IACF,8CAAgB,GAAhB,UAAiB,OAAY;QAC3B,IAAM,YAAY,GAAG,EAAE,CAAC;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;SACvE;QACD,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAClD,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,QAAQ,GAAG,oBAAoB,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;IAC1C,CAAC;;gBAlLyB,gFAAmB;gBACR,mGAAyB;gBACrC,wDAAa;gBACZ,2EAAc;;IAtBW;QAAlD,+DAAS,CAAC,mBAAmB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAoB,+HAA0B;kEAAC;IACtD;QAA1C,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAY,wDAAU;0DAAC;IAFtD,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qPAA2C;;SAE5C,CAAC;+EAqB0B,gFAAmB;YACR,mGAAyB;YACrC,wDAAa;YACZ,2EAAc;OAvB7B,mBAAmB,CAuM/B;IAAD,0BAAC;CAAA;AAvM+B;;;;;;;;;;;;;AChBhC;AAAe,6EAAc,cAAc,eAAe,iBAAiB,GAAG,YAAY,yCAAyC,GAAG,qBAAqB,uBAAuB,GAAG,mBAAmB,uBAAuB,gBAAgB,qBAAqB,iBAAiB,GAAG,eAAe,qBAAqB,GAAG,eAAe,qBAAqB,GAAG,+BAA+B,mBAAmB,wBAAwB,KAAK,GAAG,+BAA+B,eAAe,yBAAyB,wBAAwB,KAAK,GAAG,+BAA+B,mBAAmB,yBAAyB,wBAAwB,KAAK,iBAAiB,yBAAyB,wBAAwB,KAAK,GAAG,+BAA+B,eAAe,yBAAyB,wBAAwB,KAAK,GAAG,6CAA6C,2rG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1wB;AACnC;AAEvB;AACU;AACU;AAC6D;AACrD;AAC6B;AAC5B;AAEoB;AACA;AACb;AACe;AAOpF;IAoFE,6BACU,wBAAkD,EAClD,uBAAgD,EAChD,iBAAoC,EACpC,aAA4B,EAC5B,oBAA0C;QAJ1C,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,kBAAa,GAAb,aAAa,CAAe;QAC5B,yBAAoB,GAApB,oBAAoB,CAAsB;QAnF5C,kBAAa,GAAQ,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;QAElD,cAAS,GAAG,KAAK,CAAC;QAElB,wBAAmB,GAAG,KAAK,CAAC;QAC5B,yBAAoB,GAAG,KAAK,CAAC;QAC7B,0BAAqB,GAAG,KAAK,CAAC;QAC9B,mBAAc,GAAG,KAAK,CAAC;QACvB,gBAAW,GAAG,KAAK,CAAC;QAWpB,kBAAa,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;QAKlC,wBAAmB,GAAG,KAAK,CAAC;QAE5B,gBAAW,GAAG;YACZ,QAAQ,EAAE,cAAc;YACxB,SAAS,EAAE,aAAa;YACxB,UAAU,EAAE,CAAC,SAAS,EAAE,WAAW,EAAE,QAAQ,CAAC;SAC/C,CAAC;QAEF,YAAO,GAAG;YACR,EAAE,IAAI,EAAE,QAAQ,EAAE;YAClB,EAAE,IAAI,EAAE,OAAO,EAAE;YACjB,EAAE,IAAI,EAAE,KAAK,EAAE;YACf,EAAE,IAAI,EAAE,KAAK,EAAE;YACf,EAAE,IAAI,EAAE,KAAK,EAAE;SAChB,CAAC;QAEF,UAAK,GAAG,6DAAK,CAAC;QAEd,uBAAkB,GAAG,2EAAW,CAAC,GAAG,CAAC,CAAC;QAEtC,wBAAmB,GAAG,2EAAW,CAAC,GAAG,CAAC,CAAC;QAEvC,iBAAY,GAAG;YACb,MAAM,EAAE,gBAAgB;YACxB,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,MAAM;YACjB,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,qBAAqB;YAC7B,SAAS,EAAE,YAAY;YACvB,QAAQ,EAAE,QAAQ;SACnB,CAAC;QAEF;;UAEE;QACF,eAAU,GAAG;YACX;gBACE,KAAK,EAAE,SAAS;gBAChB,UAAU,EAAE,UAAU;gBACtB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,cAAc,EAAE,IAAI;gBACpB,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,WAAW;gBAClB,UAAU,EAAE,WAAW;gBACvB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;aAChB;YACD,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;SACxE,CAAC;QASA,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,sCAAQ,GAAR;QACE;;UAEE;QACF,0DAA0D;QAC1D,0DAA0D;QAC1D;;UAEE;QACF,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,gDAAkB,GAAlB;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,4CAAc,GAAd;QACE,IAAI;YACF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,CAAC;SAC1F;QAAC,OAAO,GAAG,EAAE,GAAE;IAClB,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,mBAAmB,EAAE,EAAE,eAAe,EAAE,kEAAuB,EAAE;YACjE,mBAAmB,EAAE,gBAAM,IAAI,YAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAhC,CAAgC;YAC/D,sBAAsB,EAAE;gBACtB,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,WAAW,EAAE,gBAAM,IAAK,CAAC;YACzB,mBAAmB,EAAE,gBAAM;gBACzB,kFAAkB,CAAC,MAAM,CAAC,CAAC;gBAC3B,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAChC,CAAC;YACD,YAAY,EAAE,IAAI;YAClB,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,EAAE;YAChB,wBAAwB,EAAE,IAAI;YAC9B,aAAa,EAAE;gBACb,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,IAAI;aAChB;SACa,CAAC;QACjB,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,uEAAO,CAAC,gEAAM,CAAC,MAAM,EAAE,kEAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACrF,CAAC;IAEO,4CAAc,GAAtB;QAAA,iBAoBC;QAnBC,IAAI,CAAC,iBAAiB;aACnB,cAAc,CACb,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,aAAa,CAAC,EAAE,EACrB,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,aAAa,CACnB;aACA,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,cAAI,IAAI,QAAC;gBACzC,OAAO,EAAE,mCAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;gBACnD,SAAS,EAAE,mCAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC;gBAChE,MAAM,EAAE,IAAI,CAAC,MAAM;aACpB,CAAC,EAJwC,CAIxC,CAAC,CAAC;YACJ,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QAC1C,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,IAAI,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC5B,MAAM,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,+CAAiB,GAAjB;QACE,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACjG,CAAC;IAED;;MAEE;IACF,uCAAS,GAAT;QAAA,iBAcC;QAbC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,uBAAuB;aACzB,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;aAC5C,SAAS,CAAC,kBAAQ;YACjB,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACtB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;gBACxB,KAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAC7C,KAAI,CAAC,oBAAoB,CAAC,aAAa,EAAE,CAAC;aAC3C;YACD,KAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;YACxB,KAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAa,GAAb;QAAA,iBAaC;QAZC,IAAM,GAAG,GAAG;YACV,YAAY,EAAE,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;SAC7E,CAAC;QACF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACjE,KAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACjC,IAAI,QAAQ,CAAC,YAAY,EAAE;gBACzB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;aAClE;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;aAC3E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAO,GAAP;QAAA,iBAaC;QAZC,UAAU,CAAC;YACT,KAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBAC3E,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACjC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAC3E,IAAI,QAAQ,CAAC,MAAM,EAAE;oBACnB,KAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;qBAAM;oBACL,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;iBACpB;YACH,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,wCAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACtE,IAAI,QAAQ,CAAC,SAAS,EAAE;gBACtB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;gBACxB,KAAI,CAAC,OAAO,EAAE,CAAC;aAChB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAoB,GAApB;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,mDAAqB,GAArB;QACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACpC,CAAC;IAED,kDAAoB,GAApB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,+CAAiB,GAAjB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;IACrC,CAAC;IAED,0CAAY,GAAZ;QAAA,iBAeC;QAdC,IAAM,IAAI,GACR,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI;YACpE,CAAC,CAAC,MAAM;YACR,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM;gBACpC,CAAC,CAAC,QAAQ;gBACV,CAAC,CAAC,MAAM,CAAC;QACb,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACjE,IAAI,QAAQ,CAAC,YAAY,EAAE;gBACzB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;aAClE;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;aACvD;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uCAAS,GAAT;QACE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;IAChC,CAAC;IAED,iDAAmB,GAAnB,UAAoB,MAAM;QACxB,0EAA0E;QAC1E,OAAO,mFAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;;gBA/MmC,kGAAwB;gBACzB,gGAAuB;gBAC7B,mFAAiB;gBACrB,wDAAa;gBACN,gGAAoB;;IAxFN;QAA7C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAoB,+HAA0B;kEAAC;IACjD;QAA1C,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAuB,wDAAU;6DAAC;IAFjE,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,uOAA0C;;SAE3C,CAAC;+EAsFoC,kGAAwB;YACzB,gGAAuB;YAC7B,mFAAiB;YACrB,wDAAa;YACN,gGAAoB;OAzFzC,mBAAmB,CAqS/B;IAAD,0BAAC;CAAA;AArS+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBS;AACM;AACA;AACmB;AACvB;AACyB;AACvB;AAEgB;AACkC;AACG;AACZ;AAC0C;AACpB;AAC/B;AAEvB;AACD;AAErD,IAAM,oBAAoB,GAAG;IAC3B,yEAAmB;IACnB,0GAAsB;IACtB,8GAAuB;IACvB,kGAAmB;IACnB,8IAA6B;IAC7B,0HAAuB;IACvB,0FAAoB;CACrB,CAAC;AAmBF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAjB5B,8DAAQ,CAAC;YACR,YAAY,EAAM,oBAAoB,QAAC;YACvC,OAAO,EAAM,oBAAoB,SAAE,mEAAY,EAAC;YAChD,OAAO,EAAE;gBACP,4DAAY;gBACZ,wDAAU;gBACV,0DAAW;gBACX,kEAAmB;gBACnB,iFAAoB,CAAC,OAAO,CAAC;oBAC3B,UAAU,EAAE,MAAM;oBAClB,QAAQ,EAAE,CAAC;iBACZ,CAAC;gBACF,4DAAY,CAAC,QAAQ,CAAC,mEAAgB,CAAC;gBACvC,0DAAe;gBACf,mEAAY;aACb;SACF,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;AC7CgC;AAEtD,IAAM,gBAAgB,GAAY;IACrC;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yEAAmB;KAEjC;CACJ;;;;;;;;;;;;;ACTD;AAAe,6GAA8C,mL;;;;;;;;;;;;;;;;;;;ACAX;AACc;AACV;AAOtD;IAaE;QAZA,8CAA8C;QAC9C,YAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;YACxB,CAAC,CAAC,8CAA8C;gBAC9C,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe;YAClC,CAAC,CAAC,6EAAW,CAAC,uBAAuB,CAAC;QAExC,eAAU,GAAM,IAAI,CAAC,OAAO,eAAY,CAAC;QACzC,oBAAe,GAAM,IAAI,CAAC,OAAO,4BAAyB,CAAC;QAC3D,gBAAW,GAAM,IAAI,CAAC,OAAO,0CAAuC,CAAC;QAErE,mBAAc,GAAG,2EAAW,CAAC,GAAG,CAAC,CAAC;IAEnB,CAAC;IAEhB,uCAAQ,GAAR,cAAY,CAAC;IAfF,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wPAA4C;;SAE7C,CAAC;;OACW,oBAAoB,CAgBhC;IAAD,2BAAC;CAAA;AAhBgC;;;;;;;;;;;;;ACTjC;AAAe,+EAAgB,oBAAoB,gBAAgB,8DAA8D,mBAAmB,uBAAuB,kBAAkB,uBAAuB,qBAAqB,+BAA+B,wDAAwD,oHAAoH,GAAG,mBAAmB,2BAA2B,sBAAsB,gBAAgB,wBAAwB,0FAA0F,uBAAuB,GAAG,sBAAsB,kBAAkB,qBAAqB,GAAG,gBAAgB,sBAAsB,GAAG,eAAe,oBAAoB,GAAG,qBAAqB,qBAAqB,GAAG,aAAa,wBAAwB,mBAAmB,iBAAiB,gBAAgB,sBAAsB,GAAG,cAAc,+BAA+B,qBAAqB,wBAAwB,GAAG,6CAA6C,+7H;;;;;;;;;;;;;;;;;;ACA7hC;AAC0C;AAO5F;IAGE,iCAAmB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;QAFrE,SAAI,GAAG,KAAK,CAAC;IAE2D,CAAC;IAIzE,0CAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,SAAS,CAAC,cAAI;YAC7D,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAW,GAAX;QACE,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,wBAAwB,CAAC,YAAY,EAAE,CAAC;IAC/C,CAAC;;gBAf4C,8FAAwB;;IAH1D,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,iQAA+C;;SAEhD,CAAC;+EAI6C,8FAAwB;OAH1D,uBAAuB,CAmBnC;IAAD,8BAAC;CAAA;AAnBmC;;;;;;;;;;;;;ACRpC;AAAe,6GAA8C,+M;;;;;;;;;;;;;;;;;;;;;;;;;ACA4B;AAEpC;AACQ;AAC5B;AACkE;AACf;AAEtB;AAEe;AAO7E;IAqBE,uCAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;QAftE,gBAAW,GAAG;YACZ,QAAQ,EAAE,aAAa;YACvB,SAAS,EAAE,aAAa;YACxB,UAAU,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,MAAM,CAAC;SAC3C,CAAC;QAEF,UAAK,GAAG,6DAAK,CAAC;QAEd,sBAAiB,GAAG;YAClB,SAAS,EAAE,MAAM;YACjB,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,qBAAqB;YAC7B,SAAS,EAAE,YAAY;SACxB,CAAC;QAoFF,wBAAmB,GAAG,UAAC,MAA0B;YAC/C,OAAO,mFAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QACxD,CAAC,CAAC;QAnFA,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,gDAAQ,GAAR,cAAY,CAAC;IAEb,uDAAe,GAAf;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,gDAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,GAAG;YACtB,OAAO,EAAE,IAAI;YACb,mBAAmB,EAAE,EAAE,eAAe,EAAE,kEAAuB,EAAE;YACjE,WAAW,EAAE,IAAI;YACjB,YAAY,EAAE,IAAI;YAClB,wBAAwB,EAAE,KAAK;YAC/B,4BAA4B,EAAE,IAAI;YAClC,YAAY,EAAE,EAAE;YAChB,WAAW,EAAE,gBAAM,IAAK,CAAC;YACzB,mBAAmB,EAAE,gBAAM;gBACzB,kFAAkB,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC;SACa,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,uEAAO,CACrC,gEAAM,CAAC,aAAa,EACpB,kEAAQ,CAAC,WAAW,EACpB,IAAI,CAAC,gBAAgB,CACtB,CAAC;IACJ,CAAC;IAED,kDAAU,GAAV;QACE,IAAM,OAAO,GAAgC;YAC3C;gBACE,KAAK,EAAE,MAAM;gBACb,UAAU,EAAE,MAAM;gBAClB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,YAAY;gBACnB,UAAU,EAAE,aAAa;gBACzB,QAAQ,EAAE,IAAI;gBACd,MAAM,EAAE,IAAI;gBACZ,cAAc,EAAE,IAAI;gBACpB,SAAS,EAAE,IAAI;aAChB;YACD;gBACE,KAAK,EAAE,MAAM;gBACb,UAAU,EAAE,MAAM;gBAClB,SAAS,EAAE,IAAI;gBACf,IAAI,EAAE,eAAe;aACtB;YACD;gBACE,UAAU,EAAE,MAAM;gBAClB,qBAAqB,EAAE,wGAAyB;gBAChD,kBAAkB,EAAE;oBAClB,UAAU,EAAE,IAAI,CAAC,aAAa;iBAC/B;aACF;SACF,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IAED,sDAAc,GAAd;QAAA,iBAUC;QATC,IAAI,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC7D,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,cAAI,IAAI,QAAC;gBACvC,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,UAAU,EAAE,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC;gBAClE,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,EAJsC,CAItC,CAAC,CAAC;YACJ,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wDAAgB,GAAhB;QACE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QAC/C,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAMD,oDAAY,GAAZ,UAAa,IAAI,IAAG,CAAC;;gBAtFyB,iGAAwB;;IApBvB;QAA9C,+DAAS,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAgB,yDAAW;wEAAM;IADpE,6BAA6B;QALzC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,sRAAsD;;SAEvD,CAAC;+EAsB8C,iGAAwB;OArB3D,6BAA6B,CA4GzC;IAAD,oCAAC;CAAA;AA5GyC;;;;;;;;;;;;;;;;;;;;;;ACjBC;AACO;AACa;AAExB;AACF;AAKrC;IASE,kCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAN5B,uBAAkB,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QACvD,wBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAErD,0BAAqB,GAAG,IAAI,oDAAe,CAAC,IAAI,CAAC,CAAC;QAC1D,2BAAsB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;QAGjE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,0EAAW,CAAC,uBAAuB,CAAC;IAC3G,CAAC;IAED;;MAEE;IACF,2CAAQ,GAAR;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,EAAR,CAAQ,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,+CAAY,GAAZ,UAAa,IAAI;QACf,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,kCAAkC,CAAC;QAC9D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,EAAR,CAAQ,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED;;MAEE;IACF,iDAAc,GAAd;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,yBAAyB,CAAC;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,EAAR,CAAQ,CAAC,CAAC,CAAC;IACnE,CAAC;IAED;;MAEE;IACF,gDAAa,GAAb,UAAc,IAAI;QAChB,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,gCAAgC,CAAC;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,UAAC,QAAa,IAAK,eAAQ,EAAR,CAAQ,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,0DAAuB,GAAvB;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,qCAAqC,CAAC;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;;gBApCyB,+DAAU;;IATzB,wBAAwB;QAHpC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAU0B,+DAAU;OATzB,wBAAwB,CA8CpC;IAAD,+BAAC;CAAA;AA9CoC","file":"main-operations-operations-module.js","sourcesContent":["export default \"<!----- Grid View Div Starts ----->\\r\\n<div class=\\\"d-flex\\\" [ngStyle]=\\\"styleForHeight\\\">\\r\\n  <!----- AG Grid Starts ----->\\r\\n  <ag-grid-angular class=\\\"width-55 h-100 ag-theme-balham\\\" [gridOptions]=\\\"gridOptions\\\">\\r\\n  </ag-grid-angular>\\r\\n  <!----- AG Grid Ends ----->\\r\\n  <!----- Action buttons Template Starts ----->\\r\\n  <ng-template #actionButtons let-row>\\r\\n    <button class=\\\"btn grid-btn width-15 height-30px\\\" (click)=\\\"viewLayout(row)\\\" tooltip=\\\"View\\\" placement=\\\"auto\\\"\\r\\n      container=\\\"body\\\">\\r\\n      <i class=\\\"fa fa-lg fa-eye\\\" aria-hidden=\\\"true\\\"></i>\\r\\n    </button>\\r\\n  </ng-template>\\r\\n  <!----- Action buttons Template Ends ----->\\r\\n\\r\\n  <!----- Grid Layout Json Div Starts ----->\\r\\n  <div *ngIf=\\\"invalidRecordJson\\\" class=\\\"width-45 h-100 json-container\\\">\\r\\n    <pre>{{invalidRecordJson | json}}</pre>\\r\\n  </div>\\r\\n  <!----- Grid Layout Json Div Ends ----->\\r\\n\\r\\n</div>\"","export default \"<!-- Action Buttons Div -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"ml-3\\\">\\r\\n    <h4>LightPoint Files</h4>\\r\\n  </div>\\r\\n  <div class=\\\"ml-auto mr-3\\\">\\r\\n    <app-grid-utils [gridOptions]=\\\"filesGridOptions\\\" (refresh)=\\\"refreshFilesGrid()\\\" [excelParams]=\\\"excelParams\\\">\\r\\n    </app-grid-utils>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- AG Grid for Files -->\\r\\n<div [ngStyle]=\\\"styleForLogsHeight\\\">\\r\\n  <ag-grid-angular class=\\\"w-100 h-100 ag-theme-balham\\\" [gridOptions]=\\\"filesGridOptions\\\"\\r\\n    [getContextMenuItems]=\\\"getContextMenuItems\\\">\\r\\n  </ag-grid-angular>\\r\\n  <!----- Action buttons Template Starts ----->\\r\\n  <ng-template #actionButtons let-row>\\r\\n    <button class=\\\"btn action-btn width-15 height-30px\\\" (click)=\\\"downloadFile(row)\\\" tooltip=\\\"View\\\" placement=\\\"auto\\\"\\r\\n      container=\\\"body\\\">\\r\\n      <i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i>\\r\\n    </button>\\r\\n  </ng-template>\\r\\n  <!----- Action buttons Template Ends ----->\\r\\n</div>\"","export default \"<!-- File Upload Container -->\\r\\n<div class=\\\"row mt-2\\\">\\r\\n\\r\\n  <!-- File Type Dropdown Div -->\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <select class=\\\"form-control\\\" [(ngModel)]=\\\"fileType\\\" (ngModelChange)=\\\"changeFileType($event)\\\">\\r\\n      <option [disabled]=\\\"true\\\">Select a File Type</option>\\r\\n      <option *ngFor=\\\"let fileType of fileTypes\\\">\\r\\n        {{ fileType }}\\r\\n      </option>\\r\\n    </select>\\r\\n  </div>\\r\\n  <!-- File Type Dropdown Div Ends -->\\r\\n\\r\\n  <!-- File Upload Input Div -->\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <input #fileInput class=\\\"btn btn-pa mr-2 file-input\\\" type=\\\"file\\\" (change)=\\\"onFileInput($event.target.files)\\\">\\r\\n    <button class=\\\"btn btn-pa\\\" type=\\\"button\\\" [disabled]=\\\"disableFileUpload || uploadLoader\\\" (click)=\\\"uploadRows()\\\">\\r\\n      Upload\\r\\n      <span *ngIf=\\\"uploadLoader\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\" aria-hidden=\\\"true\\\"></span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- File Upload Input Div Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- File Upload Container Ends -->\\r\\n\\r\\n<!-- AG Grid for file Upload -->\\r\\n<div [ngStyle]=\\\"styleForLogsHeight\\\" [ngClass]=\\\"{'w-100' : displayGrid, 'd-none' : !displayGrid}\\\">\\r\\n  <ag-grid-angular class=\\\"w-100 h-100 ag-theme-balham\\\" [gridOptions]=\\\"uploadGrid\\\">\\r\\n  </ag-grid-angular>\\r\\n</div>\\r\\n\\r\\n<!-- Confirmation Modal Component -->\\r\\n<app-confirmation-modal #confirmationModal (confirmDeletion)=\\\"confirmReset()\\\" [modalTitle]=\\\"'Reset Performance'\\\"\\r\\n  [modalDescription]=\\\"'All your changes will be lost.\\\\nAre you sure you want to reset performance?'\\\">\\r\\n</app-confirmation-modal>\"","export default \"<!-- Main Tab View -->\\r\\n<tabset>\\r\\n  <!-- Logs Tab -->\\r\\n  <tab heading=\\\"Logs\\\" (selectTab)=\\\"activeLogs()\\\">\\r\\n    <!-- Action Buttons Div -->\\r\\n    <div class=\\\"row\\\" [ngStyle]=\\\"style\\\">\\r\\n      <div class=\\\"ml-auto mr-3\\\">\\r\\n        <app-grid-utils [gridOptions]=\\\"gridOptions\\\" (refresh)=\\\"refreshGrid()\\\" [excelParams]=\\\"excelParams\\\">\\r\\n        </app-grid-utils>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- AG Grid for Logs -->\\r\\n    <div [ngStyle]=\\\"styleForLogsHeight\\\">\\r\\n      <ag-grid-angular class=\\\"w-100 h-100 ag-theme-balham\\\" [gridOptions]=\\\"gridOptions\\\"\\r\\n        [getContextMenuItems]=\\\"getContextMenuItems\\\">\\r\\n      </ag-grid-angular>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <!-- Logs Tab Ends -->\\r\\n\\r\\n  <!-- Tasks Tab -->\\r\\n  <tab #task heading=\\\"Tasks\\\">\\r\\n    <div [ngStyle]=\\\"styleForTasksHeight\\\">\\r\\n      <!-- Tasks Div -->\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <!-- Run Engine Div -->\\r\\n        <div class=\\\"col-2\\\">\\r\\n          <!-- <p-dropdown [options]=\\\"periods\\\" [(ngModel)]=\\\"selectedPeriod\\\" optionLabel=\\\"name\\\"></p-dropdown> -->\\r\\n          <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedPeriod\\\">\\r\\n            <option [disabled]=\\\"true\\\" [ngValue]=\\\"periodPlaceholder\\\">Select a Period</option>\\r\\n            <option *ngFor=\\\"let period of periods\\\" [ngValue]=\\\"period\\\">\\r\\n              {{ period.name }}\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-2 p-0\\\">\\r\\n          <button class=\\\"btn btn-pa ml-2\\\" type=\\\"button\\\" [disabled]=\\\"isLoading\\\" (click)=\\\"runEngine()\\\">\\r\\n            Run Engine\\r\\n          </button>\\r\\n        </div>\\r\\n        <!-- Run Engine Div Ends -->\\r\\n\\r\\n        <!-- Silver End of Day Div -->\\r\\n        <div class=\\\"col-2\\\">\\r\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" ngxDaterangepickerMd placeholder=\\\"Business Date\\\"\\r\\n            [(ngModel)]=\\\"businessDate\\\" [singleDatePicker]=\\\"true\\\" [autoApply]=\\\"true\\\" />\\r\\n        </div>\\r\\n        <div class=\\\"col-2 p-0\\\">\\r\\n          <button class=\\\"btn btn-pa\\\" type=\\\"button\\\" [disabled]=\\\"isLoading || generateFilesLoader\\\"\\r\\n            (click)=\\\"generateFiles()\\\">\\r\\n            <span *ngIf=\\\"generateFilesLoader\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\r\\n              aria-hidden=\\\"true\\\"></span>\\r\\n            Silver End of Day\\r\\n          </button>\\r\\n        </div>\\r\\n        <!-- Silver End of Day Div Ends -->\\r\\n\\r\\n        <!-- Clear Journal Div -->\\r\\n        <div class=\\\"col-4\\\">\\r\\n          <form class=\\\"float-right\\\" [formGroup]=\\\"clearJournalForm\\\" (ngSubmit)=\\\"openModal()\\\">\\r\\n            <div class=\\\"mr-3\\\">\\r\\n              <div class=\\\"form-check\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"system\\\" formControlName=\\\"system\\\" />\\r\\n                <label class=\\\"form-check-label\\\" for=\\\"system\\\">System Generated</label>\\r\\n              </div>\\r\\n              <div class=\\\"form-check\\\">\\r\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"user\\\" formControlName=\\\"user\\\" />\\r\\n                <label class=\\\"form-check-label\\\" for=\\\"user\\\">User Generated</label>\\r\\n              </div>\\r\\n              <button class=\\\"btn btn-danger mt-2\\\" [disabled]=\\\"validateClearForm()\\\" type=\\\"submit\\\">\\r\\n                Clear Journal\\r\\n              </button>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <!-- Clear Journal Div Ends -->\\r\\n\\r\\n      </div>\\r\\n      <!-- Tasks Div Ends -->\\r\\n\\r\\n      <!-- Posting Engine Messages Div -->\\r\\n      <div *ngIf=\\\"isLoading\\\">\\r\\n        <h3 class=\\\"mt-4\\\">Progress</h3>\\r\\n        <div #logScroll [ngStyle]=\\\"containerDiv\\\">\\r\\n          <div *ngFor=\\\"let message of messages\\\">\\r\\n            {{ message }}\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <!-- Posting Engine Messages Div Ends -->\\r\\n\\r\\n    </div>\\r\\n    <!-- Confirmation Modal Selector -->\\r\\n    <app-confirmation-modal #confirmModal (confirmDeletion)=\\\"clearJournal()\\\" [modalTitle]=\\\"'Clear Journal'\\\">\\r\\n    </app-confirmation-modal>\\r\\n    <!-- Confirmation Modal Selector Ends -->\\r\\n\\r\\n  </tab>\\r\\n  <!-- Tasks Tab Ends -->\\r\\n\\r\\n  <!-- File Uploads Tab -->\\r\\n  <tab heading=\\\"Uploads\\\">\\r\\n    <div [ngStyle]=\\\"style\\\">\\r\\n      <app-file-upload></app-file-upload>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <!-- File Uploads Tab Ends -->\\r\\n\\r\\n  <!-- Files Tab -->\\r\\n  <tab heading=\\\"Import / Export\\\" (selectTab)=\\\"activeFileManagement()\\\">\\r\\n    <div [ngStyle]=\\\"style\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <!-- File Management Div -->\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <app-file-management *ngIf=\\\"fileManagementActive\\\"></app-file-management>\\r\\n        </div>\\r\\n        <!-- File Management Div Ends -->\\r\\n\\r\\n        <!-- Silver File Management -->\\r\\n        <div class=\\\"col-6\\\">\\r\\n          <app-silver-file-management *ngIf=\\\"fileManagementActive\\\"></app-silver-file-management>\\r\\n        </div>\\r\\n        <!-- Silver File Management Ends -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </tab>\\r\\n  <!-- Files Tab Ends -->\\r\\n\\r\\n  <!-- File Exception Tab -->\\r\\n  <tab heading=\\\"Export Exceptions\\\" (selectTab)=\\\"activeExportException()\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n        <app-file-exception *ngIf=\\\"exportExceptionActive\\\"></app-file-exception>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- File Exception Tab Ends -->\\r\\n  </tab>\\r\\n\\r\\n  <!-- Services Status Tab -->\\r\\n  <tab heading=\\\"Services Status\\\" (selectTab)=\\\"activeServicesStatus()\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n        <app-services-status *ngIf=\\\"servicesStatus\\\"></app-services-status>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Services Status Tab Ends -->\\r\\n  </tab>\\r\\n\\r\\n  <!-- Services Log Tab -->\\r\\n  <tab heading=\\\"Services Log\\\" (selectTab)=\\\"activeServicesLog()\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n        <app-services-log *ngIf=\\\"servicesLog\\\"></app-services-log>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- Services Log Tab Ends -->\\r\\n  </tab>\\r\\n</tabset>\\r\\n<!-- Main Tab View Ends -->\"","export default \"<div [ngStyle]=\\\"styleForHeight\\\">\\r\\n    <lp-services-log [getLogsUrl]=\\\"getLogsUrl\\\" [viewFileUrl]=\\\"viewFileUrl\\\" [downloadFileUrl]=\\\"downloadFileUrl\\\">\\r\\n    </lp-services-log>\\r\\n</div>\"","export default \"<div *ngIf=\\\"!show\\\" class=\\\"d-flex justify-content-center align-items-center height-50vh\\\">\\r\\n  <lp-loading></lp-loading>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"form_wrapper\\\" *ngIf=\\\"show\\\">\\r\\n  <div class=\\\"d-flex justify-content-between title-bg-color\\\">\\r\\n    <div>\\r\\n      <h3>List of Services</h3>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"icon-wrap\\\">\\r\\n      <h2><i class=\\\"fa fa-refresh\\\" aria-hidden=\\\"true\\\" (click)=\\\"loadService()\\\"></i></h2>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-wrapper\\\" *ngFor=\\\"let service of listOfServices\\\">\\r\\n    <div>\\r\\n      <div class=\\\"w-100 d-flex flex-row justify-content-between\\\">\\r\\n        <div class=\\\"fz-20 label-p\\\">\\r\\n          <p>{{ service.serviceName }}</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"status\\\" [ngClass]=\\\"{\\r\\n            'color-primary': service.status == 'Running',\\r\\n            'bc-red': service.status == 'Stopped'\\r\\n          }\\\">\\r\\n          <span>{{ service.status }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<!-- Action Buttons Div -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"ml-3\\\">\\r\\n    <h4>Silver Files (S3)</h4>\\r\\n  </div>\\r\\n  <div class=\\\"ml-auto mr-3\\\">\\r\\n    <app-grid-utils [gridOptions]=\\\"filesGridOptions\\\" (refresh)=\\\"refreshFilesGrid()\\\" [excelParams]=\\\"excelParams\\\">\\r\\n    </app-grid-utils>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- AG Grid for Silver Files -->\\r\\n<div [ngStyle]=\\\"styleForLogsHight\\\">\\r\\n  <ag-grid-angular class=\\\"w-100 h-100 ag-theme-balham\\\" [gridOptions]=\\\"filesGridOptions\\\"\\r\\n    [getContextMenuItems]=\\\"getContextMenuItems\\\">\\r\\n  </ag-grid-angular>\\r\\n  <!----- Action buttons Template Starts ----->\\r\\n  <ng-template #actionButtons let-row>\\r\\n    <button class=\\\"btn ml-5 grid-btn width-15 height-30px\\\" (click)=\\\"downloadFile(row)\\\" tooltip=\\\"View\\\" placement=\\\"auto\\\"\\r\\n      container=\\\"body\\\">\\r\\n      <i class=\\\"fa fa-download\\\" aria-hidden=\\\"true\\\"></i>\\r\\n    </button>\\r\\n  </ng-template>\\r\\n  <!----- Action buttons Template Ends ----->\\r\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vb3BlcmF0aW9ucy9maWxlLWV4Y2VwdGlvbi9maWxlLWV4Y2VwdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, AfterViewInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { GridOptions, ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { take } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { GridLayoutMenuComponent } from 'lp-toolkit';\r\nimport { GridId, GridName } from 'src/shared/utils/AppEnums';\r\nimport * as moment from 'moment';\r\nimport { TemplateRendererComponent } from 'src/app/template-renderer/template-renderer.component';\r\nimport { DataService } from 'src/services/common/data.service';\r\nimport { FileManagementApiService } from 'src/services/file-management-api.service';\r\nimport { SideBar, HeightStyle, AutoSizeAllColumns } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-file-exception',\r\n  templateUrl: './file-exception.component.html',\r\n  styleUrls: ['./file-exception.component.scss']\r\n})\r\nexport class FileExceptionComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('actionButtons', { static: false }) actionButtons: TemplateRef<any>;\r\n\r\n  isEngineRunning = false;\r\n  hideGrid = false;\r\n  gridOptions: GridOptions;\r\n  detailCellRendererParams;\r\n  gridLayouts: any;\r\n  rowData: any;\r\n  invalidRecordJson = null;\r\n\r\n  styleForHeight = HeightStyle(180);\r\n\r\n  constructor(\r\n    private fileManagementApiService: FileManagementApiService,\r\n    private toastrService: ToastrService,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // this.isEngineRunning = this.postingEngineService.getStatus();\r\n    this.initGrid();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataService.flag$.subscribe(obj => {\r\n      this.hideGrid = obj;\r\n      if (!this.hideGrid) {\r\n        this.getFileExceptionData();\r\n      }\r\n    });\r\n  }\r\n\r\n  initGrid() {\r\n    this.gridOptions = {\r\n      rowData: null,\r\n      pinnedBottomRowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      rowGroupPanelShow: 'after',\r\n      pivotPanelShow: 'after',\r\n      pivotRowTotals: 'after',\r\n      pivotColumnGroupTotals: 'after',\r\n      animateRows: true,\r\n      enableFilter: true,\r\n      suppressHorizontalScroll: false,\r\n      suppressColumnVirtualisation: true,\r\n      alignedGrids: [],\r\n      masterDetail: true,\r\n      detailCellRendererParams: {\r\n        detailGridOptions: {\r\n          columnDefs: [\r\n            { field: 'referenceNumber' },\r\n            { field: 'rowNumber', type: 'numericColumn' },\r\n            {\r\n              headerName: 'Actions',\r\n              cellRendererFramework: TemplateRendererComponent,\r\n              cellRendererParams: {\r\n                ngTemplate: this.actionButtons\r\n              }\r\n            }\r\n          ],\r\n          onFirstDataRendered(params) {\r\n            params.api.sizeColumnsToFit();\r\n          }\r\n        },\r\n        getDetailRowData: params => {\r\n          params.successCallback(params.data.exceptionList);\r\n        },\r\n        onGridReady: params => {},\r\n        onFirstDataRendered: params => {\r\n          AutoSizeAllColumns(params);\r\n          params.api.sizeColumnsToFit();\r\n        },\r\n        defaultColDef: {\r\n          sortable: true,\r\n          resizable: true,\r\n          filter: true\r\n        }\r\n      }\r\n    } as GridOptions;\r\n    this.gridOptions.sideBar = SideBar(\r\n      GridId.fileExceptionId,\r\n      GridName.fileException,\r\n      this.gridOptions\r\n    );\r\n  }\r\n\r\n  customizeColumns() {\r\n    const colDefs: Array<ColDef | ColGroupDef> = [\r\n      {\r\n        field: 'id',\r\n        headerName: 'File Exception Id',\r\n        hide: true\r\n      },\r\n      {\r\n        field: 'fileName',\r\n        headerName: 'File Name',\r\n        cellRenderer: 'agGroupCellRenderer'\r\n      },\r\n      {\r\n        field: 'businessDate',\r\n        headerName: 'Business Date'\r\n      },\r\n      {\r\n        field: 'source',\r\n        headerName: 'Source'\r\n      },\r\n      {\r\n        field: 'exceptionCount',\r\n        headerName: 'Count',\r\n        type: 'numericColumn'\r\n      }\r\n    ];\r\n    this.gridOptions.api.setColumnDefs(colDefs);\r\n  }\r\n\r\n  getFileExceptionData() {\r\n    this.fileManagementApiService\r\n      .getInvalidExportRecords()\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        resp => {\r\n          if (resp.isSuccessful) {\r\n            this.gridLayouts = resp.payload;\r\n            this.rowData = resp.payload.map(data => ({\r\n              fileId: data.FileId,\r\n              fileExceptionId: data.FileExceptionId,\r\n              fileName: data.FileName,\r\n              source: data.Source,\r\n              businessDate: moment(data.BusinessDate).format('YYYY-MM-DD'),\r\n              exceptionCount: data.Exceptions,\r\n              exceptionList: data.ExceptionList.map(d => ({\r\n                referenceNumber: d.Reference,\r\n                rowNumber: JSON.parse(d.Record).RowNumber,\r\n                record: d.Record\r\n              }))\r\n            }));\r\n          }\r\n          this.gridOptions.api.setRowData(this.rowData);\r\n\r\n          AutoSizeAllColumns(this.gridOptions);\r\n          this.gridOptions.api.sizeColumnsToFit();\r\n        },\r\n        error => {\r\n          this.toastrService.error('Something went wrong. Try again later!');\r\n        }\r\n      );\r\n    this.customizeColumns();\r\n  }\r\n\r\n  viewLayout(row) {\r\n    this.invalidRecordJson = JSON.parse(row.record);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vb3BlcmF0aW9ucy9maWxlLW1hbmFnZW1lbnQvZmlsZS1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, AfterViewInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { GridOptions, ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { GridLayoutMenuComponent } from 'lp-toolkit';\r\nimport { GridId, GridName } from 'src/shared/utils/AppEnums';\r\nimport * as moment from 'moment';\r\nimport { TemplateRendererComponent } from '../../../template-renderer/template-renderer.component';\r\nimport { FileManagementApiService } from 'src/services/file-management-api.service';\r\nimport { File } from 'src/shared/models/files';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { ContextMenu } from 'src/shared/Models/common';\r\nimport { SideBar, Style, AutoSizeAllColumns, HeightStyle } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-file-management',\r\n  templateUrl: './file-management.component.html',\r\n  styleUrls: ['./file-management.component.scss']\r\n})\r\nexport class FileManagementComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('actionButtons', { static: false }) actionButtons: TemplateRef<any>;\r\n\r\n  filesGridOptions: GridOptions;\r\n  files: File[];\r\n\r\n  excelParams = {\r\n    fileName: 'File Management',\r\n    sheetName: 'First Sheet',\r\n    columnKeys: [\r\n      'name',\r\n      'action',\r\n      'source',\r\n      'statistics',\r\n      'businessDate',\r\n      'actionStartDate',\r\n      'actionEndDate'\r\n    ]\r\n  };\r\n\r\n  style = Style;\r\n\r\n  styleForLogsHeight = HeightStyle(220);\r\n\r\n  constructor(\r\n    private fileManagementApiService: FileManagementApiService,\r\n    private toastrService: ToastrService\r\n  ) {\r\n    this.initGrid();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n    this.getFiles();\r\n  }\r\n\r\n  initGrid() {\r\n    this.filesGridOptions = {\r\n      rowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      animateRows: true,\r\n      enableFilter: true,\r\n      suppressHorizontalScroll: false,\r\n      suppressColumnVirtualisation: true,\r\n      alignedGrids: [],\r\n      onGridReady: params => {},\r\n      onFirstDataRendered: params => {\r\n        AutoSizeAllColumns(params);\r\n      }\r\n    } as GridOptions;\r\n    this.filesGridOptions.getRowStyle = params => {\r\n      if (params.data.exceptions) {\r\n        return { backgroundColor: '#ffcfcf' };\r\n      }\r\n    };\r\n    this.filesGridOptions.sideBar = SideBar(GridId.filesId, GridName.files, this.filesGridOptions);\r\n  }\r\n\r\n  setColDefs() {\r\n    const colDefs: Array<ColDef | ColGroupDef> = [\r\n      {\r\n        field: 'id',\r\n        headerName: 'Id',\r\n        hide: true\r\n      },\r\n      {\r\n        field: 'name',\r\n        headerName: 'File Name',\r\n        sortable: true,\r\n        filter: true,\r\n        enableRowGroup: true,\r\n        resizable: true\r\n      },\r\n      {\r\n        field: 'path',\r\n        headerName: 'Path',\r\n        hide: true\r\n      },\r\n      {\r\n        field: 'fileActionId',\r\n        headerName: 'File Action Id',\r\n        hide: true\r\n      },\r\n      {\r\n        field: 'action',\r\n        headerName: 'Action',\r\n        sortable: true,\r\n        filter: true,\r\n        resizable: true\r\n      },\r\n      {\r\n        field: 'source',\r\n        headerName: 'Source',\r\n        sortable: true,\r\n        filter: true,\r\n        resizable: true\r\n      },\r\n      {\r\n        field: 'statistics',\r\n        headerName: 'Statistics',\r\n        sortable: true,\r\n        filter: true,\r\n        resizable: true,\r\n        type: 'numericColumn'\r\n      },\r\n      {\r\n        field: 'businessDate',\r\n        headerName: 'Business Date',\r\n        sortable: true,\r\n        filter: true,\r\n        enableRowGroup: true,\r\n        resizable: true\r\n      },\r\n      {\r\n        field: 'actionStartDate',\r\n        headerName: 'Start Date',\r\n        sortable: true,\r\n        filter: true\r\n      },\r\n      {\r\n        field: 'actionEndDate',\r\n        headerName: 'End Date',\r\n        sortable: true,\r\n        filter: true\r\n      },\r\n      {\r\n        headerName: 'View',\r\n        cellRendererFramework: TemplateRendererComponent,\r\n        cellRendererParams: {\r\n          ngTemplate: this.actionButtons\r\n        }\r\n      }\r\n    ];\r\n    this.filesGridOptions.api.setColumnDefs(colDefs);\r\n  }\r\n\r\n  getFiles() {\r\n    this.fileManagementApiService.getFiles().subscribe(result => {\r\n      this.files = result.payload.map(item => ({\r\n        id: item.id,\r\n        name: item.name,\r\n        path: item.path,\r\n        source: item.source,\r\n        statistics: item.statistics,\r\n        fileActionId: item.file_action_id,\r\n        action: item.action,\r\n        actionStartDate: moment(item.action_start_date).format('MMM-DD-YYYY hh:mm:ss'),\r\n        actionEndDate: moment(item.action_end_date).format('MMM-DD-YYYY hh:mm:ss'),\r\n        businessDate: moment(item.business_date).format('MMM-DD-YYYY hh:mm:ss'),\r\n        exceptions: item.exceptions\r\n      }));\r\n      this.filesGridOptions.api.setRowData(this.files);\r\n    });\r\n    this.setColDefs();\r\n  }\r\n\r\n  refreshFilesGrid() {\r\n    this.filesGridOptions.api.showLoadingOverlay();\r\n    this.getFiles();\r\n  }\r\n\r\n  getContextMenuItems = (params: Array<ContextMenu>) => {\r\n    const process = [\r\n      {\r\n        name: 'Process',\r\n        action: () => {\r\n          this.processFile(params);\r\n        }\r\n      }\r\n    ];\r\n    return GetContextMenu(false, process, true, null, params);\r\n  };\r\n\r\n  setGroupingStateForFiles(value: boolean) {\r\n    this.filesGridOptions.api.forEachNode((node, index) => {\r\n      if (node.group) {\r\n        node.setExpanded(value);\r\n      }\r\n    });\r\n  }\r\n\r\n  processFile(params) {\r\n    const local = this;\r\n    this.toastrService.success('File Processing is Started');\r\n    const obj = {\r\n      fileId: params.node.data.id,\r\n      action: 'Processing'\r\n    };\r\n    this.fileManagementApiService.updateAction(obj).subscribe(resp => {\r\n      if (resp.isSuccessful) {\r\n        local.getFiles();\r\n      }\r\n    });\r\n  }\r\n\r\n  downloadFile(file) {}\r\n}\r\n","export default \"/******************************\\n****  Component UI Styles  ****\\n******************************/\\n.file-input {\\n  padding: 0.2rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9vcGVyYXRpb25zL2ZpbGUtdXBsb2FkL0M6XFxVc2Vyc1xcbGF0dGlcXGRldmVsb3BtZW50XFxsaWdodHBvaW50XFxmaW5hbmNlXFxmcm9udGVuZGFwcC9zcmNcXGFwcFxcbWFpblxcb3BlcmF0aW9uc1xcZmlsZS11cGxvYWRcXGZpbGUtdXBsb2FkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYWluL29wZXJhdGlvbnMvZmlsZS11cGxvYWQvZmlsZS11cGxvYWQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OzhCQUFBO0FBR0E7RUFDRSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tYWluL29wZXJhdGlvbnMvZmlsZS11cGxvYWQvZmlsZS11cGxvYWQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbioqKiogIENvbXBvbmVudCBVSSBTdHlsZXMgICoqKipcclxuKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG4uZmlsZS1pbnB1dCB7XHJcbiAgcGFkZGluZzogMC4ycmVtO1xyXG59XHJcbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbioqKiogIENvbXBvbmVudCBVSSBTdHlsZXMgICoqKipcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5maWxlLWlucHV0IHtcbiAgcGFkZGluZzogMC4ycmVtO1xufSJdfQ== */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { GridOptions, ColGroupDef, ColDef } from 'ag-grid-community';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { GridLayoutMenuComponent } from 'lp-toolkit';\r\n/* Services/Components Imports */\r\nimport { ConfirmationModalComponent } from 'src/shared/Component/confirmation-modal/confirmation-modal.component';\r\nimport { FinanceServiceProxy } from 'src/services/service-proxies';\r\nimport { FundTheoreticalApiService } from 'src/services/fund-theoretical-api.service';\r\nimport { DataDictionary } from '../../../../shared/utils/DataDictionary';\r\nimport { IgnoreFields, HeightStyle } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.scss']\r\n})\r\nexport class FileUploadComponent implements OnInit {\r\n  @ViewChild('confirmationModal', { static: false }) confirmationModal: ConfirmationModalComponent;\r\n  @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n\r\n  styleForLogsHeight = HeightStyle(220);\r\n  uploadGrid: GridOptions;\r\n  displayGrid = false;\r\n  fxRateDupList: any;\r\n  ignoreFields = IgnoreFields;\r\n  columns: Array<ColDef | ColGroupDef>;\r\n  rowData: any[] = [];\r\n\r\n  fileToUpload: File = null;\r\n  disableFileUpload = true;\r\n  uploadLoader = false;\r\n  confirmStatus = false;\r\n  fileType = 'Select a File Type';\r\n  fileTypes = ['Monthly Performance', 'Daily PnL', 'Market Prices', 'FxRates'];\r\n\r\n  constructor(\r\n    private financeService: FinanceServiceProxy,\r\n    private fundTheoreticalApiService: FundTheoreticalApiService,\r\n    private toastrService: ToastrService,\r\n    private dataDictionary: DataDictionary\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.initGrid();\r\n  }\r\n\r\n  initGrid() {\r\n    this.uploadGrid = {\r\n      rowData: null,\r\n      pinnedBottomRowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      rowSelection: 'single',\r\n      rowGroupPanelShow: 'after',\r\n      pivotPanelShow: 'after',\r\n      pivotRowTotals: 'after',\r\n      pivotColumnGroupTotals: 'after',\r\n      animateRows: true,\r\n      singleClickEdit: true,\r\n      getExternalFilterState: () => {\r\n        return {};\r\n      },\r\n      onRowSelected: params => {},\r\n      clearExternalFilter: () => {},\r\n      onGridReady: params => {\r\n        params.api.sizeColumnsToFit();\r\n      },\r\n      onFirstDataRendered: params => {\r\n        params.api.sizeColumnsToFit();\r\n      },\r\n      defaultColDef: {\r\n        resizable: true\r\n      }\r\n    } as GridOptions;\r\n  }\r\n\r\n  changeFileType(selectedFileType) {\r\n    this.disableFileUpload =\r\n      this.fileToUpload === null || this.fileType === 'Select a File Type' ? true : false;\r\n    this.fileType = selectedFileType;\r\n  }\r\n\r\n  onFileInput(files: FileList) {\r\n    this.disableFileUpload = this.fileType === 'Select a File Type' ? true : false;\r\n    this.fileToUpload = files.item(0);\r\n  }\r\n\r\n  uploadRows() {\r\n    if (this.fileType === 'Monthly Performance') {\r\n      this.uploadLoader = true;\r\n      this.fundTheoreticalApiService.getMonthlyPerformanceStatus().subscribe(response => {\r\n        this.uploadLoader = false;\r\n        if (response.isSuccessful) {\r\n          if (response.payload) {\r\n            this.confirmStatus = true;\r\n            this.confirmationModal.showModal();\r\n          } else {\r\n            this.uploadMonthlyPerformance();\r\n          }\r\n        } else {\r\n          this.toastrService.error('Something went wrong! Try Again.');\r\n        }\r\n      });\r\n    } else if (this.fileType === 'Daily PnL') {\r\n      this.uploadDailyUnofficialPnl();\r\n    } else if (this.fileType === 'Market Prices') {\r\n      this.uploadMarketData();\r\n    } else if (this.fileType === 'FxRates') {\r\n      this.uploadFxRatesData();\r\n    }\r\n  }\r\n\r\n  confirmReset() {\r\n    if (this.confirmStatus) {\r\n      this.uploadMonthlyPerformance();\r\n    }\r\n  }\r\n\r\n  uploadMonthlyPerformance() {\r\n    this.uploadLoader = true;\r\n    this.financeService.uploadMonthlyPerformance(this.fileToUpload).subscribe(response => {\r\n      this.uploadLoader = false;\r\n      this.confirmStatus = false;\r\n      if (response.isSuccessful) {\r\n        this.displayGrid = false;\r\n        this.clearForm();\r\n        this.toastrService.success('File uploaded successfully!');\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadDailyUnofficialPnl() {\r\n    this.uploadLoader = true;\r\n    this.fundTheoreticalApiService\r\n      .uploadDailyUnofficialPnl(this.fileToUpload)\r\n      .subscribe(response => {\r\n        this.uploadLoader = false;\r\n        if (response.isSuccessful) {\r\n          this.displayGrid = false;\r\n          this.clearForm();\r\n          this.toastrService.success('File uploaded successfully!');\r\n        } else {\r\n          this.toastrService.error('Something went wrong! Try Again.');\r\n        }\r\n      });\r\n  }\r\n\r\n  uploadMarketData() {\r\n    this.uploadLoader = true;\r\n    this.fundTheoreticalApiService.uploadMarketPriceData(this.fileToUpload).subscribe(response => {\r\n      this.uploadLoader = false;\r\n      if (response.isSuccessful && response.statusCode == 200) {\r\n        this.displayGrid = false;\r\n        this.clearForm();\r\n        this.toastrService.success('File uploaded successfully!');\r\n      } else if (response.isSuccessful && response.statusCode == 403) {\r\n        this.displayGrid = true;\r\n\r\n        this.columns = response.meta;\r\n        this.rowData = response.payload;\r\n\r\n        this.customizeColumns(this.columns);\r\n        this.uploadGrid.api.setRowData(this.rowData);\r\n\r\n        this.clearForm();\r\n        this.toastrService.error('Error: Duplication Detected!');\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadFxRatesData() {\r\n    this.uploadLoader = true;\r\n    this.fundTheoreticalApiService.uploadFxData(this.fileToUpload).subscribe(response => {\r\n      this.uploadLoader = false;\r\n      this.displayGrid = false;\r\n      if (response.isSuccessful && response.statusCode == 200) {\r\n        this.clearForm();\r\n        this.toastrService.success('File uploaded successfully!');\r\n      } else if (response.isSuccessful && response.statusCode == 403) {\r\n        this.displayGrid = true;\r\n\r\n        this.columns = response.meta;\r\n        this.rowData = response.payload;\r\n\r\n        this.customizeColumns(this.columns);\r\n        this.uploadGrid.api.setRowData(this.rowData);\r\n\r\n        this.clearForm();\r\n        this.toastrService.error('Error: Duplication Detected!');\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n  Drives the columns that will be defined on the UI, and what can be done with those fields\r\n  */\r\n  customizeColumns(columns: any) {\r\n    const storeColumns = [];\r\n    for (let i = 1; i < columns.length; i++) {\r\n      storeColumns.push(this.dataDictionary.column(columns[i].field, true));\r\n    }\r\n    this.uploadGrid.api.setColumnDefs(storeColumns);\r\n  }\r\n\r\n  clearForm() {\r\n    this.disableFileUpload = true;\r\n    this.fileType = 'Select a File Type';\r\n    this.fileToUpload = null;\r\n    this.fileInput.nativeElement.value = '';\r\n  }\r\n}\r\n","export default \"body,\\nhtml {\\n  margin: 0;\\n  padding: 0;\\n  height: 100%;\\n}\\n\\n.modal {\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n\\n.modal-backdrop {\\n  position: relative;\\n}\\n\\n.modal-dialog {\\n  position: relative;\\n  width: auto;\\n  max-width: 600px;\\n  margin: 10px;\\n}\\n\\n.modal-sm {\\n  max-width: 300px;\\n}\\n\\n.modal-lg {\\n  max-width: 900px;\\n}\\n\\n@media (min-width: 768px) {\\n  .modal-dialog {\\n    margin: 30px auto;\\n  }\\n}\\n\\n@media (min-width: 320px) {\\n  .modal-sm {\\n    margin-right: auto;\\n    margin-left: auto;\\n  }\\n}\\n\\n@media (min-width: 620px) {\\n  .modal-dialog {\\n    margin-right: auto;\\n    margin-left: auto;\\n  }\\n\\n  .modal-lg {\\n    margin-right: 10px;\\n    margin-left: 10px;\\n  }\\n}\\n\\n@media (min-width: 920px) {\\n  .modal-lg {\\n    margin-right: auto;\\n    margin-left: auto;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9vcGVyYXRpb25zL0M6XFxVc2Vyc1xcbGF0dGlcXGRldmVsb3BtZW50XFxsaWdodHBvaW50XFxmaW5hbmNlXFxmcm9udGVuZGFwcC9zcmNcXGFwcFxcbWFpblxcb3BlcmF0aW9uc1xcb3BlcmF0aW9ucy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbWFpbi9vcGVyYXRpb25zL29wZXJhdGlvbnMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsU0FBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0FDQ0Y7O0FERUE7RUFDRSxvQ0FBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7QUNDRjs7QURFQTtFQUNFLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0FDQ0Y7O0FERUE7RUFDRTtJQUNFLGlCQUFBO0VDQ0Y7QUFDRjs7QURFQTtFQUNFO0lBQ0Usa0JBQUE7SUFDQSxpQkFBQTtFQ0FGO0FBQ0Y7O0FER0E7RUFDRTtJQUNFLGtCQUFBO0lBQ0EsaUJBQUE7RUNERjs7RURHQTtJQUNFLGtCQUFBO0lBQ0EsaUJBQUE7RUNBRjtBQUNGOztBREdBO0VBQ0U7SUFDRSxrQkFBQTtJQUNBLGlCQUFBO0VDREY7QUFDRiIsImZpbGUiOiJzcmMvYXBwL21haW4vb3BlcmF0aW9ucy9vcGVyYXRpb25zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSxcclxuaHRtbCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubW9kYWwge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcclxufVxyXG5cclxuLm1vZGFsLWJhY2tkcm9wIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5tb2RhbC1kaWFsb2cge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB3aWR0aDogYXV0bztcclxuICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuLm1vZGFsLXNtIHtcclxuICBtYXgtd2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG4ubW9kYWwtbGcge1xyXG4gIG1heC13aWR0aDogOTAwcHg7XHJcbn1cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4gIC5tb2RhbC1kaWFsb2cge1xyXG4gICAgbWFyZ2luOiAzMHB4IGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMzIwcHgpIHtcclxuICAubW9kYWwtc20ge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogNjIwcHgpIHtcclxuICAubW9kYWwtZGlhbG9nIHtcclxuICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIH1cclxuICAubW9kYWwtbGcge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTIwcHgpIHtcclxuICAubW9kYWwtbGcge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgfVxyXG59XHJcbiIsImJvZHksXG5odG1sIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5tb2RhbCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40KTtcbn1cblxuLm1vZGFsLWJhY2tkcm9wIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4ubW9kYWwtZGlhbG9nIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogYXV0bztcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWFyZ2luOiAxMHB4O1xufVxuXG4ubW9kYWwtc20ge1xuICBtYXgtd2lkdGg6IDMwMHB4O1xufVxuXG4ubW9kYWwtbGcge1xuICBtYXgtd2lkdGg6IDkwMHB4O1xufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLm1vZGFsLWRpYWxvZyB7XG4gICAgbWFyZ2luOiAzMHB4IGF1dG87XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAzMjBweCkge1xuICAubW9kYWwtc20ge1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDYyMHB4KSB7XG4gIC5tb2RhbC1kaWFsb2cge1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgfVxuXG4gIC5tb2RhbC1sZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTIwcHgpIHtcbiAgLm1vZGFsLWxnIHtcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIH1cbn0iXX0= */\"","import { Component, OnInit, AfterViewChecked, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport * as moment from 'moment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { GridLayoutMenuComponent } from 'lp-toolkit';\r\nimport { ConfirmationModalComponent } from 'src/shared/Component/confirmation-modal/confirmation-modal.component';\r\nimport { GridId, GridName } from 'src/shared/utils/AppEnums';\r\nimport { SideBar, Style, AutoSizeAllColumns, HeightStyle } from 'src/shared/utils/Shared';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { ContextMenu } from 'src/shared/Models/common';\r\nimport { PostingEngineService } from 'src/services/common/posting-engine.service';\r\nimport { PostingEngineApiService } from 'src/services/posting-engine-api.service';\r\nimport { JournalApiService } from 'src/services/journal-api.service';\r\nimport { FileManagementApiService } from 'src/services/file-management-api.service';\r\n\r\n@Component({\r\n  selector: 'app-operations',\r\n  templateUrl: './operations.component.html',\r\n  styleUrls: ['./operations.component.scss']\r\n})\r\nexport class OperationsComponent implements OnInit, AfterViewChecked {\r\n  @ViewChild('confirmModal', { static: false }) confirmationModal: ConfirmationModalComponent;\r\n  @ViewChild('logScroll', { static: false }) private logContainer: ElementRef;\r\n\r\n  public gridOptions: GridOptions;\r\n  public rowData: any[];\r\n  private bottomOptions: any = { alignedGrids: [] };\r\n\r\n  isLoading = false;\r\n\r\n  postingEngineStatus = false;\r\n  fileManagementActive = false;\r\n  exportExceptionActive = false;\r\n  servicesStatus = false;\r\n  servicesLog = false;\r\n\r\n  periodPlaceholder: { name: 'Select a Period' };\r\n  selectedPeriod: { name: string };\r\n  clearJournalForm: FormGroup;\r\n  key: any;\r\n  messages: string;\r\n  progress: number;\r\n  symbol: string;\r\n  page: number;\r\n  pageSize: number;\r\n  accountSearch = { id: undefined };\r\n  valueFilter: number;\r\n  sortColum: string;\r\n  sortDirection: string;\r\n  businessDate: any;\r\n  generateFilesLoader = false;\r\n\r\n  excelParams = {\r\n    fileName: 'Journal Logs',\r\n    sheetName: 'First Sheet',\r\n    columnKeys: ['rundate', 'action_on', 'action']\r\n  };\r\n\r\n  periods = [\r\n    { name: 'Latest' },\r\n    { name: 'Today' },\r\n    { name: 'MTD' },\r\n    { name: 'YTD' },\r\n    { name: 'ITD' }\r\n  ];\r\n\r\n  style = Style;\r\n\r\n  styleForLogsHeight = HeightStyle(220);\r\n\r\n  styleForTasksHeight = HeightStyle(180);\r\n\r\n  containerDiv = {\r\n    border: '1px solid #eee',\r\n    padding: '4px',\r\n    marginTop: '20px',\r\n    width: '100%',\r\n    height: 'calc(100vh - 326px)',\r\n    boxSizing: 'border-box',\r\n    overflow: 'scroll'\r\n  };\r\n\r\n  /*\r\n  We can define how we need to show the data here, as this is a log file we should group by the rundate\r\n  */\r\n  columnDefs = [\r\n    {\r\n      field: 'rundate',\r\n      headerName: 'Run Date',\r\n      sortable: true,\r\n      filter: true,\r\n      enableRowGroup: true,\r\n      resizable: true\r\n    },\r\n    {\r\n      field: 'action_on',\r\n      headerName: 'Action On',\r\n      sortable: true,\r\n      filter: true,\r\n      resizable: true\r\n    },\r\n    { field: 'action', headerName: 'Action', sortable: true, filter: true }\r\n  ];\r\n\r\n  constructor(\r\n    private fileManagementApiService: FileManagementApiService,\r\n    private postingEngineApiService: PostingEngineApiService,\r\n    private journalApiService: JournalApiService,\r\n    private toastrService: ToastrService,\r\n    private postingEngineService: PostingEngineService\r\n  ) {\r\n    this.initGrid();\r\n  }\r\n\r\n  ngOnInit() {\r\n    /*\r\n    Align Scroll of Grid and Footer Grid\r\n    */\r\n    // this.gridOptions.alignedGrids.push(this.bottomOptions);\r\n    // this.bottomOptions.alignedGrids.push(this.gridOptions);\r\n    /*\r\n    Params for API Request\r\n    */\r\n    this.symbol = 'ALL';\r\n    this.page = 0;\r\n    this.pageSize = 0;\r\n    this.accountSearch.id = 0;\r\n    this.valueFilter = 0;\r\n    this.sortColum = '';\r\n    this.sortDirection = '';\r\n\r\n    this.getJournalLogs();\r\n    this.buildForm();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    try {\r\n      this.logContainer.nativeElement.scrollTop = this.logContainer.nativeElement.scrollHeight;\r\n    } catch (err) {}\r\n  }\r\n\r\n  initGrid() {\r\n    this.gridOptions = {\r\n      rowData: null,\r\n      columnDefs: this.columnDefs,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      getContextMenuItems: params => this.getContextMenuItems(params),\r\n      getExternalFilterState: () => {\r\n        return {};\r\n      },\r\n      onGridReady: params => {},\r\n      onFirstDataRendered: params => {\r\n        AutoSizeAllColumns(params);\r\n        params.api.sizeColumnsToFit();\r\n      },\r\n      enableFilter: true,\r\n      animateRows: true,\r\n      alignedGrids: [],\r\n      suppressHorizontalScroll: true,\r\n      defaultColDef: {\r\n        sortable: true,\r\n        resizable: true\r\n      }\r\n    } as GridOptions;\r\n    this.gridOptions.sideBar = SideBar(GridId.logsId, GridName.logs, this.gridOptions);\r\n  }\r\n\r\n  private getJournalLogs() {\r\n    this.journalApiService\r\n      .getJournalLogs(\r\n        this.symbol,\r\n        this.page,\r\n        this.pageSize,\r\n        this.accountSearch.id,\r\n        this.valueFilter,\r\n        this.sortColum,\r\n        this.sortDirection\r\n      )\r\n      .subscribe(result => {\r\n        this.rowData = [];\r\n        this.rowData = result.payload.map(item => ({\r\n          rundate: moment(item.rundate).format('MMM-DD-YYYY'),\r\n          action_on: moment(item.action_on).format('MMM-DD-YYYY hh:mm:ss'),\r\n          action: item.action\r\n        }));\r\n        this.gridOptions.api.setRowData(this.rowData);\r\n      });\r\n  }\r\n\r\n  refreshGrid() {\r\n    this.gridOptions.api.showLoadingOverlay();\r\n    this.getJournalLogs();\r\n  }\r\n\r\n  buildForm() {\r\n    this.clearJournalForm = new FormGroup({\r\n      user: new FormControl(false),\r\n      system: new FormControl(false)\r\n    });\r\n  }\r\n\r\n  validateClearForm() {\r\n    return !this.clearJournalForm.value.system && !this.clearJournalForm.value.user ? true : false;\r\n  }\r\n\r\n  /* This needs to call out to the Posting Engine and invoke the process,\r\n     this is a fire and forget as the process may take a little while to complete\r\n  */\r\n  runEngine() {\r\n    this.postingEngineStatus = true;\r\n    this.postingEngineApiService\r\n      .startPostingEngine(this.selectedPeriod.name)\r\n      .subscribe(response => {\r\n        if (response.IsRunning) {\r\n          this.isLoading = true;\r\n          this.key = response.key;\r\n          this.postingEngineService.changeStatus(true);\r\n          this.postingEngineService.checkProgress();\r\n        }\r\n        this.key = response.key;\r\n        this.getLogs();\r\n      });\r\n  }\r\n\r\n  generateFiles() {\r\n    const obj = {\r\n      businessDate: this.businessDate != null ? this.businessDate.startDate : null\r\n    };\r\n    this.generateFilesLoader = true;\r\n    this.fileManagementApiService.generateFiles(obj).subscribe(response => {\r\n      this.generateFilesLoader = false;\r\n      if (response.isSuccessful) {\r\n        this.toastrService.success('Files are Generated for Processing');\r\n      } else {\r\n        this.toastrService.error('Something went wrong, Please try again later.');\r\n      }\r\n    });\r\n  }\r\n\r\n  getLogs() {\r\n    setTimeout(() => {\r\n      this.postingEngineApiService.runningEngineStatus(this.key).subscribe(response => {\r\n        this.isLoading = response.Status;\r\n        this.progress = response.progress;\r\n        this.messages = response.message === '' ? this.messages : response.message;\r\n        if (response.Status) {\r\n          this.getLogs();\r\n        } else {\r\n          this.messages = '';\r\n        }\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  activeLogs() {\r\n    this.postingEngineApiService.isPostingEngineRunning().subscribe(response => {\r\n      if (response.IsRunning) {\r\n        this.isLoading = true;\r\n        this.key = response.key;\r\n        this.getLogs();\r\n      }\r\n    });\r\n  }\r\n\r\n  activeFileManagement() {\r\n    this.fileManagementActive = true;\r\n  }\r\n\r\n  activeExportException() {\r\n    this.exportExceptionActive = true;\r\n  }\r\n\r\n  activeServicesStatus() {\r\n    this.servicesStatus = true;\r\n  }\r\n\r\n  activeServicesLog() {\r\n    this.servicesLog = true;\r\n  }\r\n\r\n  openModal() {\r\n    this.confirmationModal.showModal();\r\n  }\r\n\r\n  clearJournal() {\r\n    const type: string =\r\n      this.clearJournalForm.value.system && this.clearJournalForm.value.user\r\n        ? 'both'\r\n        : this.clearJournalForm.value.system\r\n        ? 'system'\r\n        : 'user';\r\n    this.postingEngineApiService.clearJournals(type).subscribe(response => {\r\n      if (response.isSuccessful) {\r\n        this.toastrService.success('Journals are cleared successfully!');\r\n      } else {\r\n        this.toastrService.error('Failed to clear Journals!');\r\n      }\r\n    });\r\n    this.clearForm();\r\n  }\r\n\r\n  clearForm() {\r\n    this.clearJournalForm.reset();\r\n  }\r\n\r\n  getContextMenuItems(params): Array<ContextMenu> {\r\n    // (isDefaultItems, addDefaultItem, isCustomItems, addCustomItems, params)\r\n    return GetContextMenu(true, null, true, null, params);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TabsModule } from 'ngx-bootstrap';\r\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\r\nimport { LpToolkitModule } from 'lp-toolkit';\r\n\r\nimport { OperationsComponent } from './operations.component';\r\nimport { FileExceptionComponent } from '../operations/file-exception/file-exception.component';\r\nimport { FileManagementComponent } from '../operations/file-management/file-management.component';\r\nimport { FileUploadComponent } from '../operations/file-upload/file-upload.component';\r\nimport { SilverFileManagementComponent } from 'src/app/main/operations/silver-file-management/silver-file-management.component';\r\nimport { ServicesStatusComponent } from 'src/app/main/operations/services-status/services-status.component';\r\nimport { ServicesLogComponent } from './services-log/services-log.component';\r\n\r\nimport { OperationsRoutes } from './operations.route';\r\nimport { SharedModule } from 'src/app/shared.module';\r\n\r\nconst operationsComponents = [\r\n  OperationsComponent,\r\n  FileExceptionComponent,\r\n  FileManagementComponent,\r\n  FileUploadComponent,\r\n  SilverFileManagementComponent,\r\n  ServicesStatusComponent,\r\n  ServicesLogComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...operationsComponents],\r\n  exports: [...operationsComponents, SharedModule],\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxDaterangepickerMd.forRoot({\r\n      applyLabel: 'Okay',\r\n      firstDay: 1\r\n    }),\r\n    RouterModule.forChild(OperationsRoutes),\r\n    LpToolkitModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class OperationsModule {}\r\n","import { Route } from '@angular/router';\r\nimport { OperationsComponent } from './operations.component';\r\n\r\nexport const OperationsRoutes: Route[] = [\r\n    {\r\n        path: '',\r\n        component: OperationsComponent\r\n\r\n    }\r\n]","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vb3BlcmF0aW9ucy9zZXJ2aWNlcy1sb2cvc2VydmljZXMtbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { HeightStyle } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-services-log',\r\n  templateUrl: './services-log.component.html',\r\n  styleUrls: ['./services-log.component.scss']\r\n})\r\nexport class ServicesLogComponent implements OnInit {\r\n  // tslint:disable-next-line: no-string-literal\r\n  baseUrl = window['config']\r\n    ? // tslint:disable-next-line: no-string-literal\r\n      window['config'].remoteServerUrl\r\n    : environment.testCaseRemoteServerUrl;\r\n\r\n  getLogsUrl = `${this.baseUrl}/log/files`;\r\n  downloadFileUrl = `${this.baseUrl}/log/download?fileName=`;\r\n  viewFileUrl = `${this.baseUrl}/log/view?numberOfLines=100&fileName=`;\r\n\r\n  styleForHeight = HeightStyle(200);\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","export default \".card-wrapper {\\n  max-width: 100%;\\n  margin: 4px;\\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\\n  display: block;\\n  position: relative;\\n  padding: 12px;\\n  border-radius: 4px;\\n  background: #fff;\\n  color: rgba(0, 0, 0, 0.87);\\n  font-family: Roboto, \\\"Helvetica Neue\\\", sans-serif;\\n  box-shadow: 0 2px 1px -1px rgba(0, 0, 0, 0.2), 0 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\\n}\\n\\n.form_wrapper {\\n  box-sizing: border-box;\\n  margin: 65px auto;\\n  width: 100%;\\n  padding-bottom: 2px;\\n  box-shadow: 0 5px 15px 1px rgba(0, 0, 0, 0.6), 0 0 200px 1px rgba(255, 255, 255, 0.5);\\n  border-radius: 2px;\\n}\\n\\n.form_wrapper h3 {\\n  padding: 20px;\\n  background: #eee;\\n}\\n\\n.icon-wrap {\\n  margin: 17px 14px;\\n}\\n\\n.m-top-10 {\\n  margin-top: 10%;\\n}\\n\\n.title-bg-color {\\n  background: #eee;\\n}\\n\\n.status {\\n  border-radius: 25px;\\n  color: #ffffff;\\n  height: 29px;\\n  width: 95px;\\n  padding: 2px 19px;\\n}\\n\\n.label-p {\\n  color: rgba(0, 0, 0, 0.87);\\n  font-weight: 500;\\n  padding: 0 0 0 34px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9vcGVyYXRpb25zL3NlcnZpY2VzLXN0YXR1cy9DOlxcVXNlcnNcXGxhdHRpXFxkZXZlbG9wbWVudFxcbGlnaHRwb2ludFxcZmluYW5jZVxcZnJvbnRlbmRhcHAvc3JjXFxhcHBcXG1haW5cXG9wZXJhdGlvbnNcXHNlcnZpY2VzLXN0YXR1c1xcc2VydmljZXMtc3RhdHVzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYWluL29wZXJhdGlvbnMvc2VydmljZXMtc3RhdHVzL3NlcnZpY2VzLXN0YXR1cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxXQUFBO0VBQ0EseURBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLDBCQUFBO0VBQ0EsaURBQUE7RUFDQSwrR0FBQTtBQ0NGOztBREdBO0VBQ0Usc0JBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtFQUNBLHFGQUFBO0VBQ0Esa0JBQUE7QUNBRjs7QURHQTtFQUNFLGFBQUE7RUFDQSxnQkFBQTtBQ0FGOztBREdBO0VBQ0UsaUJBQUE7QUNBRjs7QURHQTtFQUNFLGVBQUE7QUNBRjs7QURHQTtFQUNFLGdCQUFBO0FDQUY7O0FER0E7RUFDRSxtQkFBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0FDQUY7O0FER0E7RUFDRSwwQkFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7QUNBRiIsImZpbGUiOiJzcmMvYXBwL21haW4vb3BlcmF0aW9ucy9zZXJ2aWNlcy1zdGF0dXMvc2VydmljZXMtc3RhdHVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQtd3JhcHBlciB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbjogNHB4O1xyXG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMjgwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcGFkZGluZzogMTJweDtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcclxuICBmb250LWZhbWlseTogUm9ib3RvLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xyXG4gIGJveC1zaGFkb3c6IDAgMnB4IDFweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAxcHggMXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSxcclxuICAgIDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XHJcbn1cclxuXHJcbi5mb3JtX3dyYXBwZXIge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgbWFyZ2luOiA2NXB4IGF1dG87XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZy1ib3R0b206IDJweDtcclxuICBib3gtc2hhZG93OiAwIDVweCAxNXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuNiksIDAgMCAyMDBweCAxcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcclxufVxyXG5cclxuLmZvcm1fd3JhcHBlciBoMyB7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBiYWNrZ3JvdW5kOiAjZWVlO1xyXG59XHJcblxyXG4uaWNvbi13cmFwIHtcclxuICBtYXJnaW46IDE3cHggMTRweDtcclxufVxyXG5cclxuLm0tdG9wLTEwIHtcclxuICBtYXJnaW4tdG9wOiAxMCU7XHJcbn1cclxuXHJcbi50aXRsZS1iZy1jb2xvciB7XHJcbiAgYmFja2dyb3VuZDogI2VlZTtcclxufVxyXG5cclxuLnN0YXR1cyB7XHJcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBoZWlnaHQ6IDI5cHg7XHJcbiAgd2lkdGg6IDk1cHg7XHJcbiAgcGFkZGluZzogMnB4IDE5cHg7XHJcbn1cclxuXHJcbi5sYWJlbC1wIHtcclxuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIHBhZGRpbmc6IDAgMCAwIDM0cHg7XHJcbn1cclxuIiwiLmNhcmQtd3JhcHBlciB7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luOiA0cHg7XG4gIHRyYW5zaXRpb246IGJveC1zaGFkb3cgMjgwbXMgY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMTJweDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbiAgZm9udC1mYW1pbHk6IFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBzYW5zLXNlcmlmO1xuICBib3gtc2hhZG93OiAwIDJweCAxcHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMiksIDAgMXB4IDFweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4xMik7XG59XG5cbi5mb3JtX3dyYXBwZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDY1cHggYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctYm90dG9tOiAycHg7XG4gIGJveC1zaGFkb3c6IDAgNXB4IDE1cHggMXB4IHJnYmEoMCwgMCwgMCwgMC42KSwgMCAwIDIwMHB4IDFweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuLmZvcm1fd3JhcHBlciBoMyB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG59XG5cbi5pY29uLXdyYXAge1xuICBtYXJnaW46IDE3cHggMTRweDtcbn1cblxuLm0tdG9wLTEwIHtcbiAgbWFyZ2luLXRvcDogMTAlO1xufVxuXG4udGl0bGUtYmctY29sb3Ige1xuICBiYWNrZ3JvdW5kOiAjZWVlO1xufVxuXG4uc3RhdHVzIHtcbiAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIGhlaWdodDogMjlweDtcbiAgd2lkdGg6IDk1cHg7XG4gIHBhZGRpbmc6IDJweCAxOXB4O1xufVxuXG4ubGFiZWwtcCB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBwYWRkaW5nOiAwIDAgMCAzNHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServicesStatusApiService } from '../../../../services/services-status-api.service';\r\n\r\n@Component({\r\n  selector: 'app-services-status',\r\n  templateUrl: './services-status.component.html',\r\n  styleUrls: ['./services-status.component.scss']\r\n})\r\nexport class ServicesStatusComponent implements OnInit {\r\n  show = false;\r\n\r\n  constructor(public servicesStatusApiService: ServicesStatusApiService) {}\r\n\r\n  listOfServices: any[];\r\n\r\n  ngOnInit() {\r\n    this.servicesStatusApiService.loadServices();\r\n    this.servicesStatusApiService.servicesStatusArr$.subscribe(data => {\r\n      this.listOfServices = data;\r\n      this.show = true;\r\n    });\r\n  }\r\n\r\n  loadService() {\r\n    this.show = false;\r\n    this.servicesStatusApiService.loadServices();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vb3BlcmF0aW9ucy9zaWx2ZXItZmlsZS1tYW5hZ2VtZW50L3NpbHZlci1maWxlLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, AfterViewInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { GridOptions, ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { GridLayoutMenuComponent } from 'lp-toolkit';\r\nimport { GridId, GridName } from 'src/shared/utils/AppEnums';\r\nimport * as moment from 'moment';\r\nimport { TemplateRendererComponent } from '../../../template-renderer/template-renderer.component';\r\nimport { FileManagementApiService } from 'src/services/file-management-api.service';\r\nimport { SilverFile } from 'src/shared/Models/silver-file';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { ContextMenu } from 'src/shared/Models/common';\r\nimport { SideBar, Style, AutoSizeAllColumns } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-silver-file-management',\r\n  templateUrl: './silver-file-management.component.html',\r\n  styleUrls: ['./silver-file-management.component.scss']\r\n})\r\nexport class SilverFileManagementComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('actionButtons', { static: false }) actionButtons: TemplateRef<any>;\r\n\r\n  filesGridOptions: GridOptions;\r\n  files: SilverFile[];\r\n\r\n  excelParams = {\r\n    fileName: 'Silver File',\r\n    sheetName: 'First Sheet',\r\n    columnKeys: ['name', 'uploadDate', 'size']\r\n  };\r\n\r\n  style = Style;\r\n\r\n  styleForLogsHight = {\r\n    marginTop: '20px',\r\n    width: '100%',\r\n    height: 'calc(100vh - 220px)',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  constructor(private fileManagementApiService: FileManagementApiService) {\r\n    this.initGrid();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n    this.getSilverFiles();\r\n  }\r\n\r\n  initGrid() {\r\n    this.filesGridOptions = {\r\n      rowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      animateRows: true,\r\n      enableFilter: true,\r\n      suppressHorizontalScroll: false,\r\n      suppressColumnVirtualisation: true,\r\n      alignedGrids: [],\r\n      onGridReady: params => {},\r\n      onFirstDataRendered: params => {\r\n        AutoSizeAllColumns(params);\r\n      }\r\n    } as GridOptions;\r\n    this.filesGridOptions.sideBar = SideBar(\r\n      GridId.silverFilesId,\r\n      GridName.silverFiles,\r\n      this.filesGridOptions\r\n    );\r\n  }\r\n\r\n  setColDefs() {\r\n    const colDefs: Array<ColDef | ColGroupDef> = [\r\n      {\r\n        field: 'name',\r\n        headerName: 'Name',\r\n        sortable: true,\r\n        filter: true,\r\n        resizable: true\r\n      },\r\n      {\r\n        field: 'uploadDate',\r\n        headerName: 'Upload Date',\r\n        sortable: true,\r\n        filter: true,\r\n        enableRowGroup: true,\r\n        resizable: true\r\n      },\r\n      {\r\n        field: 'size',\r\n        headerName: 'Size',\r\n        resizable: true,\r\n        type: 'numericColumn'\r\n      },\r\n      {\r\n        headerName: 'View',\r\n        cellRendererFramework: TemplateRendererComponent,\r\n        cellRendererParams: {\r\n          ngTemplate: this.actionButtons\r\n        }\r\n      }\r\n    ];\r\n    this.filesGridOptions.api.setColumnDefs(colDefs);\r\n  }\r\n\r\n  getSilverFiles() {\r\n    this.fileManagementApiService.getSilverFiles().subscribe(result => {\r\n      this.files = result.payload.map(item => ({\r\n        name: item.Name,\r\n        uploadDate: moment(item.UploadDate).format('MMM-DD-YYYY hh:mm:ss'),\r\n        size: item.Size\r\n      }));\r\n      this.filesGridOptions.api.setRowData(this.files);\r\n    });\r\n    this.setColDefs();\r\n  }\r\n\r\n  refreshFilesGrid() {\r\n    this.filesGridOptions.api.showLoadingOverlay();\r\n    this.getSilverFiles();\r\n  }\r\n\r\n  getContextMenuItems = (params: Array<ContextMenu>) => {\r\n    return GetContextMenu(true, null, true, null, params);\r\n  };\r\n\r\n  downloadFile(file) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../environments/environment.prod';\r\nimport { Observable } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileManagementApiService {\r\n  private baseUrl: string;\r\n\r\n  private selectedAccounList = new BehaviorSubject(null);\r\n  selectedAccounList$ = this.selectedAccounList.asObservable();\r\n\r\n  private dispatchModifications = new BehaviorSubject(null);\r\n  dispatchModifications$ = this.dispatchModifications.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseUrl = window['config'] ? window['config'].remoteServerUrl : environment.testCaseRemoteServerUrl;\r\n  }\r\n\r\n  /*\r\n  Get All Files\r\n  */\r\n  getFiles() {\r\n    const url = this.baseUrl + '/fileManagement/files';\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  updateAction(body) {\r\n    const url = this.baseUrl + '/fileManagement/UpdateFileAction';\r\n    return this.http.post(url, body).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Get Silver Files\r\n  */\r\n  getSilverFiles() {\r\n    const url = this.baseUrl + '/fileManagement/s3Files';\r\n    return this.http.get(url).pipe(map((response: any) => response));\r\n  }\r\n\r\n  /*\r\n  Generate Files\r\n  */\r\n  generateFiles(body) {\r\n    const url = this.baseUrl + '/fileManagement/silverEndOfDay';\r\n    return this.http.post(url, body).pipe(map((response: any) => response));\r\n  }\r\n\r\n  getInvalidExportRecords(): Observable<any> {\r\n    const url = this.baseUrl + '/fileManagement/FileExportException';\r\n    return this.http.get(url);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}