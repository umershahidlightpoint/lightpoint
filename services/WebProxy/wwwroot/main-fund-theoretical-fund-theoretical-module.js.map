{"version":3,"sources":["./src/app/main/fund-theoretical/daily-pnl/daily-pnl.component.html","./src/app/main/fund-theoretical/fund-theoretical.component.html","./src/app/main/fund-theoretical/fx-rates/fx-rates.component.html","./src/app/main/fund-theoretical/market-prices/market-prices.component.html","./src/app/main/fund-theoretical/tax-rates/tax-rate-modal/tax-rate-modal.component.html","./src/app/main/fund-theoretical/tax-rates/tax-rates.component.html","./src/app/main/fund-theoretical/daily-pnl/daily-pnl.component.scss","./src/app/main/fund-theoretical/daily-pnl/daily-pnl.component.ts","./src/app/main/fund-theoretical/fund-theoretical.component.scss","./src/app/main/fund-theoretical/fund-theoretical.component.ts","./src/app/main/fund-theoretical/fund-theoretical.module.ts","./src/app/main/fund-theoretical/fund-theoretical.route.ts","./src/app/main/fund-theoretical/fx-rates/fx-rates.component.scss","./src/app/main/fund-theoretical/fx-rates/fx-rates.component.ts","./src/app/main/fund-theoretical/market-prices/market-prices.component.scss","./src/app/main/fund-theoretical/market-prices/market-prices.component.ts","./src/app/main/fund-theoretical/tax-rates/tax-rate-modal/tax-rate-modal.component.scss","./src/app/main/fund-theoretical/tax-rates/tax-rate-modal/tax-rate-modal.component.ts","./src/app/main/fund-theoretical/tax-rates/tax-rates.component.scss","./src/app/main/fund-theoretical/tax-rates/tax-rates.component.ts"],"names":[],"mappings":"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","file":"main-fund-theoretical-fund-theoretical-module.js","sourcesContent":["export default \"<!-- Action Buttons Form -->\\r\\n<form>\\r\\n\\r\\n  <!-- Form Row -->\\r\\n  <div class=\\\"form-row\\\">\\r\\n\\r\\n    <!-- Date Filter -->\\r\\n    <div class=\\\"col-auto\\\">\\r\\n      <input ngxDaterangepickerMd class=\\\"form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Choose date\\\"\\r\\n        [(ngModel)]=\\\"selected\\\" name=\\\"selectedDaterange\\\" [ranges]=\\\"ranges\\\" [showClearButton]=\\\"true\\\"\\r\\n        [alwaysShowCalendars]=\\\"true\\\" (ngModelChange)=\\\"ngModelChange($event)\\\" [keepCalendarOpeningWithRange]=\\\"true\\\" />\\r\\n    </div>\\r\\n    <!-- Date Filter Ends -->\\r\\n\\r\\n    <!-- Clear Filters -->\\r\\n    <div class=\\\"col-auto\\\">\\r\\n      <button (click)=\\\"clearExternalFilter()\\\" class=\\\"btn btn-pa\\\" tooltip=\\\"Clear\\\" placement=\\\"top\\\">\\r\\n        <i class=\\\"fa fa-remove\\\"></i>\\r\\n      </button>\\r\\n    </div>\\r\\n    <!-- Clear Filters Ends -->\\r\\n\\r\\n    <!-- Grid Utils Container -->\\r\\n    <div class=\\\"ml-auto mr-3\\\">\\r\\n\\r\\n      <!-- Grid Utils Starts -->\\r\\n      <app-grid-utils class=\\\"mr-0\\\" [utilsConfig]=\\\"utilsConfig\\\" [gridOptions]=\\\"dailyPnlGrid\\\" (refresh)=\\\"refreshGrid()\\\">\\r\\n      </app-grid-utils>\\r\\n      <!-- Grid Utils Ends -->\\r\\n\\r\\n      <!-- Expand/Collapse Button -->\\r\\n      <ng-template #tooltipTemplate>{{dailyPnLConfig.chartsView ? 'Expand' : 'Collapse'}}</ng-template>\\r\\n      <button class=\\\"btn btn-pa\\\" [disabled]=\\\"disableCharts\\\" [tooltip]=\\\"tooltipTemplate\\\" placement=\\\"top\\\"\\r\\n        (click)=\\\"dailyPnLConfig.chartsView = !dailyPnLConfig.chartsView\\\">\\r\\n        <i class=\\\"fa\\\"\\r\\n          [ngClass]=\\\"{'fa-arrow-right': dailyPnLConfig.chartsView, 'fa-arrow-left': !dailyPnLConfig.chartsView}\\\"></i>\\r\\n      </button>\\r\\n      <!-- Expand/Collapse Button Ends -->\\r\\n\\r\\n    </div>\\r\\n    <!-- Grid Utils Container Ends -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Form Row Ends -->\\r\\n\\r\\n</form>\\r\\n<!-- Action Buttons Form Ends -->\\r\\n\\r\\n<!-- Grid/Charts Row Starts -->\\r\\n<div [ngStyle]=\\\"styleForHeight\\\">\\r\\n\\r\\n  <!-- Main Split Row Starts -->\\r\\n  <div class=\\\"split-area row h-100\\\">\\r\\n\\r\\n    <!-- AS Split Main Container -->\\r\\n    <as-split class=\\\"pl-15 pr-15\\\" disabled=\\\"false\\\" direction=\\\"horizontal\\\" [useTransition]=\\\"dailyPnLConfig.useTransition\\\"\\r\\n      (dragEnd)=\\\"applyPageLayout($event)\\\" (transitionEnd)=\\\"applyPageLayout($event)\\\">\\r\\n\\r\\n      <!-- Daily PnL Split Area -->\\r\\n      <as-split-area [visible]=\\\"dailyPnLConfig.dailyPnLView\\\" [size]=\\\"dailyPnLConfig.dailyPnLSize\\\" order=\\\"1\\\">\\r\\n\\r\\n        <ag-grid-angular class=\\\"h-100 ag-theme-balham\\\" [gridOptions]=\\\"dailyPnlGrid\\\">\\r\\n        </ag-grid-angular>\\r\\n\\r\\n      </as-split-area>\\r\\n      <!-- Daily PnL Split Area Ends -->\\r\\n\\r\\n      <!-- Charts Split Area -->\\r\\n      <as-split-area [visible]=\\\"dailyPnLConfig.chartsView\\\" [size]=\\\"dailyPnLConfig.chartsSize\\\" order=\\\"2\\\">\\r\\n\\r\\n        <app-calculation-graphs *ngIf=\\\"dailyPnLConfig.chartsView\\\" class=\\\"w-100 h-100\\\" [chartObject]=\\\"graphObject\\\"\\r\\n          [mode]=\\\"'single'\\\">\\r\\n        </app-calculation-graphs>\\r\\n\\r\\n      </as-split-area>\\r\\n      <!-- Charts Split Area Ends -->\\r\\n\\r\\n    </as-split>\\r\\n    <!-- AS Split Main Container Ends -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Main Split Row Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- Grid/Charts Row Ends -->\"","export default \"<!-- Hide Grid -->\\r\\n<div *ngIf=\\\"hideGrid\\\" [ngStyle]=\\\"containerDiv\\\">\\r\\n  <div class=\\\"d-flex align-items-center justify-content-center\\\">\\r\\n    <h1> Posting Engine is Running. Please Wait. </h1>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- Hide Grid Ends -->\\r\\n\\r\\n<!-- Main Container -->\\r\\n<div [ngStyle]=\\\"{ 'display': hideGrid ? 'none' : 'initial' } \\\">\\r\\n\\r\\n  <!-- Tab Set -->\\r\\n  <tabset class=\\\"tab-color\\\">\\r\\n\\r\\n    <!-- Fund Theoretical Tab Starts -->\\r\\n    <tab heading=\\\"Fund Theoretical\\\" (selectTab)=\\\"activeFundTheretical()\\\">\\r\\n\\r\\n      <!-- Fund Theoretical Container -->\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n\\r\\n        <!-- Action Buttons Form Tag Starts -->\\r\\n        <form>\\r\\n\\r\\n          <!-- Form Row Div Starts -->\\r\\n          <div class=\\\"row\\\">\\r\\n\\r\\n            <!-- Date Picker Div Starts -->\\r\\n            <div class=\\\"col-auto\\\">\\r\\n              <input ngxDaterangepickerMd class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Choose date\\\"\\r\\n                [(ngModel)]=\\\"selectedDate\\\" (ngModelChange)=\\\"changeDate($event)\\\" name=\\\"selectedDate\\\"\\r\\n                [singleDatePicker]=\\\"true\\\" [autoApply]=\\\"true\\\" autocomplete=\\\"off\\\" [showDropdowns]=\\\"true\\\" />\\r\\n            </div>\\r\\n            <!-- Date Picker Div Ends -->\\r\\n\\r\\n            <!-- Generate Rows Div Starts -->\\r\\n            <div class=\\\"col-auto\\\">\\r\\n              <button class=\\\"btn btn-pa\\\" type=\\\"button\\\" (click)=\\\"generateRows()\\\" [disabled]=\\\"!generateFundsDate\\\">\\r\\n                Generate Rows\\r\\n              </button>\\r\\n            </div>\\r\\n            <!-- Generate Rows Div Ends -->\\r\\n\\r\\n            <!-- Action Buttons Div Starts -->\\r\\n            <div class=\\\"ml-auto mr-3\\\">\\r\\n\\r\\n              <button class=\\\"btn btn-pa ml-2\\\" type=\\\"button\\\" [disabled]=\\\"disableCommit || commitLoader\\\"\\r\\n                (click)=\\\"commitPerformanceData()\\\">\\r\\n                Commit\\r\\n                <span *ngIf=\\\"commitLoader\\\" class=\\\"spinner-border spinner-border-sm\\\" role=\\\"status\\\"\\r\\n                  aria-hidden=\\\"true\\\"></span>\\r\\n              </button>\\r\\n\\r\\n              <ng-template #tooltipTemplate>{{fundTheoreticalConfig.chartsView ? 'Expand' : 'Collapse'}}</ng-template>\\r\\n              <button class=\\\"btn btn-pa ml-2\\\" [disabled]=\\\"disableCharts\\\" [tooltip]=\\\"tooltipTemplate\\\" placement=\\\"top\\\"\\r\\n                (click)=\\\"onToggleChartsView()\\\">\\r\\n                <i class=\\\"fa\\\"\\r\\n                  [ngClass]=\\\"{'fa-arrow-right': fundTheoreticalConfig.chartsView, 'fa-arrow-left': !fundTheoreticalConfig.chartsView}\\\"></i>\\r\\n              </button>\\r\\n\\r\\n            </div>\\r\\n            <!-- Action Buttons Div Ends -->\\r\\n\\r\\n          </div>\\r\\n          <!-- Form Row Div Ends -->\\r\\n\\r\\n        </form>\\r\\n        <!-- Action Buttons Form Tag Ends -->\\r\\n\\r\\n        <!-- Style For Height Container Starts -->\\r\\n        <div [ngStyle]=\\\"styleForHeight\\\">\\r\\n\\r\\n          <!-- Main Split Row Starts -->\\r\\n          <div class=\\\"split-area row h-100\\\">\\r\\n\\r\\n            <!-- AS Split Main Container -->\\r\\n            <as-split class=\\\"pl-15 pr-15\\\" disabled=\\\"false\\\" direction=\\\"horizontal\\\"\\r\\n              [useTransition]=\\\"fundTheoreticalConfig.useTransition\\\" (dragEnd)=\\\"applyPageLayout($event)\\\"\\r\\n              (transitionEnd)=\\\"applyPageLayout($event)\\\">\\r\\n\\r\\n              <!-- Fund Theoretical Split Area -->\\r\\n              <as-split-area [visible]=\\\"fundTheoreticalConfig.fundTheoreticalView\\\"\\r\\n                [size]=\\\"fundTheoreticalConfig.fundTheoreticalSize\\\" order=\\\"1\\\">\\r\\n\\r\\n                <!-- Fund Theoretical Grid -->\\r\\n                <ag-grid-angular class=\\\"h-100 ag-theme-balham\\\" [gridOptions]=\\\"fundTheoreticalGrid\\\">\\r\\n                </ag-grid-angular>\\r\\n\\r\\n              </as-split-area>\\r\\n              <!-- Fund Theoretical Split Area Ends -->\\r\\n\\r\\n              <!-- Charts Split Area -->\\r\\n              <as-split-area [visible]=\\\"fundTheoreticalConfig.chartsView\\\" [size]=\\\"fundTheoreticalConfig.chartsSize\\\"\\r\\n                order=\\\"2\\\">\\r\\n\\r\\n                <app-calculation-graphs *ngIf=\\\"fundTheoreticalConfig.chartsView\\\" class=\\\"w-50 h-50\\\"\\r\\n                  [chartObject]=\\\"graphObject\\\" [mode]=\\\"'many'\\\">\\r\\n                </app-calculation-graphs>\\r\\n\\r\\n              </as-split-area>\\r\\n              <!-- Charts Split Area Ends -->\\r\\n\\r\\n            </as-split>\\r\\n            <!-- AS Split Main Container Ends -->\\r\\n\\r\\n          </div>\\r\\n          <!-- Main Split Row Ends -->\\r\\n\\r\\n        </div>\\r\\n        <!-- Style For Height Container Ends -->\\r\\n\\r\\n      </div>\\r\\n      <!-- Fund Theoretical Container Ends -->\\r\\n\\r\\n    </tab>\\r\\n    <!-- Fund Theoretical Tab Ends -->\\r\\n\\r\\n    <!-- Daily PNL Tab Starts -->\\r\\n    <tab heading=\\\"Daily PnL\\\" (selectTab)=\\\"activeDailyPnL()\\\">\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n        <app-daily-pnl *ngIf=\\\"isDailyPnLActive\\\"></app-daily-pnl>\\r\\n      </div>\\r\\n    </tab>\\r\\n    <!-- Daily PNL Tab Ends -->\\r\\n\\r\\n    <!-- Tax Rate Tab Starts -->\\r\\n    <tab heading=\\\"Tax Rate\\\" (selectTab)=\\\"activeTaxRate()\\\">\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n        <app-tax-rates *ngIf=\\\"isTaxRateActive\\\"></app-tax-rates>\\r\\n      </div>\\r\\n    </tab>\\r\\n    <!-- Tax Rate Tab Ends -->\\r\\n\\r\\n    <!-- Tax Rate Tab Starts -->\\r\\n    <tab heading=\\\"Market Prices\\\" (selectTab)=\\\"activeMarketPrices()\\\">\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n        <app-market-prices *ngIf=\\\"isMarketPricesActive\\\"></app-market-prices>\\r\\n      </div>\\r\\n      <!-- Tax Rate Tab Ends -->\\r\\n    </tab>\\r\\n\\r\\n    <!-- Fx Rate Tab -->\\r\\n    <tab heading=\\\"Fx Rate\\\" (selectTab)=\\\"activeFxRate()\\\">\\r\\n      <div [ngStyle]=\\\"style\\\">\\r\\n        <app-fx-rates *ngIf=\\\"isFxRateActive\\\"></app-fx-rates>\\r\\n      </div>\\r\\n      <!-- Fx Rate Tab -->\\r\\n    </tab>\\r\\n\\r\\n  </tabset>\\r\\n  <!-- Tab Set Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- Main Container Ends -->\\r\\n\\r\\n<!-- Data Grid Modal -->\\r\\n<app-data-grid-modal #dataGridModal [gridTitle]=\\\"title\\\">\\r\\n</app-data-grid-modal>\\r\\n\\r\\n<!-- Confirmation Modal -->\\r\\n<app-confirmation-modal #confirmationModal [title]=\\\"'Reset Performance'\\\"\\r\\n  [description]=\\\"'All your changes will be lost.\\\\nAre you sure you want to reset performance?'\\\"\\r\\n  (confirmed)=\\\"confirmReset()\\\">\\r\\n</app-confirmation-modal>\\r\\n\\r\\n<!-- Date Picker Modal -->\\r\\n<app-date-picker-modal #datePickerModal (dateSelected)=\\\"addCustom($event)\\\" [modalTitle]=\\\"'Select a Date'\\\">\\r\\n</app-date-picker-modal>\"","export default \"<!-- Filters/Action Buttons Row -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Fund Filter -->\\r\\n  <!-- <div class=\\\"col-md-2\\\">\\r\\n    <select class=\\\"form-control\\\" [(ngModel)]=\\\"vRange\\\" [selectedIndex]=\\\"0\\\" (ngModelChange)=\\\"vChange($event)\\\">\\r\\n      <option *ngFor=\\\"let a of vRanges\\\" [ngValue]=\\\"a.Days\\\">\\r\\n        {{ a.Description }}\\r\\n      </option>\\r\\n    </select>\\r\\n  </div> -->\\r\\n  <!-- Fund Filter Ends -->\\r\\n\\r\\n  <!-- Symbol Filter -->\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <input type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Filter by Currency\\\" name=\\\"currency\\\"\\r\\n      [(ngModel)]=\\\"filterByCurrency\\\" (ngModelChange)=\\\"ngModelChangeSymbol($event)\\\" (keyup)=\\\"onSymbolKey($event)\\\"\\r\\n      class=\\\"form-control\\\" />\\r\\n  </div>\\r\\n  <!-- Symbol Filter Ends -->\\r\\n\\r\\n  <!-- Date Picker -->\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <input ngxDaterangepickerMd class=\\\"form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Choose date\\\"\\r\\n      [(ngModel)]=\\\"selectedDate\\\" name=\\\"selectedDaterange\\\" [showClearButton]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\"\\r\\n      (ngModelChange)=\\\"ngModelChange($event)\\\" [keepCalendarOpeningWithRange]=\\\"true\\\" />\\r\\n  </div>\\r\\n  <!-- Date Picker Ends -->\\r\\n\\r\\n  <!-- Clear Button -->\\r\\n  <div class=\\\"mr-auto\\\">\\r\\n    <button (click)=\\\"clearFilters()\\\" class=\\\"btn btn-pa\\\" tooltip=\\\"Clear\\\" placement=\\\"top\\\">\\r\\n      <i class=\\\"fa fa-remove\\\"></i>\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- Clear Button Ends -->\\r\\n\\r\\n  <!-- Action Buttons -->\\r\\n  <div class=\\\"ml-auto mr-3\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-pa mr-2\\\" type=\\\"button\\\" [disabled]=\\\"disableCommit\\\" (click)=\\\"commitMarketPriceData()\\\">\\r\\n      Commit\\r\\n    </button>\\r\\n\\r\\n    <!-- Grid Utils Starts -->\\r\\n    <app-grid-utils class=\\\"mr-0\\\" [utilsConfig]=\\\"utilsConfig\\\" [gridOptions]=\\\"fxRate\\\" (refresh)=\\\"refreshGrid()\\\">\\r\\n      <!-- Grid Utils Ends -->\\r\\n    </app-grid-utils>\\r\\n\\r\\n    <!-- Expand/Collapse Button -->\\r\\n    <ng-template #tooltipTemplate>{{fxRatesConfig.chartsView ? 'Expand' : 'Collapse'}}</ng-template>\\r\\n    <button class=\\\"btn btn-pa\\\" [disabled]=\\\"disableCharts\\\" [tooltip]=\\\"tooltipTemplate\\\" placement=\\\"top\\\"\\r\\n      (click)=\\\"onToggleChartsView()\\\">\\r\\n      <i class=\\\"fa\\\"\\r\\n        [ngClass]=\\\"{'fa-arrow-right': fxRatesConfig.chartsView, 'fa-arrow-left': !fxRatesConfig.chartsView}\\\"></i>\\r\\n    </button>\\r\\n    <!-- Expand/Collapse Button Ends -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Action Buttons Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- Filters/Action Buttons Row Ends -->\\r\\n\\r\\n<!-- Content Container -->\\r\\n<div [ngStyle]=\\\"styleForHeight\\\">\\r\\n\\r\\n  <!-- Main Split Row Starts -->\\r\\n  <div class=\\\"split-area row h-100\\\">\\r\\n\\r\\n    <!-- AS Split Main Container -->\\r\\n    <as-split class=\\\"pl-15 pr-15\\\" disabled=\\\"false\\\" direction=\\\"horizontal\\\" [useTransition]=\\\"fxRatesConfig.useTransition\\\"\\r\\n      (dragEnd)=\\\"applyPageLayout($event)\\\" (transitionEnd)=\\\"applyPageLayout($event)\\\">\\r\\n\\r\\n      <!-- FX Rates Split Area -->\\r\\n      <as-split-area [visible]=\\\"fxRatesConfig.fxRatesView\\\" [size]=\\\"fxRatesConfig.fxRatesSize\\\" order=\\\"1\\\">\\r\\n\\r\\n        <!-- FX Rates Grid -->\\r\\n        <ag-grid-angular class=\\\"h-100 ag-theme-balham\\\" [gridOptions]=\\\"fxRate\\\">\\r\\n        </ag-grid-angular>\\r\\n\\r\\n      </as-split-area>\\r\\n      <!-- FX Rates Split Area Ends -->\\r\\n\\r\\n      <!-- Charts Split Area -->\\r\\n      <as-split-area [visible]=\\\"fxRatesConfig.chartsView\\\" [size]=\\\"fxRatesConfig.chartsSize\\\" order=\\\"2\\\">\\r\\n\\r\\n        <app-calculation-graphs *ngIf=\\\"fxRatesConfig.chartsView\\\" class=\\\"w-50 h-75\\\" [chartObject]=\\\"graphObject\\\"\\r\\n          [mode]=\\\"'single'\\\">\\r\\n        </app-calculation-graphs>\\r\\n\\r\\n      </as-split-area>\\r\\n      <!-- Charts Split Area Ends -->\\r\\n\\r\\n    </as-split>\\r\\n    <!-- AS Split Main Container Ends -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Main Split Row Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- Content Container Ends -->\\r\\n\\r\\n<!-- Data Grid Modal -->\\r\\n<app-data-grid-modal #dataGridModal [gridTitle]=\\\"title\\\"></app-data-grid-modal>\"","export default \"<!-- Filters/Action Buttons Row -->\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n  <!-- Fund Filter -->\\r\\n  <!-- <div class=\\\"col-md-2\\\">\\r\\n    <select class=\\\"form-control\\\" [(ngModel)]=\\\"vRange\\\" [selectedIndex]=\\\"0\\\" (ngModelChange)=\\\"vChange($event)\\\">\\r\\n      <option *ngFor=\\\"let a of vRanges\\\" [ngValue]=\\\"a.Days\\\">\\r\\n        {{ a.Description }}\\r\\n      </option>\\r\\n    </select>\\r\\n  </div> -->\\r\\n  <!-- Fund Filter Ends -->\\r\\n\\r\\n  <!-- Symbol Filter -->\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <input type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Filter by Symbol\\\" name=\\\"symbol\\\" [(ngModel)]=\\\"filterBySymbol\\\"\\r\\n      (ngModelChange)=\\\"ngModelChangeSymbol($event)\\\" (keyup)=\\\"onSymbolKey($event)\\\" class=\\\"form-control\\\" />\\r\\n  </div>\\r\\n  <!-- Symbol Filter Ends -->\\r\\n\\r\\n  <!-- Date Picker -->\\r\\n  <div class=\\\"col-auto\\\">\\r\\n    <input ngxDaterangepickerMd class=\\\"form-control\\\" type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Choose date\\\"\\r\\n      [(ngModel)]=\\\"selectedDate\\\" name=\\\"selectedDaterange\\\" [showClearButton]=\\\"true\\\" [alwaysShowCalendars]=\\\"true\\\"\\r\\n      (ngModelChange)=\\\"ngModelChange($event)\\\" [keepCalendarOpeningWithRange]=\\\"true\\\" />\\r\\n  </div>\\r\\n  <!-- Date Picker Ends -->\\r\\n\\r\\n  <!-- Clear Button -->\\r\\n  <div class=\\\"mr-auto\\\">\\r\\n    <button (click)=\\\"clearFilters()\\\" class=\\\"btn btn-pa\\\" tooltip=\\\"Clear\\\" placement=\\\"top\\\">\\r\\n      <i class=\\\"fa fa-remove\\\"></i>\\r\\n    </button>\\r\\n  </div>\\r\\n  <!-- Clear Button Ends -->\\r\\n\\r\\n  <!-- Action Buttons -->\\r\\n  <div class=\\\"ml-auto mr-3\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-pa mr-2\\\" type=\\\"button\\\" [disabled]=\\\"disableCommit\\\" (click)=\\\"commitMarketPriceData()\\\">\\r\\n      Commit\\r\\n    </button>\\r\\n\\r\\n    <!-- Grid Utils -->\\r\\n    <app-grid-utils class=\\\"mr-0\\\" [utilsConfig]=\\\"utilsConfig\\\" [gridOptions]=\\\"marketPriceGrid\\\" (refresh)=\\\"refreshGrid()\\\">\\r\\n    </app-grid-utils>\\r\\n    <!-- Grid Utils Ends -->\\r\\n\\r\\n    <!-- Expand/Collapse Button -->\\r\\n    <ng-template #tooltipTemplate>{{marketPricesConfig.chartsView ? 'Expand' : 'Collapse'}}</ng-template>\\r\\n    <button class=\\\"btn btn-pa\\\" [disabled]=\\\"disableCharts\\\" [tooltip]=\\\"tooltipTemplate\\\" placement=\\\"top\\\"\\r\\n      (click)=\\\"onToggleChartsView()\\\">\\r\\n      <i class=\\\"fa\\\"\\r\\n        [ngClass]=\\\"{'fa-arrow-right': marketPricesConfig.chartsView, 'fa-arrow-left': !marketPricesConfig.chartsView}\\\"></i>\\r\\n    </button>\\r\\n    <!-- Expand/Collapse Button Ends -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Action Buttons Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- Filters/Action Buttons Row Ends -->\\r\\n\\r\\n<!-- Content Container -->\\r\\n<div [ngStyle]=\\\"styleForHeight\\\">\\r\\n\\r\\n  <!-- Main Split Row Starts -->\\r\\n  <div class=\\\"split-area row h-100\\\">\\r\\n\\r\\n    <!-- AS Split Main Container -->\\r\\n    <as-split class=\\\"pl-15 pr-15\\\" disabled=\\\"false\\\" direction=\\\"horizontal\\\"\\r\\n      [useTransition]=\\\"marketPricesConfig.useTransition\\\" (dragEnd)=\\\"applyPageLayout($event)\\\"\\r\\n      (transitionEnd)=\\\"applyPageLayout($event)\\\">\\r\\n\\r\\n      <!-- Market Prices Split Area -->\\r\\n      <as-split-area [visible]=\\\"marketPricesConfig.marketPricesView\\\" [size]=\\\"marketPricesConfig.marketPricesSize\\\"\\r\\n        order=\\\"1\\\">\\r\\n\\r\\n        <!-- Market Prices Grid -->\\r\\n        <ag-grid-angular class=\\\"h-100 ag-theme-balham\\\" [gridOptions]=\\\"marketPriceGrid\\\">\\r\\n        </ag-grid-angular>\\r\\n\\r\\n      </as-split-area>\\r\\n      <!-- Market Prices Split Area Ends -->\\r\\n\\r\\n      <!-- Charts Split Area -->\\r\\n      <as-split-area [visible]=\\\"marketPricesConfig.chartsView\\\" [size]=\\\"marketPricesConfig.chartsSize\\\" order=\\\"2\\\">\\r\\n\\r\\n        <app-calculation-graphs *ngIf=\\\"marketPricesConfig.chartsView\\\" class=\\\"w-50 h-75\\\" [chartObject]=\\\"graphObject\\\"\\r\\n          [mode]=\\\"'single'\\\">\\r\\n        </app-calculation-graphs>\\r\\n\\r\\n      </as-split-area>\\r\\n      <!-- Charts Split Area Ends -->\\r\\n\\r\\n    </as-split>\\r\\n    <!-- AS Split Main Container Ends -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Main Split Row Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- Content Container Ends -->\\r\\n\\r\\n<!-- Data Grid Modal -->\\r\\n<app-data-grid-modal #dataGridModal [gridTitle]=\\\"title\\\"></app-data-grid-modal>\\r\\n\\r\\n<!-- Create Security Modal -->\\r\\n<app-create-security #securityModal (modalClose)=\\\"closeSecurityModal()\\\"></app-create-security>\"","export default \"<!-- LP Modal -->\\r\\n<lp-modal #lpModal size=\\\"large\\\" [title]=\\\"editTaxRate ? 'Edit Tax Rate' : 'Add Tax Rate'\\\" [footerConfig]=\\\"footerConfig\\\"\\r\\n  (closed)=\\\"onCloseModal()\\\" (canceled)=\\\"onCloseModal()\\\" (confirmed)=\\\"form.ngSubmit.emit()\\\">\\r\\n\\r\\n  <!-- Modal Content -->\\r\\n  <div class=\\\"p-3\\\">\\r\\n\\r\\n    <!-- Tax Rate Form Starts -->\\r\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"saveTaxRate()\\\">\\r\\n\\r\\n      <!-- Date Range Picker Starts -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <!-- Date Label -->\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label> Tax Period </label>\\r\\n          </div>\\r\\n\\r\\n          <!-- Date Picker -->\\r\\n          <div *ngIf=\\\"!editTaxRate\\\" class=\\\"col-sm-9\\\">\\r\\n            <input ngxDaterangepickerMd class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Choose date\\\"\\r\\n              [(ngModel)]=\\\"selectedDate\\\" (ngModelChange)=\\\"changeDate($event)\\\" name=\\\"selectedDate\\\" [showDropdowns]=\\\"true\\\"\\r\\n              [autoApply]=\\\"true\\\" autocomplete=\\\"off\\\" [disabled]=\\\"editTaxRate\\\" />\\r\\n          </div>\\r\\n          <div *ngIf=\\\"editTaxRate\\\" class=\\\"col-sm-9\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"text\\\"\\r\\n              value=\\\"{{selectedDate.startDate | date:'yyyy-MM-dd'}} - {{selectedDate.endDate | date:'yyyy-MM-dd'}}\\\"\\r\\n              name=\\\"selectedDate\\\" [disabled]=\\\"editTaxRate\\\" />\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- Date Range Picker Ends -->\\r\\n\\r\\n      <!-- Long Term Tax Rate Starts -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <!-- Long Term Tax Rate Label -->\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label> Long Term Tax Rate </label>\\r\\n          </div>\\r\\n\\r\\n          <!-- Long Term Tax Rate Input -->\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"longTermTaxRate\\\" name=\\\"longTermTaxRate\\\" type=\\\"number\\\" step=\\\".07\\\">\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- Long Term Tax Rate Ends -->\\r\\n\\r\\n      <!-- Short Term Tax Rate Starts -->\\r\\n      <div class=\\\"form-group\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <!-- Short Term Tax Rate Label -->\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label> Short Term Tax Rate </label>\\r\\n          </div>\\r\\n\\r\\n          <!-- Short Term Tax Rate Input -->\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"shortTermTaxRate\\\" name=\\\"shortTermTaxRate\\\" type=\\\"number\\\" step=\\\".07\\\">\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- Short Term Tax Rate Div Ends -->\\r\\n\\r\\n      <!-- Short Term Period Starts-->\\r\\n      <div class=\\\"form-group\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <!-- Short Term Period Label -->\\r\\n          <div class=\\\"col-sm-3\\\">\\r\\n            <label> Short Term Period </label>\\r\\n          </div>\\r\\n\\r\\n          <!-- Short Term Period Input -->\\r\\n          <div class=\\\"col-sm-9\\\">\\r\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"shortTermPeriod\\\" name=\\\"shortTermPeriod\\\" type=\\\"number\\\" step=\\\".07\\\">\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- Short Term Period Ends-->\\r\\n\\r\\n    </form>\\r\\n    <!-- Tax Rate Form Starts -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Modal Content Ends -->\\r\\n\\r\\n</lp-modal>\\r\\n<!-- LP Modal Ends -->\"","export default \"<!-- Action Buttons Form Tag Starts -->\\r\\n<form>\\r\\n  <!-- Form Row Div Starts -->\\r\\n  <div class=\\\"form-row\\\">\\r\\n    <!-- Action Buttons Div Starts -->\\r\\n    <div class=\\\"ml-auto w-100\\\">\\r\\n\\r\\n      <!-- Action Buttons Flex End Div Starts -->\\r\\n      <div class=\\\"col-12 d-flex justify-content-end\\\">\\r\\n\\r\\n        <!-- Overlapping Label Div Starts -->\\r\\n        <div *ngIf=\\\"showOverlappingBtn\\\">\\r\\n          <p class=\\\"legend-label\\\">Overlap</p>\\r\\n        </div>\\r\\n        <!-- Overlapping Label Div Ends -->\\r\\n\\r\\n        <!-- Overlapping Color Div Starts -->\\r\\n        <div *ngIf=\\\"showOverlappingBtn\\\">\\r\\n          <button class=\\\"btn overlap-color opacity-1 height-38px width-40px mr-2\\\" [disabled]=\\\"true\\\">\\r\\n          </button>\\r\\n        </div>\\r\\n        <!-- Overlapping Color Div Ends -->\\r\\n\\r\\n        <!-- Gap Label Div Starts -->\\r\\n        <div *ngIf=\\\"showGapBtn\\\">\\r\\n          <p class=\\\"legend-label\\\">Gap</p>\\r\\n        </div>\\r\\n        <!-- Overlapping Label Div Ends -->\\r\\n\\r\\n        <!-- Gap Color Div Starts -->\\r\\n        <div *ngIf=\\\"showGapBtn\\\">\\r\\n          <button class=\\\"btn gap-color opacity-1 height-38px width-40px mr-2\\\" [disabled]=\\\"true\\\">\\r\\n          </button>\\r\\n        </div>\\r\\n        <!-- Gap Color Div Ends -->\\r\\n\\r\\n        <!-- Grid Utils Starts -->\\r\\n        <app-grid-utils class=\\\"mr-0\\\" [utilsConfig]=\\\"utilsConfig\\\" [gridOptions]=\\\"taxRatesGrid\\\" (refresh)=\\\"refreshGrid()\\\">\\r\\n        </app-grid-utils>\\r\\n        <!-- Grid Utils Ends -->\\r\\n\\r\\n        <!-- Add Tax Rate Button Starts -->\\r\\n        <button class=\\\"btn btn-pa\\\" (click)=\\\"openTaxRateModal()\\\" tooltip=\\\"Add TaxRate\\\" placement=\\\"top\\\">\\r\\n          <i class=\\\"fa fa-plus\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </button>\\r\\n        <!-- Add Tax Rate Button Ends -->\\r\\n      </div>\\r\\n      <!-- Action Buttons Flex End Div Ends -->\\r\\n\\r\\n    </div>\\r\\n    <!-- Action Buttons Div Ends -->\\r\\n  </div>\\r\\n  <!-- Form Row Div Ends -->\\r\\n</form>\\r\\n<!-- Action Buttons Form Tag Ends -->\\r\\n\\r\\n<!-- Div To Measure Identifier Starts -->\\r\\n<div #divToMeasure>\\r\\n\\r\\n  <!-- Style For Height Div Starts-->\\r\\n  <div [ngStyle]=\\\"styleForHeight\\\">\\r\\n\\r\\n    <!-- Ag Grid Selector Starts -->\\r\\n    <ag-grid-angular class=\\\"w-100 h-100 ag-theme-balham\\\" [gridOptions]=\\\"taxRatesGrid\\\">\\r\\n    </ag-grid-angular>\\r\\n    <!-- Ag Grid Selector Ends -->\\r\\n\\r\\n    <!-- Action Buttons Template Starts -->\\r\\n    <ng-template #actionButtons let-row>\\r\\n      <button class=\\\"btn action-btn width-15 height-30px\\\" (click)=\\\"editTaxRate(row)\\\" tooltip=\\\"Edit\\\" placement=\\\"auto\\\"\\r\\n        container=\\\"body\\\">\\r\\n        <i class=\\\"fa fa-lg fa-edit\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      </button>\\r\\n      <button class=\\\"btn height-30px\\\" (click)=\\\"openConfirmationModal(row)\\\" tooltip=\\\"Delete\\\" placement=\\\"auto\\\"\\r\\n        container=\\\"body\\\">\\r\\n        <i class=\\\"fa fa-lg fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\r\\n      </button>\\r\\n    </ng-template>\\r\\n    <!-- Action Buttons Template Ends -->\\r\\n\\r\\n  </div>\\r\\n  <!-- Style For Height Div Ends -->\\r\\n\\r\\n</div>\\r\\n<!-- Div To Measure Identifier Ends -->\\r\\n\\r\\n<!-- Tax Rate Modal Selector Starts-->\\r\\n<app-tax-rate-modal #taxRateModal (closeModalEvent)=\\\"closeTaxRateModal()\\\">\\r\\n</app-tax-rate-modal>\\r\\n<!-- Tax Rate Modal Selector Ends-->\\r\\n\\r\\n<!-- Confirmation Modal Component Selector Starts -->\\r\\n<app-confirmation-modal #confirmationModal [title]=\\\"'Delete Tax Rate'\\\" (confirmed)=\\\"deleteTaxRate()\\\">\\r\\n</app-confirmation-modal>\\r\\n<!-- Confirmation Modal Component Selector Ends -->\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZnVuZC10aGVvcmV0aWNhbC9kYWlseS1wbmwvZGFpbHktcG5sLmNvbXBvbmVudC5zY3NzIn0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as moment from 'moment';\r\nimport { GridLayoutMenuComponent, CustomGridOptions } from 'lp-toolkit';\r\nimport { GridId, GridName, LayoutConfig } from 'src/shared/utils/AppEnums';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { CacheService } from 'src/services/common/cache.service';\r\nimport { FinanceServiceProxy } from 'src/services/service-proxies';\r\nimport { DailyUnofficialPnLData } from 'src/shared/Models/funds-theoretical';\r\nimport { GraphObject } from 'src/shared/Models/graph-object';\r\nimport { UtilsConfig } from 'src/shared/Models/utils-config';\r\nimport { FundTheoreticalApiService } from 'src/services/fund-theoretical-api.service';\r\nimport {\r\n  SideBar,\r\n  getRange,\r\n  SetDateRange,\r\n  GetDateRangeLabel,\r\n  HeightStyle,\r\n  AutoSizeAllColumns,\r\n  PercentageFormatter,\r\n  DateFormatter\r\n} from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-daily-pnl',\r\n  templateUrl: './daily-pnl.component.html',\r\n  styleUrls: ['./daily-pnl.component.scss']\r\n})\r\nexport class DailyPnlComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n\r\n  dailyPnlGrid: CustomGridOptions;\r\n  dailyPnLConfig: {\r\n    dailyPnLSize: number;\r\n    chartsSize: number;\r\n    dailyPnLView: boolean;\r\n    chartsView: boolean;\r\n    useTransition: boolean;\r\n  } = {\r\n    dailyPnLSize: 50,\r\n    chartsSize: 50,\r\n    dailyPnLView: true,\r\n    chartsView: false,\r\n    useTransition: true\r\n  };\r\n  selectedDate = null;\r\n  dailyPnLData: Array<DailyUnofficialPnLData>;\r\n  funds: Array<string>;\r\n  portfolios: Array<string>;\r\n  fileToUpload: File = null;\r\n  totalGridRows: number;\r\n  graphObject: GraphObject = null;\r\n  disableCharts = true;\r\n  sliderValue = 0;\r\n  uploadLoader = false;\r\n  disableFileUpload = true;\r\n\r\n  DateRangeLabel: string;\r\n  selected: { startDate: moment.Moment; endDate: moment.Moment };\r\n  startDate: moment.Moment;\r\n  endDate: moment.Moment;\r\n  ranges: any;\r\n  fundsRange: any;\r\n\r\n  returnsFormatString = '1.2-2';\r\n\r\n  styleForHeight = HeightStyle(224);\r\n\r\n  utilsConfig: UtilsConfig = {\r\n    expandGrid: false,\r\n    collapseGrid: false,\r\n    refreshGrid: true,\r\n    resetGrid: false,\r\n    exportExcel: false\r\n  };\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private financeService: FinanceServiceProxy,\r\n    private fundTheoreticalApiService: FundTheoreticalApiService,\r\n    private toastrService: ToastrService,\r\n    public decimalPipe: DecimalPipe,\r\n    private cacheService: CacheService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getFunds();\r\n    // this.getDailyPnL();\r\n    this.initGrid();\r\n    this.getPreDefinedRanges();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initPageLayout();\r\n  }\r\n\r\n  initPageLayout() {\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.dailyPnLConfigKey);\r\n    if (config) {\r\n      this.dailyPnLConfig = JSON.parse(config.value);\r\n    }\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  applyPageLayout(event) {\r\n    if (event.sizes) {\r\n      this.dailyPnLConfig.dailyPnLSize = event.sizes[0];\r\n      this.dailyPnLConfig.chartsSize = event.sizes[1];\r\n    }\r\n\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.dailyPnLConfigKey);\r\n    const payload = {\r\n      id: !config ? 0 : config.id,\r\n      project: LayoutConfig.projectName,\r\n      uom: 'JSON',\r\n      key: LayoutConfig.dailyPnLConfigKey,\r\n      value: JSON.stringify(this.dailyPnLConfig),\r\n      description: LayoutConfig.dailyPnLConfigKey\r\n    };\r\n\r\n    if (!config) {\r\n      this.cacheService.addUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Added');\r\n      });\r\n    } else {\r\n      this.cacheService.updateUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Updated');\r\n      });\r\n    }\r\n  }\r\n\r\n  getPreDefinedRanges() {\r\n    const payload = {\r\n      GridName: GridName.journalsLedgers\r\n    };\r\n    this.cacheService.getServerSideJournalsMeta(payload).subscribe(\r\n      result => {\r\n        this.fundsRange = result.payload.FundsRange;\r\n        this.ranges = getRange(this.getCustomFundRange());\r\n      },\r\n      err => {}\r\n    );\r\n  }\r\n\r\n  onFilterChanged(event) {\r\n    try {\r\n      this.getDailyPnL();\r\n    } catch (ex) {}\r\n  }\r\n\r\n  getCustomFundRange(fund = 'All Funds') {\r\n    const customRange: any = {};\r\n\r\n    this.fundsRange.forEach(element => {\r\n      if (fund === 'All Funds' && moment().year() !== element.Year) {\r\n        [customRange[element.Year]] = [\r\n          [\r\n            moment(`${element.Year}-01-01`).startOf('year'),\r\n            moment(`${element.Year}-01-01`).endOf('year')\r\n          ]\r\n        ];\r\n      } else if (fund === element.fund && moment().year() !== element.Year) {\r\n        [customRange[element.Year]] = [\r\n          [\r\n            moment(`${element.Year}-01-01`).startOf('year'),\r\n            moment(`${element.Year}-01-01`).endOf('year')\r\n          ]\r\n        ];\r\n      }\r\n    });\r\n\r\n    return customRange;\r\n  }\r\n\r\n  getFunds() {\r\n    this.financeService.getFunds().subscribe(response => {\r\n      this.funds = response.payload.map(item => item.FundCode);\r\n      this.initCols();\r\n    });\r\n  }\r\n\r\n  getPortfolios() {\r\n    this.financeService.getPortfolios().subscribe(response => {\r\n      this.portfolios = response.payload.map(item => item.PortfolioCode);\r\n      this.initCols();\r\n    });\r\n  }\r\n\r\n  sortDailyPnl(x, y) {\r\n    const dateDiff = new Date(y.BusinessDate).getTime() - new Date(x.BusinessDate).getTime();\r\n    if (dateDiff != 0) {\r\n      return dateDiff;\r\n    } else {\r\n      return y.Id - x.Id;\r\n    }\r\n  }\r\n\r\n  getDailyPnL() {\r\n    this.dailyPnlGrid.api.showLoadingOverlay();\r\n    const from = this.startDate ? moment(this.startDate).format('YYYY-MM-DD') : null;\r\n    const to = this.endDate ? moment(this.endDate).format('YYYY-MM-DD') : null;\r\n    this.fundTheoreticalApiService.getDailyUnofficialPnL(from, to).subscribe(\r\n      response => {\r\n        this.dailyPnlGrid.api.hideOverlay();\r\n        if (response.statusCode === 200) {\r\n          const sortedData = response.payload.sort((x, y) => this.sortDailyPnl(x, y));\r\n          this.dailyPnLData = sortedData.map(data => ({\r\n            businessDate: DateFormatter(data.BusinessDate),\r\n            fund: data.Fund,\r\n            portFolio: data.PortFolio,\r\n            tradePnL: data.TradePnL,\r\n            day: data.Day,\r\n            dailyPercentageReturn: data.DailyPercentageReturn,\r\n            longPnL: data.LongPnL,\r\n            longPercentageChange: data.LongPercentageChange,\r\n            shortPnL: data.ShortPnL,\r\n            shortPercentageChange: data.ShortPercentageChange,\r\n            longExposure: data.LongExposure,\r\n            shortExposure: data.ShortExposure,\r\n            grossExposure: data.GrossExposure,\r\n            netExposure: data.NetExposure,\r\n            sixMdBetaNetExposure: data.SixMdBetaNetExposure,\r\n            twoYwBetaNetExposure: data.TwoYwBetaNetExposure,\r\n            sixMdBetaShortExposure: data.SixMdBetaShortExposure,\r\n            navMarket: data.NavMarket,\r\n            dividendUSD: data.DividendUSD,\r\n            commUSD: data.CommUSD,\r\n            feeTaxesUSD: data.FeeTaxesUSD,\r\n            financingUSD: data.FinancingUSD,\r\n            otherUSD: data.OtherUSD,\r\n            pnLPercentage: data.PnLPercentage,\r\n            mtdPercentageReturn: data.MTDPercentageReturn,\r\n            qtdPercentageReturn: data.QTDPercentageReturn,\r\n            ytdPercentageReturn: data.YTDPercentageReturn,\r\n            itdPercentageReturn: data.ITDPercentageReturn,\r\n            mtdPnL: data.MTDPnL,\r\n            qtdPnL: data.QTDPnL,\r\n            ytdPnL: data.YTDPnL,\r\n            itdPnL: data.ITDPnL,\r\n            createdBy: data.CreatedBy,\r\n            lastUpdatedBy: data.LastUpdatedBy,\r\n            createdDate: data.CreatedDate,\r\n            lastUpdatedDate: data.lastUpdatedDate\r\n          }));\r\n          this.dailyPnlGrid.api.setRowData(this.dailyPnLData);\r\n          AutoSizeAllColumns(this.dailyPnlGrid);\r\n        }\r\n      },\r\n      err => {\r\n        this.dailyPnlGrid.api.hideOverlay();\r\n      }\r\n    );\r\n  }\r\n\r\n  initGrid() {\r\n    this.dailyPnlGrid = {\r\n      columnDefs: this.getColDefs(),\r\n      rowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      getExternalFilterState: this.getExternalFilterState.bind(this),\r\n      pinnedBottomRowData: null,\r\n      onRowSelected: params => {},\r\n      clearExternalFilter: this.clearExternalFilter.bind(this),\r\n      onFilterChanged: this.onFilterChanged.bind(this),\r\n      setExternalFilter: this.isExternalFilterPassed.bind(this),\r\n      isExternalFilterPresent: this.isExternalFilterPresent.bind(this),\r\n      doesExternalFilterPass: this.doesExternalFilterPass.bind(this),\r\n      getContextMenuItems: this.getContextMenuItems.bind(this),\r\n      rowSelection: 'single',\r\n      rowGroupPanelShow: 'after',\r\n      pivotPanelShow: 'after',\r\n      singleClickEdit: true,\r\n      pivotColumnGroupTotals: 'after',\r\n      pivotRowTotals: 'after',\r\n      enableCellChangeFlash: true,\r\n      animateRows: true,\r\n      onGridReady: params => {\r\n        AutoSizeAllColumns(params);\r\n      },\r\n      onFirstDataRendered: params => {\r\n        // AutoSizeAllColumns(params);\r\n      },\r\n      onCellValueChanged: params => {},\r\n      defaultColDef: {\r\n        resizable: true\r\n      }\r\n    };\r\n    this.dailyPnlGrid.sideBar = SideBar(GridId.dailyPnlId, GridName.dailyPnl, this.dailyPnlGrid);\r\n  }\r\n\r\n  initCols() {\r\n    const colDefs = this.getColDefs();\r\n    this.dailyPnlGrid.api.setColumnDefs(colDefs);\r\n    this.dailyPnlGrid.api.sizeColumnsToFit();\r\n  }\r\n\r\n  clearExternalFilter() {\r\n    this.selected = null;\r\n    this.startDate = moment('01-01-1901', 'MM-DD-YYYY');\r\n    this.endDate = moment();\r\n    this.dailyPnlGrid.api.onFilterChanged();\r\n  }\r\n\r\n  isExternalFilterPassed(object) {\r\n    const { dateFilter } = object;\r\n    this.setDateRange(dateFilter);\r\n    this.dailyPnlGrid.api.onFilterChanged();\r\n  }\r\n\r\n  setDateRange(dateFilter: any) {\r\n    const dates = SetDateRange(dateFilter, this.startDate, this.endDate);\r\n    this.startDate = dates[0];\r\n    this.endDate = dates[1];\r\n\r\n    this.selected =\r\n      dateFilter.startDate !== '' ? { startDate: this.startDate, endDate: this.endDate } : null;\r\n  }\r\n\r\n  getExternalFilterState() {\r\n    return {\r\n      dateFilter:\r\n        this.DateRangeLabel !== ''\r\n          ? this.DateRangeLabel\r\n          : {\r\n              startDate: this.startDate !== null ? this.startDate.format('YYYY-MM-DD') : '',\r\n              endDate: this.endDate !== null ? this.endDate.format('YYYY-MM-DD') : ''\r\n            }\r\n    };\r\n  }\r\n\r\n  isExternalFilterPresent() {\r\n    if (this.startDate) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  doesExternalFilterPass(node: any) {\r\n    return true;\r\n  }\r\n\r\n  getColDefs(): Array<ColDef | ColGroupDef> {\r\n    const colDefs = [\r\n      {\r\n        headerName: 'Is Modified',\r\n        field: 'modified',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Business Date',\r\n        field: 'businessDate',\r\n        filter: true,\r\n        suppressCellFlash: true\r\n      },\r\n      {\r\n        headerName: 'Portfolio*',\r\n        field: 'portFolio',\r\n        cellEditor: 'agSelectCellEditor',\r\n        cellEditorParams: {\r\n          values: ['None', ...this.portfolios]\r\n        }\r\n      },\r\n      {\r\n        headerName: 'Fund*',\r\n        field: 'fund',\r\n        filter: true,\r\n        cellEditor: 'agSelectCellEditor',\r\n        cellEditorParams: {\r\n          values: ['None', ...this.funds]\r\n        }\r\n      },\r\n      {\r\n        headerName: 'Trade P/L',\r\n        field: 'tradePnL',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.tradePnL, false)\r\n      },\r\n      {\r\n        headerName: 'Day',\r\n        field: 'day',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.day, false)\r\n      },\r\n      {\r\n        headerName: 'Daily % Return',\r\n        field: 'dailyPercentageReturn',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.dailyPercentageReturn, true)\r\n      },\r\n      {\r\n        headerName: 'Long P/L',\r\n        field: 'longPnL',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.longPnL, false)\r\n      },\r\n      {\r\n        headerName: 'Long % Change',\r\n        field: 'longPercentageChange',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.longPercentageChange, false)\r\n      },\r\n      {\r\n        headerName: 'Short P/L',\r\n        field: 'shortPnL',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.shortPnL, false)\r\n      },\r\n      {\r\n        headerName: 'Short % Change',\r\n        field: 'shortPercentageChange',\r\n        valueFormatter: params =>\r\n          this.numberFormatter(params.node.data.shortPercentageChange, false)\r\n      },\r\n      {\r\n        headerName: 'Long Exposure',\r\n        field: 'longExposure',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.longExposure, false)\r\n      },\r\n      {\r\n        headerName: 'Short Exposure',\r\n        field: 'shortExposure',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.shortExposure, false)\r\n      },\r\n      {\r\n        headerName: 'Gross Exposure',\r\n        field: 'grossExposure',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.grossExposure, false)\r\n      },\r\n      {\r\n        headerName: 'Net Exposure',\r\n        field: 'netExposure',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.netExposure, false)\r\n      },\r\n      {\r\n        headerName: '6md Beta Net Exposure',\r\n        field: 'sixMdBetaNetExposure',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.sixMdBetaNetExposure, false)\r\n      },\r\n      {\r\n        headerName: '2Yw Beta Net Exposure',\r\n        field: 'twoYwBetaNetExposure',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.twoYwBetaNetExposure, false)\r\n      },\r\n      {\r\n        headerName: '6md Beta Short Exposure',\r\n        field: 'sixMdBetaShortExposure',\r\n        valueFormatter: params =>\r\n          this.numberFormatter(params.node.data.sixMdBetaShortExposure, false)\r\n      },\r\n      {\r\n        headerName: 'Nav Market',\r\n        field: 'navMarket',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.navMarket, false)\r\n      },\r\n      {\r\n        headerName: 'Dividend USD',\r\n        field: 'dividendUSD',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.dividendUSD, false)\r\n      },\r\n      {\r\n        headerName: 'Comm USD',\r\n        field: 'commUSD',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.commUSD, false)\r\n      },\r\n      {\r\n        headerName: 'Fee/Taxes USD',\r\n        field: 'feeTaxesUSD',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.feeTaxesUSD, false)\r\n      },\r\n      {\r\n        headerName: 'Financing USD',\r\n        field: 'financingUSD',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.financingUSD, false)\r\n      },\r\n      {\r\n        headerName: 'Other USD',\r\n        field: 'otherUSD',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.otherUSD, false)\r\n      },\r\n      {\r\n        headerName: 'P/L %',\r\n        field: 'pnLPercentage',\r\n        valueFormatter: params => this.returnsFormatter(params.node.data.pnLPercentage, true, this.returnsFormatString)\r\n      },\r\n      {\r\n        headerName: 'MTD % Return',\r\n        field: 'mtdPercentageReturn',\r\n        valueFormatter: params => this.returnsFormatter(params.node.data.mtdPercentageReturn, true, this.returnsFormatString)\r\n      },\r\n      {\r\n        headerName: 'QTD % Return',\r\n        field: 'qtdPercentageReturn',\r\n        valueFormatter: params => this.returnsFormatter(params.node.data.qtdPercentageReturn, true, this.returnsFormatString)\r\n      },\r\n      {\r\n        headerName: 'YTD % Return',\r\n        field: 'ytdPercentageReturn',\r\n        valueFormatter: params => this.returnsFormatter(params.node.data.ytdPercentageReturn, true, this.returnsFormatString)\r\n      },\r\n      {\r\n        headerName: 'ITD % Return',\r\n        field: 'itdPercentageReturn',\r\n        valueFormatter: params => this.returnsFormatter(params.node.data.itdPercentageReturn, true, this.returnsFormatString)\r\n      },\r\n      {\r\n        headerName: 'MTD PnL',\r\n        field: 'mtdPnL',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.mtdPnL, false)\r\n      },\r\n      {\r\n        headerName: 'QTD PnL',\r\n        field: 'qtdPnL',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.qtdPnL, false)\r\n      },\r\n      {\r\n        headerName: 'YTD PnL',\r\n        field: 'ytdPnL',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.ytdPnL, false)\r\n      },\r\n      {\r\n        headerName: 'ITD PnL',\r\n        field: 'itdPnL',\r\n        valueFormatter: params => this.numberFormatter(params.node.data.itdPnL, false)\r\n      },\r\n      {\r\n        headerName: 'Created By',\r\n        field: 'createdBy',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Last Updated By ',\r\n        field: 'lastUpdatedBy ',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Created Date',\r\n        field: 'createdDate',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Last Updated Date',\r\n        field: 'lastUpdatedDate',\r\n        hide: true\r\n      }\r\n    ];\r\n\r\n    colDefs.forEach(colDef => {\r\n      if (\r\n        !(\r\n          colDef.field === 'modified' ||\r\n          colDef.field === 'businessDate' ||\r\n          colDef.field === 'portfolio' ||\r\n          colDef.field === 'fund'\r\n        )\r\n      ) {\r\n        colDef['type'] = 'numericColumn';\r\n      }\r\n    });\r\n    return colDefs;\r\n  }\r\n\r\n  getContextMenuItems(params) {\r\n    const addDefaultItems = [\r\n      {\r\n        name: 'Visualize',\r\n        action: () => {\r\n          this.visualizeData();\r\n        }\r\n      },\r\n      {\r\n        name: 'Decimal Places 2',\r\n        action: () => {\r\n          this.returnsFormatString = '1.2-2'\r\n          this.refreshGrid();\r\n        }\r\n      },\r\n      {\r\n        name: 'Decimal Places 16',\r\n        action: () => {\r\n          this.returnsFormatString = '1.16-16'\r\n          this.refreshGrid();\r\n        }\r\n      }\r\n\r\n    ];\r\n    return GetContextMenu(false, addDefaultItems, true, null, params);\r\n  }\r\n\r\n  ngModelChange(e) {\r\n    this.startDate = e.startDate;\r\n    this.endDate = e.endDate;\r\n\r\n    this.getRangeLabel();\r\n    this.dailyPnlGrid.api.onFilterChanged();\r\n  }\r\n\r\n  getRangeLabel() {\r\n    this.DateRangeLabel = '';\r\n    this.DateRangeLabel = GetDateRangeLabel(this.startDate, this.endDate);\r\n  }\r\n\r\n  visualizeData() {\r\n    const data = {};\r\n    const focusedCell = this.dailyPnlGrid.api.getFocusedCell();\r\n    const selectedRow = this.dailyPnlGrid.api.getDisplayedRowAtIndex(focusedCell.rowIndex).data;\r\n    const column = focusedCell.column.getColDef().field;\r\n    const columnLabel = focusedCell.column.getUserProvidedColDef().headerName;\r\n    data[columnLabel] = [];\r\n    const toDate = moment(selectedRow.businessDate);\r\n    const fromDate = moment(selectedRow.businessDate).subtract(30, 'days');\r\n    const selectedPortfolio = selectedRow.portFolio;\r\n    this.dailyPnlGrid.api.forEachNodeAfterFilter((rowNode, index) => {\r\n      const currentDate = moment(rowNode.data.businessDate);\r\n      if (\r\n        rowNode.data.portFolio === selectedPortfolio\r\n        // &&\r\n        // currentDate.isSameOrAfter(fromDate) &&\r\n        // currentDate.isSameOrBefore(toDate)\r\n      ) {\r\n        data[columnLabel].push({\r\n          date: rowNode.data.businessDate,\r\n          value: rowNode.data[column]\r\n        });\r\n      }\r\n    });\r\n\r\n    this.graphObject = {\r\n      xAxisLabel: 'Date',\r\n      yAxisLabel: columnLabel,\r\n      lineColors: ['#ff6960', '#00bd9a'],\r\n      height: 410,\r\n      width: '95%',\r\n      chartTitle: selectedPortfolio,\r\n      propId: 'lineDailyPnL',\r\n      graphData: data,\r\n      dateTimeFormat: 'YYYY-MM-DD',\r\n      referenceDate: toDate\r\n    };\r\n    this.dailyPnLConfig.chartsView = true;\r\n    this.disableCharts = false;\r\n  }\r\n\r\n  uploadDailyUnofficialPnl() {\r\n    this.uploadLoader = true;\r\n    this.fundTheoreticalApiService\r\n      .uploadDailyUnofficialPnl(this.fileToUpload)\r\n      .subscribe(response => {\r\n        this.uploadLoader = false;\r\n        if (response.isSuccessful) {\r\n          this.fileInput.nativeElement.value = '';\r\n          this.disableFileUpload = true;\r\n          this.dailyPnLData = response.payload.map(data => ({\r\n            businessDate: DateFormatter(data.BusinessDate),\r\n            fund: data.Fund,\r\n            portFolio: data.PortFolio,\r\n            tradePnL: data.TradePnL,\r\n            day: data.Day,\r\n            dailyPercentageReturn: data.DailyPercentageReturn,\r\n            longPnL: data.LongPnL,\r\n            longPercentageChange: data.LongPercentageChange,\r\n            shortPnL: data.ShortPnL,\r\n            shortPercentageChange: data.ShortPercentageChange,\r\n            longExposure: data.LongExposure,\r\n            shortExposure: data.ShortExposure,\r\n            grossExposure: data.GrossExposure,\r\n            netExposure: data.NetExposure,\r\n            sixMdBetaNetExposure: data.SixMdBetaNetExposure,\r\n            twoYwBetaNetExposure: data.TwoYwBetaNetExposure,\r\n            sixMdBetaShortExposure: data.SixMdBetaShortExposure,\r\n            navMarket: data.NavMarket,\r\n            dividendUSD: data.DividendUSD,\r\n            commUSD: data.CommUSD,\r\n            feeTaxesUSD: data.FeeTaxesUSD,\r\n            financingUSD: data.FinancingUSD,\r\n            otherUSD: data.OtherUSD,\r\n            pnLPercentage: data.PnLPercentage,\r\n            mtdPercentageReturn: data.MTDPercentageReturn,\r\n            qtdPercentageReturn: data.QTDPercentageReturn,\r\n            ytdPercentageReturn: data.YTDPercentageReturn,\r\n            itdPercentageReturn: data.ITDPercentageReturn,\r\n            mtdPnL: data.MTDPnL,\r\n            qtdPnL: data.QTDPnL,\r\n            ytdPnL: data.YTDPnL,\r\n            itdPnL: data.ITDPnL,\r\n            createdBy: data.CreatedBy,\r\n            lastUpdatedBy: data.LastUpdatedBy,\r\n            createdDate: data.CreatedDate,\r\n            lastUpdatedDate: data.lastUpdatedDate\r\n          }));\r\n          this.dailyPnlGrid.api.setRowData(this.dailyPnLData);\r\n        } else {\r\n          this.toastrService.error('Something went wrong! Try Again.');\r\n        }\r\n      });\r\n  }\r\n\r\n  refreshGrid() {\r\n    this.dailyPnlGrid.api.showLoadingOverlay();\r\n    this.getDailyPnL();\r\n  }\r\n\r\n  numberFormatter(numberToFormat, isInPercentage): string {\r\n    let per = numberToFormat;\r\n    if (isInPercentage) {\r\n      per = PercentageFormatter(numberToFormat);\r\n    }\r\n    const formattedValue = this.decimalPipe.transform(per, '1.2-2');\r\n    return formattedValue.toString();\r\n  }\r\n\r\n  returnsFormatter(numberToFormat, isInPercentage, format): string {\r\n    let per = numberToFormat;\r\n    if (isInPercentage) {\r\n      per = PercentageFormatter(numberToFormat);\r\n    }\r\n    const formattedValue = this.decimalPipe.transform(per, format);\r\n    return formattedValue.toString();\r\n  }\r\n\r\n  onFileInput(files: FileList) {\r\n    this.disableFileUpload = false;\r\n    this.fileToUpload = files.item(0);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZnVuZC10aGVvcmV0aWNhbC9mdW5kLXRoZW9yZXRpY2FsLmNvbXBvbmVudC5zY3NzIn0= */\"","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { GridOptions } from 'ag-grid-community';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as moment from 'moment';\r\nimport { GridLayoutMenuComponent } from 'lp-toolkit';\r\nimport { GridId, GridName, LayoutConfig } from 'src/shared/utils/AppEnums';\r\nimport { AgGridCheckboxComponent } from '../../../shared/Component/ag-grid-checkbox/ag-grid-checkbox.component';\r\nimport { DataGridModalComponent } from '../../../shared/Component/data-grid-modal/data-grid-modal.component';\r\nimport { DatePickerModalComponent } from 'src/shared/Component/date-picker-modal/date-picker-modal.component';\r\nimport { ConfirmationModalComponent } from 'src/shared/Component/confirmation-modal/confirmation-modal.component';\r\nimport { CacheService } from 'src/services/common/cache.service';\r\nimport { DataService } from 'src/services/common/data.service';\r\nimport { FinanceServiceProxy } from '../../../services/service-proxies';\r\nimport { FundTheoreticalApiService } from 'src/services/fund-theoretical-api.service';\r\nimport { MonthlyPerformanceData } from 'src/shared/Models/funds-theoretical';\r\nimport { Account, AccountCategory } from '../../../shared/Models/account';\r\nimport { DataDictionary } from 'src/shared/utils/DataDictionary';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { ContextMenu, CustomColDef } from 'src/shared/Models/common';\r\nimport { DownloadExcelUtils } from 'src/shared/utils/DownloadExcelUtils';\r\nimport { SideBar, AutoSizeAllColumns, HeightStyle, Style } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-fund-theoretical',\r\n  templateUrl: './fund-theoretical.component.html',\r\n  styleUrls: ['./fund-theoretical.component.scss']\r\n})\r\nexport class FundTheoreticalComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('dataGridModal', { static: false })\r\n  dataGridModal: DataGridModalComponent;\r\n  @ViewChild('confirmationModal', { static: false })\r\n  confirmationModal: ConfirmationModalComponent;\r\n  @ViewChild('datePickerModal', { static: false })\r\n  datePickerModal: DatePickerModalComponent;\r\n  @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n\r\n  rowData: Array<Account>;\r\n  fundTheoreticalGrid: GridOptions;\r\n  fundTheoreticalConfig: {\r\n    fundTheoreticalSize: number;\r\n    chartsSize: number;\r\n    fundTheoreticalView: boolean;\r\n    chartsView: boolean;\r\n    useTransition: boolean;\r\n  } = {\r\n    fundTheoreticalSize: 50,\r\n    chartsSize: 50,\r\n    fundTheoreticalView: true,\r\n    chartsView: false,\r\n    useTransition: true\r\n  };\r\n  accountCategories: AccountCategory;\r\n  selectedAccountCategory: AccountCategory;\r\n  account: Account;\r\n  hideGrid: boolean;\r\n  monthlyPerformanceData: Array<MonthlyPerformanceData>;\r\n  currentMonth: string;\r\n  currentYear: number;\r\n  selectedDate = null;\r\n  disableCommit = true;\r\n  totalGridRows: number;\r\n  generateFundsDate;\r\n  funds: Array<string>;\r\n  portfolios: Array<string>;\r\n  title: string;\r\n  fileToUpload: File = null;\r\n  graphObject: any;\r\n  disableFileUpload = true;\r\n  disableCharts = true;\r\n\r\n  isDailyPnLActive = false;\r\n  isTaxRateActive = false;\r\n  isMarketPricesActive = false;\r\n  isFxRateActive = false;\r\n\r\n  uploadLoader = false;\r\n  commitLoader = false;\r\n\r\n  confirmOption = {\r\n    generateRows: false,\r\n    uploadRows: false\r\n  };\r\n\r\n  monthsArray = [\r\n    { id: 0, month: 'January' },\r\n    { id: 1, month: 'February' },\r\n    { id: 2, month: 'March' },\r\n    { id: 3, month: 'April' },\r\n    { id: 4, month: 'May' },\r\n    { id: 5, month: 'June' },\r\n    { id: 6, month: 'July' },\r\n    { id: 7, month: 'August' },\r\n    { id: 8, month: 'September' },\r\n    { id: 9, month: 'October' },\r\n    { id: 10, month: 'November' },\r\n    { id: 11, month: 'December' }\r\n  ];\r\n\r\n  style = Style;\r\n\r\n  styleForHeight = HeightStyle(224);\r\n\r\n  containerDiv = {\r\n    border: '1px solid #eee',\r\n    padding: '4px',\r\n    marginTop: '20px',\r\n    width: '100%',\r\n    height: 'calc(100vh - 125px)',\r\n    boxSizing: 'border-box'\r\n  };\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private cacheService: CacheService,\r\n    private toastrService: ToastrService,\r\n    private dataService: DataService,\r\n    private financeService: FinanceServiceProxy,\r\n    private fundTheoreticalApiService: FundTheoreticalApiService,\r\n    public dataDictionary: DataDictionary,\r\n    private downloadExcelUtils: DownloadExcelUtils\r\n  ) {\r\n    this.portfolios = [];\r\n    this.hideGrid = false;\r\n    this.currentYear = moment().get('year');\r\n    const currentMonthObj = this.monthsArray.find(obj => obj.id === moment().get('month'));\r\n    this.currentMonth = currentMonthObj.month;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getFunds();\r\n    this.getPortfolios();\r\n    this.getMonthlyPerformance();\r\n    this.initGrid();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initPageLayout();\r\n    this.dataService.flag$.subscribe(obj => {\r\n      this.hideGrid = obj;\r\n      if (!this.hideGrid) {\r\n      }\r\n    });\r\n  }\r\n\r\n  initPageLayout() {\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.fundTheoreticalConfigKey);\r\n    if (config) {\r\n      this.fundTheoreticalConfig = JSON.parse(config.value);\r\n    }\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  applyPageLayout(event) {\r\n    if (event.sizes) {\r\n      this.fundTheoreticalConfig.fundTheoreticalSize = event.sizes[0];\r\n      this.fundTheoreticalConfig.chartsSize = event.sizes[1];\r\n    }\r\n\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.fundTheoreticalConfigKey);\r\n    const payload = {\r\n      id: !config ? 0 : config.id,\r\n      project: LayoutConfig.projectName,\r\n      uom: 'JSON',\r\n      key: LayoutConfig.fundTheoreticalConfigKey,\r\n      value: JSON.stringify(this.fundTheoreticalConfig),\r\n      description: LayoutConfig.fundTheoreticalConfigKey\r\n    };\r\n\r\n    if (!config) {\r\n      this.cacheService.addUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Added');\r\n      });\r\n    } else {\r\n      this.cacheService.updateUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Updated');\r\n      });\r\n    }\r\n  }\r\n\r\n  activeFundTheretical() {\r\n    this.getMonthlyPerformance();\r\n  }\r\n\r\n  activeDailyPnL() {\r\n    this.isDailyPnLActive = true;\r\n  }\r\n\r\n  activeTaxRate() {\r\n    this.isTaxRateActive = true;\r\n  }\r\n\r\n  activeMarketPrices() {\r\n    this.isMarketPricesActive = true;\r\n  }\r\n\r\n  activeFxRate() {\r\n    this.isFxRateActive = true;\r\n  }\r\n\r\n  getFunds() {\r\n    this.financeService.getFunds().subscribe(response => {\r\n      this.funds = response.payload.map(item => item.FundCode);\r\n      this.funds.push('None');\r\n      this.initCols();\r\n    });\r\n  }\r\n\r\n  getPortfolios() {\r\n    this.financeService.getPortfolios().subscribe(response => {\r\n      if (response && response.payload) {\r\n        this.portfolios = response.payload.map(item => item.PortfolioCode);\r\n      }\r\n      this.portfolios.push('None');\r\n      this.initCols();\r\n    });\r\n  }\r\n\r\n  getMonthlyPerformance() {\r\n    let rowNodeId = 1;\r\n    this.fundTheoreticalApiService.getMonthlyPerformance().subscribe(response => {\r\n      const modifiedData = response.payload.map(data => {\r\n        return { ...data, RowId: rowNodeId++ };\r\n      });\r\n      this.totalGridRows = rowNodeId;\r\n      this.monthlyPerformanceData = this.formatPerformanceData(modifiedData);\r\n      if (this.fundTheoreticalGrid) {\r\n        AutoSizeAllColumns(this.fundTheoreticalGrid);\r\n      }\r\n\r\n      const isCurrentMonthAdded: MonthlyPerformanceData = this.monthlyPerformanceData.find(\r\n        data => data.month === this.currentMonth && data.year === this.currentYear\r\n      );\r\n\r\n      if (!isCurrentMonthAdded && this.monthlyPerformanceData.length > 0) {\r\n        this.monthlyPerformanceData.push(this.createRow(this.currentYear, this.currentMonth, 0));\r\n      }\r\n\r\n      if (this.monthlyPerformanceData.length > 0) {\r\n        this.disableCharts = false;\r\n      }\r\n      this.fundTheoreticalGrid.api.setRowData(this.monthlyPerformanceData);\r\n    });\r\n  }\r\n\r\n  initGrid() {\r\n    this.fundTheoreticalGrid = {\r\n      rowData: this.monthlyPerformanceData,\r\n      pinnedBottomRowData: null,\r\n      columnDefs: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      onFilterChanged: this.generateData.bind(this),\r\n      getContextMenuItems: this.getContextMenuItems.bind(this),\r\n      rowSelection: 'single',\r\n      rowGroupPanelShow: 'after',\r\n      pivotPanelShow: 'after',\r\n      pivotRowTotals: 'after',\r\n      pivotColumnGroupTotals: 'after',\r\n      animateRows: true,\r\n      singleClickEdit: true,\r\n      enableCellChangeFlash: true,\r\n      deltaRowDataMode: true,\r\n      onRowSelected: params => {},\r\n      getRowNodeId: data => {\r\n        return data.rowId;\r\n      },\r\n      onFirstDataRendered: params => {},\r\n      onCellValueChanged: params => {\r\n        this.onCellValueChanged(params);\r\n      },\r\n      defaultColDef: {\r\n        resizable: true\r\n      }\r\n    } as GridOptions;\r\n    this.fundTheoreticalGrid.sideBar = SideBar(\r\n      GridId.fundTheoreticalId,\r\n      GridName.fundTheoretical,\r\n      this.fundTheoreticalGrid\r\n    );\r\n  }\r\n\r\n  initCols() {\r\n    const colDefs = this.getColDefs();\r\n    this.fundTheoreticalGrid.api.setColumnDefs(colDefs);\r\n    AutoSizeAllColumns(this.fundTheoreticalGrid);\r\n    this.fundTheoreticalGrid.api.sizeColumnsToFit();\r\n  }\r\n\r\n  getColDefs(): Array<CustomColDef> {\r\n    return [\r\n      {\r\n        headerName: 'Is Modified',\r\n        field: 'modified',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Estimated',\r\n        field: 'estimated',\r\n        cellEditor: 'agSelectCellEditor',\r\n        cellRendererFramework: AgGridCheckboxComponent,\r\n        // To call onCellValueChangedMethod from AgGridCheckboxComponent\r\n        customMethod: params => this.onCellValueChanged(params)\r\n      },\r\n      {\r\n        headerName: 'Year',\r\n        field: 'year',\r\n        sortable: true,\r\n        filter: true,\r\n        suppressCellFlash: true\r\n      },\r\n      {\r\n        headerName: 'Month',\r\n        field: 'month',\r\n        sortable: true,\r\n        filter: true,\r\n        suppressCellFlash: true\r\n      },\r\n      {\r\n        headerName: 'Fund*',\r\n        field: 'fund',\r\n        sortable: true,\r\n        filter: true,\r\n        editable: true,\r\n        cellEditor: 'agSelectCellEditor',\r\n        cellEditorParams: {\r\n          values: this.funds\r\n        }\r\n      },\r\n      {\r\n        headerName: 'Portfolio*',\r\n        field: 'portfolio',\r\n        editable: true,\r\n        filter: true,\r\n        cellEditor: 'agSelectCellEditor',\r\n        cellEditorParams: {\r\n          values: this.portfolios\r\n        }\r\n      },\r\n      {\r\n        headerName: 'Start of Month Estimate NAV*',\r\n        field: 'startOfMonthEstimateNav',\r\n        sortable: true,\r\n        editable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          this.dataDictionary.numberFormatter(params.node.data.startOfMonthEstimateNav, false)\r\n      },\r\n      {\r\n        headerName: 'Performance*',\r\n        field: 'performance',\r\n        sortable: true,\r\n        editable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          this.dataDictionary.numberFormatter(params.node.data.performance, false)\r\n      },\r\n      {\r\n        headerName: 'Admin Month End NAV',\r\n        field: 'monthEndNav',\r\n        sortable: true,\r\n        // editable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          this.dataDictionary.numberFormatter(params.node.data.monthEndNav, false)\r\n      },\r\n      {\r\n        headerName: 'MTD*',\r\n        field: 'mtd',\r\n        sortable: true,\r\n        editable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params => this.dataDictionary.numberFormatter(params.node.data.mtd, true)\r\n      },\r\n      {\r\n        headerName: 'YTD Net Perf',\r\n        field: 'ytdNetPerformance',\r\n        sortable: true,\r\n        suppressCellFlash: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          this.dataDictionary.numberFormatter(params.node.data.ytdNetPerformance, false)\r\n      },\r\n      {\r\n        headerName: 'QTD Net %',\r\n        field: 'qtd',\r\n        sortable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params => this.dataDictionary.numberFormatter(params.node.data.qtd, true)\r\n      },\r\n      {\r\n        headerName: 'YTD Net %',\r\n        field: 'ytd',\r\n        sortable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params => this.dataDictionary.numberFormatter(params.node.data.ytd, true)\r\n      },\r\n      {\r\n        headerName: 'ITD Net %',\r\n        field: 'itd',\r\n        sortable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params => this.dataDictionary.numberFormatter(params.node.data.itd, true)\r\n      },\r\n      {\r\n        headerName: 'Created By',\r\n        field: 'createdBy',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Last Updated By ',\r\n        field: 'lastUpdatedBy ',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Created Date',\r\n        field: 'createdDate',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Last Updated Date',\r\n        field: 'lastUpdatedDate',\r\n        hide: true\r\n      }\r\n    ];\r\n  }\r\n\r\n  onCellValueChanged(params) {\r\n    if (\r\n      (params.colDef.field === 'monthEndNav' ||\r\n        params.colDef.field === 'performance' ||\r\n        params.colDef.field === 'mtd') &&\r\n      params.newValue != params.oldValue\r\n    ) {\r\n      this.doCalculation();\r\n      params.data.modified = true;\r\n      this.disableCommit = false;\r\n    }\r\n\r\n    if (\r\n      (params.colDef.field === 'fund' && params.data.fund !== 'None') ||\r\n      (params.colDef.field === 'portfolio' && params.data.portfolio !== 'None') ||\r\n      params.colDef.field === 'estimated'\r\n    ) {\r\n      this.doCalculation();\r\n      this.disableCommit = false;\r\n      params.data.modified = true;\r\n    }\r\n\r\n    if (\r\n      params.colDef.field === 'performance' ||\r\n      params.colDef.field === 'startOfMonthEstimateNav'\r\n    ) {\r\n      let monthEndNavSum;\r\n\r\n      if (params.colDef.field === 'performance') {\r\n        monthEndNavSum = +params.newValue + +params.data.startOfMonthEstimateNav;\r\n      } else {\r\n        monthEndNavSum = +params.newValue + +params.data.performance;\r\n      }\r\n      const row = this.fundTheoreticalGrid.api.getRowNode(params.data.rowId);\r\n      params.data.modified = true;\r\n      setTimeout(() => {\r\n        row.setDataValue('monthEndNav', monthEndNavSum.toString());\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  getContextMenuItems(params): Array<ContextMenu> {\r\n    const addDefaultItems: Array<ContextMenu> = [\r\n      {\r\n        name: 'Add Current Month',\r\n        action: () => {\r\n          this.addCurrentMonth(params);\r\n        }\r\n      },\r\n      {\r\n        name: 'Add Next Month',\r\n        action: () => {\r\n          this.addNextMonth(params);\r\n        }\r\n      },\r\n      {\r\n        name: 'Add Row',\r\n        action: () => {\r\n          this.datePickerModal.showModal(params);\r\n        }\r\n      },\r\n      {\r\n        name: 'Delete Row',\r\n        action: () => {\r\n          this.deleteRow(params);\r\n        }\r\n      },\r\n      {\r\n        name: 'View Audit Trail',\r\n        action: () => {\r\n          this.viewRow(params);\r\n        }\r\n      }\r\n    ];\r\n    return GetContextMenu(false, addDefaultItems, true, null, params);\r\n  }\r\n\r\n  addCurrentMonth(params) {\r\n    const index = params.node.rowIndex;\r\n    const newRow = this.createRow(\r\n      params.node.data.year,\r\n      params.node.data.month,\r\n      this.totalGridRows + 1\r\n    );\r\n    params.api.updateRowData({\r\n      add: [newRow],\r\n      addIndex: index + 1\r\n    });\r\n    this.totalGridRows += 1;\r\n  }\r\n\r\n  addNextMonth(params) {\r\n    const forMonth = moment()\r\n      .year(params.node.data.year)\r\n      .month(params.node.data.month);\r\n    const nextMonth = forMonth.add(1, 'month').format('MMMM');\r\n    const newYear = forMonth.format('YYYY');\r\n    const index = params.node.rowIndex;\r\n    const newRow = this.createRow(newYear, nextMonth, this.totalGridRows + 1);\r\n    params.api.updateRowData({\r\n      add: [newRow],\r\n      addIndex: index + 1\r\n    });\r\n    this.totalGridRows += 1;\r\n  }\r\n\r\n  addCustom($event) {\r\n    const params = $event.params;\r\n    const date = $event.selectedDate;\r\n    const year = date.format('YYYY');\r\n    const month = date.format('MMMM');\r\n    const index = params.node.rowIndex;\r\n    const newRow = this.createRow(year, month, this.totalGridRows + 1);\r\n    params.api.updateRowData({\r\n      add: [newRow],\r\n      addIndex: index + 1\r\n    });\r\n    this.totalGridRows += 1;\r\n  }\r\n\r\n  deleteRow(params) {\r\n    const rowData = params.node.data;\r\n    if (rowData.id === 0) {\r\n      params.api.updateRowData({\r\n        remove: [rowData]\r\n      });\r\n    } else {\r\n      this.toastrService.error('Cannot delete this record!');\r\n    }\r\n  }\r\n\r\n  viewRow(rowNode) {\r\n    const { id } = rowNode.node.data;\r\n    this.fundTheoreticalApiService.monthlyPerformanceAudit(id).subscribe(response => {\r\n      const { payload } = response;\r\n      const modifiedData = this.formatPerformanceData(payload);\r\n      const columns = this.getColDefs();\r\n      const modifiedCols = columns.map(col => {\r\n        return { ...col, editable: false };\r\n      });\r\n      this.title = 'Audit Trail';\r\n      this.dataGridModal.openModal(modifiedCols, modifiedData);\r\n    });\r\n  }\r\n\r\n  DateFormatter(date, option, isStringFormat): string {\r\n    let dateObject;\r\n    if (isStringFormat) {\r\n      dateObject = moment(date);\r\n    } else {\r\n      dateObject = date;\r\n    }\r\n\r\n    let formattedValue;\r\n    switch (option) {\r\n      case 1:\r\n        formattedValue = moment(dateObject).get('year');\r\n        break;\r\n      case 2:\r\n        const monthId = moment(dateObject).get('month');\r\n        formattedValue = this.monthsArray.find(obj => obj.id === monthId);\r\n        formattedValue = formattedValue.month;\r\n        break;\r\n    }\r\n    return formattedValue;\r\n  }\r\n\r\n  changeDate(date) {\r\n    const { startDate } = date;\r\n    this.generateFundsDate = startDate;\r\n  }\r\n\r\n  generateRows() {\r\n    if (this.monthlyPerformanceData.length > 0) {\r\n      this.confirmOption.generateRows = true;\r\n      this.confirmationModal.showModal();\r\n    } else {\r\n      this.generateMonthlyPerformanceRows();\r\n    }\r\n  }\r\n\r\n  private generateMonthlyPerformanceRows() {\r\n    const today = moment();\r\n    const totalMonths = today.diff(this.generateFundsDate, 'months');\r\n    let count = 0;\r\n    const generateFundsDate = this.generateFundsDate;\r\n    this.monthlyPerformanceData = [];\r\n    while (count <= totalMonths) {\r\n      this.monthlyPerformanceData.push(\r\n        this.createRow(\r\n          this.DateFormatter(generateFundsDate, 1, false),\r\n          this.DateFormatter(generateFundsDate, 2, false),\r\n          count\r\n        )\r\n      );\r\n\r\n      generateFundsDate.add(1, 'month');\r\n      count++;\r\n    }\r\n    this.totalGridRows = count;\r\n    this.disableCharts = false;\r\n    this.selectedDate = null;\r\n    this.confirmOption.generateRows = false;\r\n    this.fundTheoreticalGrid.api.setRowData([]);\r\n    this.fundTheoreticalGrid.api.setRowData(this.monthlyPerformanceData);\r\n  }\r\n\r\n  onFileInput(files: FileList) {\r\n    this.disableFileUpload = false;\r\n    this.fileToUpload = files.item(0);\r\n  }\r\n\r\n  uploadRows() {\r\n    if (this.monthlyPerformanceData.length > 0) {\r\n      this.confirmOption.uploadRows = true;\r\n      this.confirmationModal.showModal();\r\n    } else {\r\n      this.uploadMonthlyPerformance();\r\n    }\r\n  }\r\n\r\n  uploadMonthlyPerformance() {\r\n    let rowNodeId = 1;\r\n    this.uploadLoader = true;\r\n    this.financeService.uploadMonthlyPerformance(this.fileToUpload).subscribe(response => {\r\n      this.uploadLoader = false;\r\n      if (response.isSuccessful) {\r\n        const modifiedData = response.payload.map(data => {\r\n          return { ...data, RowId: rowNodeId++, Estimated: true };\r\n        });\r\n        this.totalGridRows = rowNodeId;\r\n        this.monthlyPerformanceData = this.formatPerformanceData(modifiedData);\r\n        this.fundTheoreticalGrid.api.setRowData(this.monthlyPerformanceData);\r\n        AutoSizeAllColumns(this.fundTheoreticalGrid);\r\n\r\n        this.disableFileUpload = true;\r\n        this.fileInput.nativeElement.value = '';\r\n        this.confirmOption.uploadRows = false;\r\n        this.disableCommit = false;\r\n        this.disableCharts = false;\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  confirmReset() {\r\n    const { generateRows, uploadRows } = this.confirmOption;\r\n    if (generateRows) {\r\n      this.generateMonthlyPerformanceRows();\r\n    } else if (uploadRows) {\r\n      this.uploadMonthlyPerformance();\r\n    }\r\n  }\r\n\r\n  doCalculation() {\r\n    const rowRecords = [];\r\n    this.fundTheoreticalGrid.api.forEachNode(node => {\r\n      rowRecords.push(node.data);\r\n    });\r\n\r\n    const formattedRecords = rowRecords.map(data => ({\r\n      ...data,\r\n      fund: data.fund === 'None' ? null : data.fund,\r\n      portfolio: data.portfolio === 'None' ? null : data.portfolio,\r\n      performanceDate: data.year + '-' + this.getMomentMonth(data.month) + '-' + '01'\r\n    }));\r\n\r\n    this.fundTheoreticalApiService.calMonthlyPerformance(formattedRecords).subscribe(response => {\r\n      const rows = this.formatPerformanceData(response.payload);\r\n      this.fundTheoreticalGrid.api.setRowData(rows);\r\n      this.generateData();\r\n    });\r\n  }\r\n\r\n  commitPerformanceData() {\r\n    const recordsToCommit = [];\r\n    this.fundTheoreticalGrid.api.forEachNode((node, index) => {\r\n      if (node.data.id === 0 || node.data.modified) {\r\n        recordsToCommit.push(node.data);\r\n      }\r\n    });\r\n\r\n    let formattedRecords;\r\n    if (recordsToCommit.length > 0) {\r\n      formattedRecords = recordsToCommit.map(data => ({\r\n        ...data,\r\n        fund: data.fund === 'None' ? null : data.fund,\r\n        portfolio: data.portfolio === 'None' ? null : data.portfolio,\r\n        performanceDate: data.year + '-' + this.getMomentMonth(data.month) + '-' + '01'\r\n      }));\r\n\r\n      this.commitLoader = true;\r\n      this.fundTheoreticalApiService\r\n        .commitMonthlyPerformance(formattedRecords)\r\n        .subscribe(response => {\r\n          this.commitLoader = false;\r\n          if (response.isSuccessful) {\r\n            this.toastrService.success('Sucessfully Commited.');\r\n            this.getMonthlyPerformance();\r\n          } else {\r\n            this.toastrService.error('Something went wrong! Try Again.');\r\n          }\r\n        });\r\n    } else {\r\n      this.toastrService.error('No changes to commit.');\r\n    }\r\n    this.disableCommit = true;\r\n  }\r\n\r\n  onToggleChartsView() {\r\n    this.fundTheoreticalConfig.chartsView = !this.fundTheoreticalConfig.chartsView;\r\n    if (this.fundTheoreticalConfig.chartsView) {\r\n      this.generateData();\r\n    }\r\n  }\r\n\r\n  generateData() {\r\n    const dataObject = [\r\n      // { label: 'YTDNetPerformance', data: [] },\r\n      { label: 'QTD', data: [] },\r\n      { label: 'YTD', data: [] },\r\n      { label: 'ITD', data: [] }\r\n    ];\r\n\r\n    let chartData = {};\r\n    dataObject.forEach(model => {\r\n      this.fundTheoreticalGrid.api.forEachNodeAfterFilter((rowNode, index) => {\r\n        model.data.push({\r\n          date: this.getMomentMonth(rowNode.data.month) + '-' + '01' + '-' + rowNode.data.year,\r\n          value:\r\n            rowNode.data[\r\n              model.label === 'YTDNetPerformance' ? 'ytdNetPerformance' : model.label.toLowerCase()\r\n            ] * 100\r\n        });\r\n      });\r\n      chartData = {\r\n        ...chartData,\r\n        [model.label]: model.data\r\n      };\r\n    });\r\n\r\n    this.graphObject = {\r\n      xAxisLabel: 'Date',\r\n      yAxisLabel: 'Value',\r\n      lineColors: ['#34A9FF', '#FFA000', ' #00BD9A'],\r\n      height: '100%',\r\n      width: '100%',\r\n      chartTitle: 'Monthly Performance',\r\n      propId: 'linePerformance',\r\n      graphData: chartData,\r\n      dateTimeFormat: 'MM-DD-YYYY'\r\n    };\r\n  }\r\n\r\n  formatPerformanceData(records): Array<MonthlyPerformanceData> {\r\n    const formattedRecords: Array<MonthlyPerformanceData> = records.map(record => ({\r\n      id: record.Id,\r\n      rowId: record.RowId,\r\n      modified: record.Modified,\r\n      estimated: record.Estimated,\r\n      year: this.DateFormatter(record.PerformanceDate, 1, true),\r\n      month: this.DateFormatter(record.PerformanceDate, 2, true),\r\n      fund: record.Fund === null ? 'None' : record.Fund,\r\n      portfolio: record.PortFolio === null ? 'None' : record.PortFolio,\r\n      monthEndNav: record.MonthEndNav,\r\n      startOfMonthEstimateNav: record.StartOfMonthEstimateNav,\r\n      performance: record.Performance,\r\n      mtd: record.MTD,\r\n      ytdNetPerformance: record.YTDNetPerformance,\r\n      qtd: record.QTD,\r\n      ytd: record.YTD,\r\n      itd: record.ITD,\r\n      createdBy: record.CreatedBy,\r\n      lastUpdatedBy: record.lastUpdatedBy,\r\n      createdDate: record.createdDate,\r\n      lastUpdatedDate: record.lastUpdatedBy\r\n    }));\r\n    return formattedRecords;\r\n  }\r\n\r\n  createRow(generatedYear, generatedMonth, rowNodeId): MonthlyPerformanceData {\r\n    return {\r\n      id: 0,\r\n      rowId: rowNodeId,\r\n      modified: false,\r\n      estimated: true,\r\n      year: generatedYear,\r\n      month: generatedMonth,\r\n      fund: 'None',\r\n      portfolio: 'None',\r\n      monthEndNav: 0,\r\n      startOfMonthEstimateNav: 0,\r\n      performance: 0,\r\n      mtd: 0,\r\n      ytdNetPerformance: 0,\r\n      qtd: 0,\r\n      ytd: 0,\r\n      itd: 0,\r\n      createdBy: '',\r\n      lastUpdatedBy: '',\r\n      createdDate: '',\r\n      lastUpdatedDate: ''\r\n    };\r\n  }\r\n\r\n  getMomentMonth(month): string | number {\r\n    const momentMonth = this.monthsArray.find(obj => obj.month === month);\r\n    const monthInNum = momentMonth.id + 1;\r\n    if (monthInNum < 9) {\r\n      return '0' + monthInNum;\r\n    } else {\r\n      return monthInNum;\r\n    }\r\n  }\r\n\r\n  onBtExport() {\r\n    const params = {\r\n      fileName: 'Accounts',\r\n      sheetName: 'First Sheet',\r\n      columnKeys: ['accountName', 'description', 'category', 'hasJournal', 'type']\r\n    };\r\n    this.fundTheoreticalGrid.api.exportDataAsExcel(params);\r\n    this.downloadExcelUtils.ToastrMessage();\r\n  }\r\n\r\n  refreshGrid() {\r\n    this.fundTheoreticalGrid.api.showLoadingOverlay();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TabsModule, ModalModule, TooltipModule } from 'ngx-bootstrap';\r\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\r\nimport { NgcatalystModule } from 'ngcatalyst';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LpToolkitModule } from 'lp-toolkit';\r\nimport { AngularSplitModule } from 'angular-split';\r\n\r\nimport { FundTheoreticalComponent } from './fund-theoretical.component';\r\nimport { DailyPnlComponent } from '../fund-theoretical/daily-pnl/daily-pnl.component';\r\nimport { FxRatesComponent } from '../fund-theoretical/fx-rates/fx-rates.component';\r\nimport { MarketPricesComponent } from '../fund-theoretical/market-prices/market-prices.component';\r\nimport { TaxRatesComponent } from '../fund-theoretical/tax-rates/tax-rates.component';\r\nimport { TaxRateModalComponent } from './tax-rates/tax-rate-modal/tax-rate-modal.component';\r\nimport { FundtheoreticalRoutes } from './fund-theoretical.route';\r\n\r\nimport { SharedModule } from '../../shared.module';\r\n\r\nconst fundtheoreticalComponents = [\r\n  FundTheoreticalComponent,\r\n  DailyPnlComponent,\r\n  FxRatesComponent,\r\n  MarketPricesComponent,\r\n  TaxRatesComponent,\r\n  TaxRateModalComponent\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...fundtheoreticalComponents],\r\n  exports: [],\r\n  imports: [\r\n    CommonModule,\r\n    TabsModule,\r\n    ModalModule,\r\n    TooltipModule,\r\n    TypeaheadModule.forRoot(),\r\n    FormsModule,\r\n    NgxDaterangepickerMd.forRoot({\r\n      applyLabel: 'Okay',\r\n      firstDay: 1\r\n    }),\r\n    NgcatalystModule,\r\n    RouterModule.forChild(FundtheoreticalRoutes),\r\n    LpToolkitModule,\r\n    AngularSplitModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class FundTheoreticalModule {}\r\n","import { Route } from '@angular/router';\r\nimport { FundTheoreticalComponent } from './fund-theoretical.component';\r\nimport { PerformanceCanDeactivateGuard } from 'src/services/guards/performance-can-deactivate-guard.service';\r\n\r\nexport const FundtheoreticalRoutes: Route[] = [\r\n    {\r\n        path: '',\r\n        component: FundTheoreticalComponent,\r\n        canDeactivate: [PerformanceCanDeactivateGuard]\r\n\r\n    }\r\n]","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZnVuZC10aGVvcmV0aWNhbC9meC1yYXRlcy9meC1yYXRlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ColGroupDef, ColDef } from 'ag-grid-community';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as moment from 'moment';\r\nimport { GridLayoutMenuComponent, CustomGridOptions } from 'lp-toolkit';\r\nimport { GridId, GridName, LayoutConfig } from 'src/shared/utils/AppEnums';\r\nimport { DataGridModalComponent } from 'src/shared/Component/data-grid-modal/data-grid-modal.component';\r\nimport { CacheService } from 'src/services/common/cache.service';\r\nimport { FundTheoreticalApiService } from '../../../../services/fund-theoretical-api.service';\r\nimport { GraphObject } from 'src/shared/Models/graph-object';\r\nimport { UtilsConfig } from 'src/shared/Models/utils-config';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { ContextMenu } from 'src/shared/Models/common';\r\nimport { DataDictionary } from 'src/shared/utils/DataDictionary';\r\nimport { HeightStyle, SideBar, DateFormatter, Ranges, SetDateRange } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-fx-rates',\r\n  templateUrl: './fx-rates.component.html',\r\n  styleUrls: ['./fx-rates.component.scss']\r\n})\r\nexport class FxRatesComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n  @ViewChild('dataGridModal', { static: false }) dataGridModal: DataGridModalComponent;\r\n\r\n  fxRate: CustomGridOptions;\r\n  fxRatesConfig: {\r\n    fxRatesSize: number;\r\n    chartsSize: number;\r\n    fxRatesView: boolean;\r\n    chartsView: boolean;\r\n    useTransition: boolean;\r\n  } = {\r\n    fxRatesSize: 50,\r\n    chartsSize: 50,\r\n    fxRatesView: true,\r\n    chartsView: false,\r\n    useTransition: true\r\n  };\r\n  totalGridRows: number;\r\n  title: string;\r\n  gridData: any;\r\n\r\n  graphObject: GraphObject = null;\r\n  disableCharts = true;\r\n\r\n  fileToUpload: File = null;\r\n  uploadLoader = false;\r\n  disableFileUpload = true;\r\n  disableCommit = true;\r\n\r\n  filterByCurrency = '';\r\n\r\n  selectedDate = null;\r\n  selected: { startDate: moment.Moment; endDate: moment.Moment };\r\n  startDate: any;\r\n  endDate: any;\r\n\r\n  selectedYAxis: any = null;\r\n  selectedXAxis: any = null;\r\n  ranges: any = Ranges;\r\n\r\n  styleForHeight = HeightStyle(224);\r\n  overlappingStyle = { backgroundColor: '#f9a89f' };\r\n\r\n  vRanges = [\r\n    {\r\n      Description: 'Last 30 days',\r\n      Days: 30\r\n    },\r\n    {\r\n      Description: 'Last 2 months',\r\n      Days: 60\r\n    },\r\n    {\r\n      Description: 'Last 6 months',\r\n      Days: 180\r\n    },\r\n    {\r\n      Description: 'Last year',\r\n      Days: 360\r\n    },\r\n    {\r\n      Description: 'Custom',\r\n      Days: 0\r\n    }\r\n  ];\r\n\r\n  vRange = this.vRanges[0].Days;\r\n\r\n  utilsConfig: UtilsConfig = {\r\n    expandGrid: false,\r\n    collapseGrid: false,\r\n    refreshGrid: true,\r\n    resetGrid: false,\r\n    exportExcel: false\r\n  };\r\n  commitLoader = false;\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private cacheService: CacheService,\r\n    private toastrService: ToastrService,\r\n    private fundTheoreticalApiService: FundTheoreticalApiService,\r\n    public dataDictionary: DataDictionary\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n    this.initGrid();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initPageLayout();\r\n  }\r\n\r\n  initPageLayout() {\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.fxRatesConfigKey);\r\n    if (config) {\r\n      this.fxRatesConfig = JSON.parse(config.value);\r\n    }\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  applyPageLayout(event) {\r\n    if (event.sizes) {\r\n      this.fxRatesConfig.fxRatesSize = event.sizes[0];\r\n      this.fxRatesConfig.chartsSize = event.sizes[1];\r\n    }\r\n\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.fxRatesConfigKey);\r\n    const payload = {\r\n      id: !config ? 0 : config.id,\r\n      project: LayoutConfig.projectName,\r\n      uom: 'JSON',\r\n      key: LayoutConfig.fxRatesConfigKey,\r\n      value: JSON.stringify(this.fxRatesConfig),\r\n      description: LayoutConfig.fxRatesConfigKey\r\n    };\r\n\r\n    if (!config) {\r\n      this.cacheService.addUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Added');\r\n      });\r\n    } else {\r\n      this.cacheService.updateUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Updated');\r\n      });\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    this.disableCommit = true;\r\n    this.fundTheoreticalApiService.getFxRatesData().subscribe(response => {\r\n      if (response.isSuccessful) {\r\n        const data = response.payload.sort((x, y) => {\r\n          return new Date(y.BusinessDate).getTime() - new Date(x.BusinessDate).getTime();\r\n        });\r\n        this.gridData = data.map(data => ({\r\n          id: data.Id,\r\n          securityId: data.SecurityId,\r\n          businessDate: DateFormatter(data.BusinessDate),\r\n          event: data.Event,\r\n          price: data.Price,\r\n          currency: data.Currency,\r\n          modified: false\r\n        }));\r\n        this.fxRate.api.setRowData(this.gridData);\r\n        this.fxRate.api.sizeColumnsToFit();\r\n      }\r\n    });\r\n  }\r\n\r\n  initGrid() {\r\n    this.fxRate = {\r\n      columnDefs: this.getColDefs(),\r\n      rowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      getExternalFilterState: this.getExternalFilterState.bind(this),\r\n      setExternalFilter: this.isExternalFilterPassed.bind(this),\r\n      pinnedBottomRowData: null,\r\n      onRowSelected: params => {},\r\n      clearExternalFilter: this.clearFilters.bind(this),\r\n      doesExternalFilterPass: this.doesExternalFilterPass.bind(this),\r\n      isExternalFilterPresent: this.isExternalFilterPresent.bind(this),\r\n      getContextMenuItems: this.getContextMenuItems.bind(this),\r\n      rowSelection: 'single',\r\n      rowGroupPanelShow: 'after',\r\n      pivotPanelShow: 'after',\r\n      singleClickEdit: true,\r\n      pivotColumnGroupTotals: 'after',\r\n      pivotRowTotals: 'after',\r\n      animateRows: true,\r\n      onGridReady: params => {\r\n        params.api.sizeColumnsToFit();\r\n      },\r\n      onFirstDataRendered: params => {},\r\n      onCellValueChanged: params => {\r\n        this.onCellValueChanged(params);\r\n      },\r\n      getRowStyle: params => {\r\n        if (params.data !== undefined && params.data.modified) {\r\n          return this.overlappingStyle;\r\n        }\r\n      },\r\n      getRowNodeId: data => {\r\n        return data.id;\r\n      },\r\n      defaultColDef: {\r\n        resizable: true,\r\n        sortable: true,\r\n        filter: true\r\n      }\r\n    };\r\n    this.fxRate.sideBar = SideBar(GridId.fxRateId, GridName.fxRate, this.fxRate);\r\n  }\r\n\r\n  initCols() {\r\n    const colDefs = this.getColDefs();\r\n    this.fxRate.api.setColumnDefs(colDefs);\r\n  }\r\n\r\n  doesExternalFilterPass(node): boolean {\r\n    const businessDate = new Date(node.data.businessDate);\r\n\r\n    if ((this.filterByCurrency !== '' && this.startDate) || this.endDate) {\r\n      return (\r\n        node.data.currency.toLowerCase().includes(this.filterByCurrency.toLowerCase()) &&\r\n        businessDate >= this.startDate.toDate() &&\r\n        businessDate <= this.endDate.toDate()\r\n      );\r\n    }\r\n\r\n    if (this.filterByCurrency !== '') {\r\n      return node.data.currency.toLowerCase().includes(this.filterByCurrency.toLowerCase());\r\n    }\r\n\r\n    if (this.startDate || this.endDate) {\r\n      return businessDate >= this.startDate.toDate() && businessDate <= this.endDate.toDate();\r\n    }\r\n  }\r\n\r\n  isExternalFilterPresent(): boolean {\r\n    if (this.startDate || this.endDate || this.filterByCurrency !== '') {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  clearFilters() {\r\n    this.fxRate.api.redrawRows();\r\n    (this.filterByCurrency = ''), (this.selected = null);\r\n    this.startDate = moment('01-01-1901', 'MM-DD-YYYY');\r\n    this.endDate = moment();\r\n    this.selectedDate = null;\r\n    this.fxRate.api.setFilterModel(null);\r\n    this.fxRate.api.onFilterChanged();\r\n  }\r\n\r\n  getExternalFilterState() {\r\n    return {\r\n      currencyFilter: this.filterByCurrency,\r\n      dateFilter: {\r\n        startDate: this.startDate !== undefined ? this.startDate : '',\r\n        endDate: this.endDate !== undefined ? this.endDate : ''\r\n      }\r\n    };\r\n  }\r\n\r\n  isExternalFilterPassed(object) {\r\n    const { currencyFilter } = object;\r\n    const { dateFilter } = object;\r\n    this.filterByCurrency = currencyFilter !== undefined ? currencyFilter : this.filterByCurrency;\r\n    this.setDateRange(dateFilter);\r\n    this.fxRate.api.onFilterChanged();\r\n  }\r\n\r\n  setDateRange(dateFilter: any) {\r\n    const dates = SetDateRange(dateFilter, this.startDate, this.endDate);\r\n    this.startDate = dates[0];\r\n    this.endDate = dates[1];\r\n\r\n    this.selectedDate =\r\n      dateFilter.startDate !== '' ? { startDate: this.startDate, endDate: this.endDate } : null;\r\n  }\r\n\r\n  onCellValueChanged(params) {\r\n    if (params.colDef.field === 'price' && params.oldValue != params.newValue) {\r\n      this.disableCommit = false;\r\n      const row = this.fxRate.api.getRowNode(params.data.id);\r\n      row.setDataValue('modified', true);\r\n    }\r\n  }\r\n\r\n  getColDefs(): Array<ColDef | ColGroupDef> {\r\n    const colDefs: Array<ColDef | ColGroupDef> = [\r\n      {\r\n        headerName: 'Business Date',\r\n        field: 'businessDate',\r\n        enableRowGroup: true,\r\n        suppressCellFlash: true\r\n      },\r\n      {\r\n        headerName: 'Currency',\r\n        field: 'currency',\r\n        enableRowGroup: true\r\n      },\r\n      {\r\n        headerName: 'Event',\r\n        field: 'event',\r\n        enableRowGroup: true\r\n      },\r\n      {\r\n        headerName: 'Fx Rate',\r\n        field: 'price',\r\n        editable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          params.data !== undefined\r\n            ? this.dataDictionary.numberFormatter(params.node.data.price, false, '1.8-8')\r\n            : ''\r\n      },\r\n      {\r\n        headerName: 'Is Modified',\r\n        field: 'modified',\r\n        hide: true\r\n      }\r\n    ];\r\n\r\n    return colDefs;\r\n  }\r\n\r\n  getContextMenuItems(params): Array<ContextMenu> {\r\n    const addDefaultItems = [\r\n      {\r\n        name: 'Visualize',\r\n        action: () => {\r\n          this.visualizeData();\r\n        }\r\n      },\r\n      {\r\n        name: 'FxRate Audit Trail',\r\n        action: () => {\r\n          this.openDataGridModal(params);\r\n        }\r\n      }\r\n    ];\r\n    return GetContextMenu(false, addDefaultItems, true, null, params);\r\n  }\r\n\r\n  openDataGridModal(rowNode) {\r\n    const { id } = rowNode.node.data;\r\n    this.fundTheoreticalApiService.GetAuditTrail(id).subscribe(response => {\r\n      const { payload } = response;\r\n      const columns = this.getAuditColDefs();\r\n      const modifiedCols = columns.map(col => {\r\n        return { ...col, editable: false };\r\n      });\r\n      this.title = 'Fx Rate';\r\n      this.dataGridModal.openModal(modifiedCols, payload);\r\n    });\r\n  }\r\n\r\n  getAuditColDefs(): Array<ColDef | ColGroupDef> {\r\n    return [\r\n      {\r\n        headerName: 'Business Date',\r\n        field: 'BusinessDate',\r\n        sortable: true\r\n      },\r\n      {\r\n        headerName: 'Event',\r\n        field: 'Event'\r\n      },\r\n      {\r\n        headerName: 'LastUpdatedBy',\r\n        field: 'LastUpdatedBy'\r\n      },\r\n      {\r\n        headerName: 'LastUpdatedOn',\r\n        field: 'LastUpdatedOn'\r\n      },\r\n      {\r\n        headerName: 'Price',\r\n        field: 'Price'\r\n      }\r\n    ];\r\n  }\r\n\r\n  onToggleChartsView() {\r\n    this.fxRatesConfig.chartsView = !this.fxRatesConfig.chartsView;\r\n  }\r\n\r\n  vChange($event) {}\r\n\r\n  visualizeData() {\r\n    const data = {};\r\n    let toDate;\r\n    let fromDate;\r\n    const focusedCell = this.fxRate.api.getFocusedCell();\r\n    const selectedRow = this.fxRate.api.getDisplayedRowAtIndex(focusedCell.rowIndex).data;\r\n    const column = 'price';\r\n    const selectedCurrency = selectedRow.currency;\r\n    data[selectedCurrency] = [];\r\n    if (this.vRange != 0) {\r\n      toDate = moment(selectedRow.businessDate);\r\n      fromDate = moment(selectedRow.businessDate).subtract(this.vRange, 'days');\r\n    }\r\n\r\n    this.selectedXAxis = toDate;\r\n    this.selectedYAxis = selectedCurrency;\r\n    this.fxRate.api.forEachNodeAfterFilter((rowNode, index) => {\r\n      if (rowNode.group) {\r\n        return;\r\n      }\r\n\r\n      const currentDate = moment(rowNode.data.businessDate);\r\n      if (this.vRange != 0) {\r\n        if (\r\n          rowNode.data.currency === selectedCurrency\r\n          // &&\r\n          // currentDate.isSameOrAfter(fromDate) &&\r\n          // currentDate.isSameOrBefore(toDate)\r\n        ) {\r\n          data[selectedCurrency].push({\r\n            date: rowNode.data.businessDate,\r\n            value: rowNode.data[column]\r\n          });\r\n        }\r\n      } else {\r\n        if (rowNode.data.currency === selectedCurrency) {\r\n          data[selectedCurrency].push({\r\n            date: rowNode.data.businessDate,\r\n            value: rowNode.data[column]\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.graphObject = {\r\n      xAxisLabel: 'Date',\r\n      yAxisLabel: 'Price',\r\n      lineColors: ['#ff6960', '#00bd9a'],\r\n      height: 410,\r\n      width: '95%',\r\n      chartTitle: selectedCurrency,\r\n      propId: 'lineFxPrice',\r\n      graphData: data,\r\n      dateTimeFormat: 'YYYY-MM-DD',\r\n      referenceDate: toDate\r\n    };\r\n\r\n    this.fxRatesConfig.chartsView = true;\r\n    this.disableCharts = false;\r\n  }\r\n\r\n  commitMarketPriceData() {\r\n    const recordsToCommit = [];\r\n    this.fxRate.api.forEachNode((node, index) => {\r\n      if (node.data.modified) {\r\n        recordsToCommit.push({\r\n          Id: node.data.id,\r\n          Price: node.data.price\r\n        });\r\n      }\r\n    });\r\n    this.commitLoader = true;\r\n    this.fundTheoreticalApiService.editFxRatePriceData(recordsToCommit).subscribe(response => {\r\n      this.commitLoader = false;\r\n      this.disableCommit = true;\r\n      if (response.isSuccessful) {\r\n        this.toastrService.success('Sucessfully Commited.');\r\n        this.getData();\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadData() {\r\n    this.uploadLoader = true;\r\n    this.fundTheoreticalApiService.uploadFxData(this.fileToUpload).subscribe(response => {\r\n      this.uploadLoader = false;\r\n      if (response.isSuccessful) {\r\n        this.fileInput.nativeElement.value = '';\r\n        this.disableFileUpload = true;\r\n        this.gridData = response.payload;\r\n        this.fxRate.api.setRowData(this.gridData);\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngModelChange(date) {\r\n    this.startDate = date.startDate;\r\n    this.endDate = date.endDate;\r\n    this.fxRate.api.onFilterChanged();\r\n  }\r\n\r\n  onSymbolKey(e) {\r\n    this.filterByCurrency = e.srcElement.value;\r\n    this.fxRate.api.onFilterChanged();\r\n\r\n    // For the moment we react to each key stroke\r\n    if (e.code === 'Enter' || e.code === 'Tab') {\r\n    }\r\n  }\r\n\r\n  ngModelChangeSymbol(e) {\r\n    this.filterByCurrency = e;\r\n    this.fxRate.api.onFilterChanged();\r\n  }\r\n\r\n  refreshGrid() {\r\n    this.fxRate.api.showLoadingOverlay();\r\n    this.getData();\r\n  }\r\n\r\n  onFileInput(files: FileList) {\r\n    this.disableFileUpload = false;\r\n    this.fileToUpload = files.item(0);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZnVuZC10aGVvcmV0aWNhbC9tYXJrZXQtcHJpY2VzL21hcmtldC1wcmljZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  ViewChild,\r\n  ElementRef,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as moment from 'moment';\r\nimport { GridLayoutMenuComponent, CustomGridOptions } from 'lp-toolkit';\r\nimport { GridId, GridName, LayoutConfig } from 'src/shared/utils/AppEnums';\r\nimport { DataGridModalComponent } from 'src/shared/Component/data-grid-modal/data-grid-modal.component';\r\nimport { CreateSecurityComponent } from 'src/shared/Modal/create-security/create-security.component';\r\nimport { CacheService } from 'src/services/common/cache.service';\r\nimport { FundTheoreticalApiService } from 'src/services/fund-theoretical-api.service';\r\nimport { SecurityApiService } from 'src/services/security-api.service';\r\nimport { GraphObject } from 'src/shared/Models/graph-object';\r\nimport { UtilsConfig } from 'src/shared/Models/utils-config';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { ContextMenu } from 'src/shared/Models/common';\r\nimport { DataDictionary } from 'src/shared/utils/DataDictionary';\r\nimport { HeightStyle, SideBar, DateFormatter, Ranges, SetDateRange } from 'src/shared/utils/Shared';\r\n\r\n@Component({\r\n  selector: 'app-market-prices',\r\n  templateUrl: './market-prices.component.html',\r\n  styleUrls: ['./market-prices.component.scss']\r\n})\r\nexport class MarketPricesComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n  @ViewChild('dataGridModal', { static: false })\r\n  @ViewChild('securityModal', { static: false })\r\n  securityModal: CreateSecurityComponent;\r\n  dataGridModal: DataGridModalComponent;\r\n\r\n  isLoading = false;\r\n  marketPriceGrid: CustomGridOptions;\r\n  marketPricesConfig: {\r\n    marketPricesSize: number;\r\n    chartsSize: number;\r\n    marketPricesView: boolean;\r\n    chartsView: boolean;\r\n    useTransition: boolean;\r\n  } = {\r\n    marketPricesSize: 50,\r\n    chartsSize: 50,\r\n    marketPricesView: true,\r\n    chartsView: false,\r\n    useTransition: true\r\n  };\r\n  selectedDate = null;\r\n  gridData: any;\r\n  fileToUpload: File = null;\r\n  totalGridRows: number;\r\n  graphObject: GraphObject = null;\r\n  disableCharts = true;\r\n  sliderValue = 0;\r\n  uploadLoader = false;\r\n  disableFileUpload = true;\r\n  disableCommit = true;\r\n  title: string;\r\n  filterBySymbol = '';\r\n  selected: { startDate: moment.Moment; endDate: moment.Moment };\r\n  startDate: any;\r\n  endDate: any;\r\n  selectedYAxis: any = null;\r\n  selectedXAxis: any = null;\r\n  ranges: any = Ranges;\r\n\r\n  styleForHeight = HeightStyle(224);\r\n  overlappingStyle = { backgroundColor: '#f9a89f' };\r\n  vRanges = [\r\n    {\r\n      Description: 'Last 30 days',\r\n      Days: 30\r\n    },\r\n    {\r\n      Description: 'Last 2 months',\r\n      Days: 60\r\n    },\r\n    {\r\n      Description: 'Last 6 months',\r\n      Days: 180\r\n    },\r\n    {\r\n      Description: 'Last year',\r\n      Days: 360\r\n    },\r\n    {\r\n      Description: 'Custom',\r\n      Days: 0\r\n    }\r\n  ];\r\n\r\n  vRange = this.vRanges[0].Days;\r\n\r\n  utilsConfig: UtilsConfig = {\r\n    expandGrid: false,\r\n    collapseGrid: false,\r\n    refreshGrid: true,\r\n    resetGrid: false,\r\n    exportExcel: false\r\n  };\r\n  commitLoader = false;\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private cacheService: CacheService,\r\n    private toastrService: ToastrService,\r\n    private fundTheoreticalApiService: FundTheoreticalApiService,\r\n    private securityApiService: SecurityApiService,\r\n    public dataDictionary: DataDictionary\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getData();\r\n    this.initGrid();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initPageLayout();\r\n  }\r\n\r\n  initPageLayout() {\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.marketPricesConfigKey);\r\n    if (config) {\r\n      this.marketPricesConfig = JSON.parse(config.value);\r\n    }\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  applyPageLayout(event) {\r\n    if (event.sizes) {\r\n      this.marketPricesConfig.marketPricesSize = event.sizes[0];\r\n      this.marketPricesConfig.chartsSize = event.sizes[1];\r\n    }\r\n\r\n    const persistUIState = this.cacheService.getConfigByKey(LayoutConfig.persistUIState);\r\n    if (!persistUIState || !JSON.parse(persistUIState.value)) {\r\n      return;\r\n    }\r\n\r\n    const config = this.cacheService.getConfigByKey(LayoutConfig.marketPricesConfigKey);\r\n    const payload = {\r\n      id: !config ? 0 : config.id,\r\n      project: LayoutConfig.projectName,\r\n      uom: 'JSON',\r\n      key: LayoutConfig.marketPricesConfigKey,\r\n      value: JSON.stringify(this.marketPricesConfig),\r\n      description: LayoutConfig.marketPricesConfigKey\r\n    };\r\n\r\n    if (!config) {\r\n      this.cacheService.addUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Added');\r\n      });\r\n    } else {\r\n      this.cacheService.updateUserConfig(payload).subscribe(response => {\r\n        console.log('User Config Updated');\r\n      });\r\n    }\r\n  }\r\n\r\n  getData() {\r\n    this.disableCommit = true;\r\n    this.fundTheoreticalApiService.getMarketPriceData().subscribe(response => {\r\n      if (response.isSuccessful) {\r\n        const data = response.payload.sort((x, y) => {\r\n          return new Date(y.BusinessDate).getTime() - new Date(x.BusinessDate).getTime();\r\n        });\r\n        this.gridData = data.map(element => ({\r\n          id: element.Id,\r\n          securityId: element.SecurityId,\r\n          businessDate: DateFormatter(element.BusinessDate),\r\n          symbol: element.Symbol,\r\n          event: element.Event,\r\n          price: element.Price,\r\n          modified: false\r\n        }));\r\n        this.marketPriceGrid.api.setRowData(this.gridData);\r\n        this.marketPriceGrid.api.sizeColumnsToFit();\r\n      }\r\n    });\r\n  }\r\n\r\n  initGrid() {\r\n    this.marketPriceGrid = {\r\n      columnDefs: this.getColDefs(),\r\n      rowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      getExternalFilterState: this.getExternalFilterState.bind(this),\r\n      pinnedBottomRowData: null,\r\n      setExternalFilter: this.isExternalFilterPassed.bind(this),\r\n      onRowSelected: params => {},\r\n      clearExternalFilter: this.clearFilters.bind(this),\r\n      doesExternalFilterPass: this.doesExternalFilterPass.bind(this),\r\n      isExternalFilterPresent: this.isExternalFilterPresent.bind(this),\r\n      getContextMenuItems: this.getContextMenuItems.bind(this),\r\n      rowSelection: 'single',\r\n      rowGroupPanelShow: 'after',\r\n      pivotPanelShow: 'after',\r\n      singleClickEdit: true,\r\n      pivotColumnGroupTotals: 'after',\r\n      pivotRowTotals: 'after',\r\n      animateRows: true,\r\n      onGridReady: params => {\r\n        this.marketPriceGrid.api.sizeColumnsToFit();\r\n      },\r\n      onFirstDataRendered: params => {},\r\n      onCellValueChanged: params => {\r\n        this.onCellValueChanged(params);\r\n      },\r\n      getRowStyle: params => {\r\n        if (params.data !== undefined && params.data.modified) {\r\n          return this.overlappingStyle;\r\n        }\r\n      },\r\n      getRowNodeId: data => {\r\n        return data.id;\r\n      },\r\n      defaultColDef: {\r\n        resizable: true,\r\n        sortable: true,\r\n        filter: true\r\n      }\r\n    };\r\n    this.marketPriceGrid.sideBar = SideBar(\r\n      GridId.marketPriceId,\r\n      GridName.marketPrice,\r\n      this.marketPriceGrid\r\n    );\r\n  }\r\n\r\n  initCols() {\r\n    const colDefs = this.getColDefs();\r\n    this.marketPriceGrid.api.setColumnDefs(colDefs);\r\n  }\r\n\r\n  doesExternalFilterPass(node): boolean {\r\n    const businessDate = new Date(node.data.businessDate);\r\n\r\n    if ((this.filterBySymbol !== '' && this.startDate) || this.endDate) {\r\n      return (\r\n        node.data.symbol.toLowerCase().includes(this.filterBySymbol.toLowerCase()) &&\r\n        businessDate >= this.startDate.toDate() &&\r\n        businessDate <= this.endDate.toDate()\r\n      );\r\n    }\r\n\r\n    if (this.filterBySymbol !== '') {\r\n      return node.data.symbol.toLowerCase().includes(this.filterBySymbol.toLowerCase());\r\n    }\r\n\r\n    if (this.startDate || this.endDate) {\r\n      return businessDate >= this.startDate.toDate() && businessDate <= this.endDate.toDate();\r\n    }\r\n  }\r\n\r\n  isExternalFilterPresent(): boolean {\r\n    if (this.startDate || this.endDate || this.filterBySymbol !== '') {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  clearFilters() {\r\n    this.marketPriceGrid.api.redrawRows();\r\n    (this.filterBySymbol = ''), (this.selected = null);\r\n    this.startDate = moment('01-01-1901', 'MM-DD-YYYY');\r\n    this.endDate = moment();\r\n    this.selectedDate = null;\r\n    this.marketPriceGrid.api.setFilterModel(null);\r\n    this.marketPriceGrid.api.onFilterChanged();\r\n  }\r\n\r\n  getExternalFilterState() {\r\n    return {\r\n      symbolFilter: this.filterBySymbol,\r\n      dateFilter: {\r\n        startDate: this.startDate !== undefined ? this.startDate : '',\r\n        endDate: this.endDate !== undefined ? this.endDate : ''\r\n      }\r\n    };\r\n  }\r\n\r\n  isExternalFilterPassed(object) {\r\n    const { symbolFilter } = object;\r\n    const { dateFilter } = object;\r\n    this.filterBySymbol = symbolFilter !== undefined ? symbolFilter : this.filterBySymbol;\r\n    this.setDateRange(dateFilter);\r\n    this.marketPriceGrid.api.onFilterChanged();\r\n  }\r\n\r\n  setDateRange(dateFilter: any) {\r\n    const dates = SetDateRange(dateFilter, this.startDate, this.endDate);\r\n    this.startDate = dates[0];\r\n    this.endDate = dates[1];\r\n\r\n    this.selectedDate =\r\n      dateFilter.startDate !== '' ? { startDate: this.startDate, endDate: this.endDate } : null;\r\n  }\r\n\r\n  onCellValueChanged(params) {\r\n    if (params.colDef.field === 'price' && params.oldValue != params.newValue) {\r\n      this.disableCommit = false;\r\n      const row = this.marketPriceGrid.api.getRowNode(params.data.id);\r\n      row.setDataValue('modified', true);\r\n    }\r\n  }\r\n\r\n  getColDefs(): Array<ColDef | ColGroupDef> {\r\n    const colDefs: Array<ColDef | ColGroupDef> = [\r\n      {\r\n        headerName: 'Business Date',\r\n        field: 'businessDate',\r\n        enableRowGroup: true,\r\n        suppressCellFlash: true\r\n      },\r\n      {\r\n        headerName: 'Symbol',\r\n        field: 'symbol',\r\n        enableRowGroup: true\r\n      },\r\n      {\r\n        headerName: 'Event',\r\n        field: 'event',\r\n        enableRowGroup: true\r\n      },\r\n      {\r\n        headerName: 'Price',\r\n        field: 'price',\r\n        editable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          params.data !== undefined\r\n            ? this.dataDictionary.numberFormatter(params.node.data.price, false, '1.8-8')\r\n            : ''\r\n      },\r\n      {\r\n        headerName: 'Is Modified',\r\n        field: 'modified',\r\n        hide: true\r\n      }\r\n    ];\r\n\r\n    return colDefs;\r\n  }\r\n\r\n  getContextMenuItems(params): Array<ContextMenu> {\r\n    const addDefaultItems = [\r\n      {\r\n        name: 'Visualize',\r\n        action: () => {\r\n          this.visualizeData();\r\n        }\r\n      },\r\n      {\r\n        name: 'Audit Trail',\r\n        action: () => {\r\n          this.openDataGridModal(params);\r\n        }\r\n      },\r\n      {\r\n        name: 'Security Details',\r\n        subMenu: [\r\n          {\r\n            name: 'Extend',\r\n            action: () => {\r\n              this.isLoading = true;\r\n\r\n              this.securityApiService.getDataForSecurityModal(params.node.data.symbol).subscribe(\r\n                ([config, securityDetails]: [any, any]) => {\r\n                  this.isLoading = false;\r\n                  if (!config.isSuccessful) {\r\n                    this.toastrService.error('No security type found against the selected symbol!');\r\n                    return;\r\n                  }\r\n                  if (securityDetails.payload.length === 0) {\r\n                    this.securityModal.openSecurityModalFromOutside(\r\n                      params.node.data.symbol,\r\n                      config.payload[0].SecurityType,\r\n                      config.payload[0].Fields,\r\n                      null,\r\n                      'extend'\r\n                    );\r\n                  } else {\r\n                    this.securityModal.openSecurityModalFromOutside(\r\n                      params.node.data.symbol,\r\n                      config.payload[0].SecurityType,\r\n                      config.payload[0].Fields,\r\n                      securityDetails.payload[0],\r\n                      'extend'\r\n                    );\r\n                  }\r\n                },\r\n                error => {\r\n                  this.isLoading = false;\r\n                }\r\n              );\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ];\r\n    return GetContextMenu(false, addDefaultItems, true, null, params);\r\n  }\r\n\r\n  openDataGridModal(rowNode) {\r\n    const { id } = rowNode.node.data;\r\n    this.fundTheoreticalApiService.getMarketPriceAudit(id).subscribe(response => {\r\n      const { payload } = response;\r\n      const columns = this.getAuditColDefs();\r\n      const modifiedCols = columns.map(col => {\r\n        return { ...col, editable: false };\r\n      });\r\n      this.title = 'Market Price';\r\n      this.dataGridModal.openModal(modifiedCols, payload);\r\n    });\r\n  }\r\n\r\n  getAuditColDefs(): Array<ColDef | ColGroupDef> {\r\n    return [\r\n      {\r\n        headerName: 'Business Date',\r\n        field: 'BusinessDate',\r\n        sortable: true\r\n      },\r\n      {\r\n        headerName: 'Symbol',\r\n        field: 'Symbol'\r\n      },\r\n      {\r\n        headerName: 'Event',\r\n        field: 'Event'\r\n      },\r\n      {\r\n        headerName: 'LastUpdatedBy',\r\n        field: 'LastUpdatedBy'\r\n      },\r\n      {\r\n        headerName: 'LastUpdatedOn',\r\n        field: 'LastUpdatedOn'\r\n      },\r\n      {\r\n        headerName: 'Price',\r\n        field: 'Price'\r\n      },\r\n      {\r\n        headerName: 'SecurityId',\r\n        field: 'SecurityId'\r\n      }\r\n    ];\r\n  }\r\n\r\n  onToggleChartsView() {\r\n    this.marketPricesConfig.chartsView = !this.marketPricesConfig.chartsView;\r\n  }\r\n\r\n  vChange($event) {}\r\n\r\n  visualizeData() {\r\n    const data = {};\r\n    let toDate;\r\n    let fromDate;\r\n    const focusedCell = this.marketPriceGrid.api.getFocusedCell();\r\n    const selectedRow = this.marketPriceGrid.api.getDisplayedRowAtIndex(focusedCell.rowIndex).data;\r\n    const column = 'price';\r\n    const selectedSymbol = selectedRow.symbol;\r\n    data[selectedSymbol] = [];\r\n    if (this.vRange != 0) {\r\n      toDate = moment(selectedRow.businessDate);\r\n      fromDate = moment(selectedRow.businessDate).subtract(this.vRange, 'days');\r\n    }\r\n\r\n    this.selectedXAxis = toDate;\r\n    this.selectedYAxis = selectedSymbol;\r\n    this.marketPriceGrid.api.forEachNodeAfterFilter((rowNode, index) => {\r\n      if (rowNode.group) {\r\n        return;\r\n      }\r\n\r\n      const currentDate = moment(rowNode.data.businessDate);\r\n      if (this.vRange != 0) {\r\n        if (\r\n          rowNode.data.symbol === selectedSymbol\r\n          // &&\r\n          // currentDate.isSameOrAfter(fromDate) &&\r\n          // currentDate.isSameOrBefore(toDate)\r\n        ) {\r\n          data[selectedSymbol].push({\r\n            date: rowNode.data.businessDate,\r\n            value: rowNode.data[column]\r\n          });\r\n        }\r\n      } else {\r\n        if (rowNode.data.symbol === selectedSymbol) {\r\n          data[selectedSymbol].push({\r\n            date: rowNode.data.businessDate,\r\n            value: rowNode.data[column]\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.graphObject = {\r\n      xAxisLabel: 'Date',\r\n      yAxisLabel: 'Symbol',\r\n      lineColors: ['#ff6960', '#00bd9a'],\r\n      height: 410,\r\n      width: '95%',\r\n      chartTitle: selectedSymbol,\r\n      propId: 'lineMarketPrice',\r\n      graphData: data,\r\n      dateTimeFormat: 'YYYY-MM-DD',\r\n      referenceDate: toDate\r\n    };\r\n\r\n    this.marketPricesConfig.chartsView = true;\r\n    this.disableCharts = false;\r\n  }\r\n\r\n  commitMarketPriceData() {\r\n    const recordsToCommit = [];\r\n    this.marketPriceGrid.api.forEachNode((node, index) => {\r\n      if (node.data.modified) {\r\n        recordsToCommit.push({\r\n          Id: node.data.id,\r\n          Price: node.data.price\r\n        });\r\n      }\r\n    });\r\n    this.commitLoader = true;\r\n    this.fundTheoreticalApiService.editMarketPriceData(recordsToCommit).subscribe(response => {\r\n      this.commitLoader = false;\r\n      this.disableCommit = true;\r\n      if (response.isSuccessful) {\r\n        this.toastrService.success('Sucessfully Commited.');\r\n        this.getData();\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadData() {\r\n    this.uploadLoader = true;\r\n    this.fundTheoreticalApiService.uploadMarketPriceData(this.fileToUpload).subscribe(response => {\r\n      this.uploadLoader = false;\r\n      if (response.isSuccessful) {\r\n        this.fileInput.nativeElement.value = '';\r\n        this.disableFileUpload = true;\r\n        this.gridData = response.payload;\r\n        this.marketPriceGrid.api.setRowData(this.gridData);\r\n      } else {\r\n        this.toastrService.error('Something went wrong! Try Again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  ngModelChange(date) {\r\n    this.startDate = date.startDate;\r\n    this.endDate = date.endDate;\r\n    this.marketPriceGrid.api.onFilterChanged();\r\n  }\r\n\r\n  onSymbolKey(e) {\r\n    this.filterBySymbol = e.srcElement.value;\r\n    this.marketPriceGrid.api.onFilterChanged();\r\n\r\n    // For the moment we react to each key stroke\r\n    if (e.code === 'Enter' || e.code === 'Tab') {\r\n    }\r\n  }\r\n\r\n  ngModelChangeSymbol(e) {\r\n    this.filterBySymbol = e;\r\n    this.marketPriceGrid.api.onFilterChanged();\r\n  }\r\n\r\n  refreshGrid() {\r\n    this.marketPriceGrid.api.showLoadingOverlay();\r\n    this.getData();\r\n  }\r\n\r\n  onFileInput(files: FileList) {\r\n    this.disableFileUpload = false;\r\n    this.fileToUpload = files.item(0);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vZnVuZC10aGVvcmV0aWNhbC90YXgtcmF0ZXMvdGF4LXJhdGUtbW9kYWwvdGF4LXJhdGUtbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { ModalComponent, ModalFooterConfig } from 'lp-toolkit';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport * as moment from 'moment';\r\nimport { FundTheoreticalApiService } from 'src/services/fund-theoretical-api.service';\r\n\r\n@Component({\r\n  selector: 'app-tax-rate-modal',\r\n  templateUrl: './tax-rate-modal.component.html',\r\n  styleUrls: ['./tax-rate-modal.component.scss']\r\n})\r\nexport class TaxRateModalComponent implements OnInit {\r\n  @ViewChild('lpModal', { static: false }) lpModal: ModalComponent;\r\n  @Output() closeModalEvent = new EventEmitter<any>();\r\n\r\n  taxRate: any;\r\n  selectedDate = null;\r\n  longTermTaxRate = 0;\r\n  shortTermTaxRate = 0;\r\n  shortTermPeriod = 365;\r\n  lastTaxRateData;\r\n  editTaxRate: boolean;\r\n  backdrop: any;\r\n\r\n  footerConfig: ModalFooterConfig = {\r\n    showConfirmButton: true\r\n  };\r\n\r\n  constructor(\r\n    private toastrService: ToastrService,\r\n    private fundTheoreticalApiService: FundTheoreticalApiService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.editTaxRate = false;\r\n  }\r\n\r\n  changeDate(date) {\r\n    this.selectedDate = date;\r\n  }\r\n\r\n  saveTaxRate() {\r\n    this.footerConfig = {\r\n      confirmButtonDisabledState: true,\r\n      confirmButtonLoadingState: true\r\n    };\r\n    const taxRatePayload = {\r\n      effectiveFrom: this.selectedDate.startDate.format('YYYY-MM-DD'),\r\n      effectiveTo: this.selectedDate.endDate.format('YYYY-MM-DD'),\r\n      longTermTaxRate: this.longTermTaxRate,\r\n      shortTermTaxRate: this.shortTermTaxRate,\r\n      ShortTermPeriod: this.shortTermPeriod\r\n    };\r\n    if (this.editTaxRate) {\r\n      const { id } = this.taxRate;\r\n      this.fundTheoreticalApiService.editTaxRate(id, taxRatePayload).subscribe(\r\n        response => {\r\n          if (response.isSuccessful) {\r\n            this.toastrService.success('Tax Rate is edited successfully !');\r\n            this.lpModal.hideModal();\r\n            this.closeModalEvent.emit(true);\r\n            setTimeout(() => this.clearForm(), 500);\r\n          } else {\r\n            this.lpModal.hideModal();\r\n            this.toastrService.error('Failed to edit Tax Rate !');\r\n          }\r\n\r\n          this.footerConfig = {\r\n            confirmButtonDisabledState: false,\r\n            confirmButtonLoadingState: false\r\n          };\r\n        },\r\n        error => {\r\n          this.footerConfig = {\r\n            confirmButtonDisabledState: false,\r\n            confirmButtonLoadingState: false\r\n          };\r\n          this.lpModal.hideModal();\r\n          this.toastrService.error('Something went wrong. Try again later!');\r\n        }\r\n      );\r\n    } else {\r\n      this.fundTheoreticalApiService.createTaxRate(taxRatePayload).subscribe(\r\n        response => {\r\n          if (response.isSuccessful) {\r\n            this.toastrService.success('Tax Rate is created successfully !');\r\n            this.lpModal.hideModal();\r\n            this.closeModalEvent.emit(true);\r\n            setTimeout(() => this.clearForm(), 500);\r\n          } else {\r\n            this.toastrService.error('Failed to create Tax Rate !');\r\n          }\r\n\r\n          this.footerConfig = {\r\n            confirmButtonDisabledState: false,\r\n            confirmButtonLoadingState: false\r\n          };\r\n        },\r\n        error => {\r\n          this.footerConfig = {\r\n            confirmButtonDisabledState: false,\r\n            confirmButtonLoadingState: false\r\n          };\r\n          this.lpModal.hideModal();\r\n          this.toastrService.error('Something went wrong. Try again later!');\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  taxRateValidation(taxRateObject, lastTaxRateData) {\r\n    if (lastTaxRateData === null) {\r\n      return 1;\r\n    }\r\n\r\n    const effectiveFrom = moment(taxRateObject.effectiveFrom);\r\n    const effectiveTo = moment(this.lastTaxRateData.effectiveTo);\r\n    const dayDiff = effectiveFrom.diff(effectiveTo, 'days');\r\n\r\n    return effectiveFrom.diff(effectiveTo, 'days');\r\n  }\r\n\r\n  openModal(rowData, previoustaxRateData) {\r\n    this.lastTaxRateData = previoustaxRateData;\r\n    if (rowData && Object.keys(rowData).length > 1) {\r\n      this.editTaxRate = true;\r\n      this.footerConfig = {\r\n        confirmButtonText: 'Edit',\r\n        confirmButtonIcon: 'fa-edit'\r\n      };\r\n      this.taxRate = rowData;\r\n      this.selectedDate = {\r\n        startDate: moment(this.taxRate.effectiveFrom),\r\n        endDate: moment(this.taxRate.effectiveTo)\r\n      };\r\n      this.longTermTaxRate = this.taxRate.longTermTaxRate;\r\n      this.shortTermTaxRate = this.taxRate.shortTermTaxRate;\r\n      this.shortTermPeriod = this.taxRate.shortTermPeriod;\r\n    } else {\r\n      this.footerConfig = {\r\n        confirmButtonText: 'Save',\r\n        confirmButtonIcon: 'fa-save'\r\n      };\r\n    }\r\n\r\n    this.lpModal.showModal();\r\n  }\r\n\r\n  onCloseModal() {\r\n    setTimeout(() => this.clearForm(), 1000);\r\n  }\r\n\r\n  clearForm() {\r\n    this.editTaxRate = false;\r\n    this.selectedDate = null;\r\n    this.longTermTaxRate = 0;\r\n    this.shortTermTaxRate = 0;\r\n    this.shortTermPeriod = 365;\r\n  }\r\n}\r\n","export default \".action-btn {\\n  margin-left: 2.5rem;\\n  padding: 2px;\\n}\\n\\n.legend-label {\\n  margin: 0.8rem 0.4rem 0 0;\\n  font-size: 1rem;\\n  font-weight: 600;\\n  line-height: 0.5;\\n}\\n\\n.overlap-color {\\n  background-color: #f9a89f;\\n}\\n\\n.gap-color {\\n  background-color: #ffcfcf;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi9mdW5kLXRoZW9yZXRpY2FsL3RheC1yYXRlcy9DOlxcVXNlcnNcXGxhdHRpXFxkZXZlbG9wbWVudFxcbGlnaHRwb2ludFxcZmluYW5jZVxcdWkvc3JjXFxhcHBcXG1haW5cXGZ1bmQtdGhlb3JldGljYWxcXHRheC1yYXRlc1xcdGF4LXJhdGVzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9tYWluL2Z1bmQtdGhlb3JldGljYWwvdGF4LXJhdGVzL3RheC1yYXRlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFBO0VBQ0EsWUFBQTtBQ0NGOztBREVBO0VBQ0UseUJBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtBQ0NGOztBREVBO0VBQ0UseUJBQUE7QUNDRjs7QURFQTtFQUNFLHlCQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9tYWluL2Z1bmQtdGhlb3JldGljYWwvdGF4LXJhdGVzL3RheC1yYXRlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3Rpb24tYnRuIHtcclxuICBtYXJnaW4tbGVmdDogMi41cmVtO1xyXG4gIHBhZGRpbmc6IDJweDtcclxufVxyXG5cclxuLmxlZ2VuZC1sYWJlbCB7XHJcbiAgbWFyZ2luOiAwLjhyZW0gMC40cmVtIDAgMDtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBsaW5lLWhlaWdodDogMC41O1xyXG59XHJcblxyXG4ub3ZlcmxhcC1jb2xvciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5YTg5ZjtcclxufVxyXG5cclxuLmdhcC1jb2xvciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmY2ZjZjtcclxufVxyXG4iLCIuYWN0aW9uLWJ0biB7XG4gIG1hcmdpbi1sZWZ0OiAyLjVyZW07XG4gIHBhZGRpbmc6IDJweDtcbn1cblxuLmxlZ2VuZC1sYWJlbCB7XG4gIG1hcmdpbjogMC44cmVtIDAuNHJlbSAwIDA7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbGluZS1oZWlnaHQ6IDAuNTtcbn1cblxuLm92ZXJsYXAtY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlhODlmO1xufVxuXG4uZ2FwLWNvbG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmY2ZjZjtcbn0iXX0= */\"","import { Component, OnInit, AfterViewInit, ViewChild, TemplateRef } from '@angular/core';\r\nimport { TaxRateModalComponent } from './tax-rate-modal/tax-rate-modal.component';\r\nimport { GridOptions, ColDef, ColGroupDef } from 'ag-grid-community';\r\nimport { GridLayoutMenuComponent } from 'lp-toolkit';\r\nimport { GridId, GridName } from 'src/shared/utils/AppEnums';\r\nimport { HeightStyle, SideBar, AutoSizeAllColumns, DateFormatter } from 'src/shared/utils/Shared';\r\nimport { GetContextMenu } from 'src/shared/utils/ContextMenu';\r\nimport { Moment } from 'moment';\r\nimport { ConfirmationModalComponent } from 'src/shared/Component/confirmation-modal/confirmation-modal.component';\r\nimport { TemplateRendererComponent } from 'src/app/template-renderer/template-renderer.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TaxRateData } from 'src/shared/Models/funds-theoretical';\r\nimport { UtilsConfig } from 'src/shared/Models/utils-config';\r\nimport { ContextMenu } from 'src/shared/Models/common';\r\nimport { DataDictionary } from 'src/shared/utils/DataDictionary';\r\nimport { FundTheoreticalApiService } from 'src/services/fund-theoretical-api.service';\r\n\r\n@Component({\r\n  selector: 'app-tax-rates',\r\n  templateUrl: './tax-rates.component.html',\r\n  styleUrls: ['./tax-rates.component.scss']\r\n})\r\nexport class TaxRatesComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('taxRateModal', { static: false })\r\n  taxRateModal: TaxRateModalComponent;\r\n  @ViewChild('actionButtons', { static: false }) actionButtons: TemplateRef<any>;\r\n  @ViewChild('confirmationModal', { static: false })\r\n  confirmationModal: ConfirmationModalComponent;\r\n\r\n  taxRatesGrid: GridOptions;\r\n  effectiveFromToDate: { startDate: Moment; endDate: Moment };\r\n  taxRatesData: TaxRateData[];\r\n  taxRateRow: any;\r\n  showOverlappingBtn = false;\r\n  showGapBtn = false;\r\n\r\n  utilsConfig: UtilsConfig = {\r\n    expandGrid: false,\r\n    collapseGrid: false,\r\n    refreshGrid: true,\r\n    resetGrid: true,\r\n    exportExcel: false\r\n  };\r\n\r\n  styleForHeight = HeightStyle(224);\r\n\r\n  gapStyle = { backgroundColor: '#ffcfcf' };\r\n  overlappingStyle = { backgroundColor: '#f9a89f' };\r\n\r\n  constructor(\r\n    private fundTheoreticalApiService: FundTheoreticalApiService,\r\n    private toastrService: ToastrService,\r\n    private dataDictionary: DataDictionary\r\n  ) {\r\n    this.initGrid();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n    this.getTaxRates();\r\n  }\r\n\r\n  getTaxRates() {\r\n    this.showGapBtn = false;\r\n    this.showOverlappingBtn = false;\r\n    this.fundTheoreticalApiService.getTaxRates().subscribe(result => {\r\n      if (result.payload) {\r\n        this.taxRatesData = result.payload.map(item => ({\r\n          id: item.Id,\r\n          effectiveFrom: DateFormatter(item.EffectiveFrom),\r\n          effectiveTo: DateFormatter(item.EffectiveTo),\r\n          longTermTaxRate: item.LongTermTaxRate,\r\n          shortTermTaxRate: item.ShortTermTaxRate,\r\n          shortTermPeriod: item.ShortTermPeriod,\r\n          createdBy: item.CreatedBy,\r\n          lastUpdatedBy: item.LastUpdatedBy,\r\n          createdDate: item.CreatedDate,\r\n          lastUpdatedDate: item.LastUpdatedDate,\r\n          isOverLapped: item.IsOverLapped,\r\n          isGapPresent: item.IsGapPresent\r\n        }));\r\n      }\r\n\r\n      this.taxRatesData.find(taxRate => {\r\n        if (taxRate.isOverLapped) {\r\n          this.showOverlappingBtn = true;\r\n          return true;\r\n        }\r\n      });\r\n\r\n      this.taxRatesData.find(taxRate => {\r\n        if (taxRate.isGapPresent) {\r\n          this.showGapBtn = true;\r\n          return true;\r\n        }\r\n      });\r\n\r\n      this.taxRatesGrid.api.setRowData(this.taxRatesData);\r\n    });\r\n    this.setColDefs();\r\n  }\r\n\r\n  initGrid() {\r\n    this.taxRatesGrid = {\r\n      rowData: null,\r\n      frameworkComponents: { customToolPanel: GridLayoutMenuComponent },\r\n      getExternalFilterState: () => {\r\n        return {};\r\n      },\r\n      pinnedBottomRowData: null,\r\n      onRowSelected: params => {},\r\n      clearExternalFilter: () => {},\r\n      getContextMenuItems: this.getContextMenuItems.bind(this),\r\n      rowSelection: 'single',\r\n      rowGroupPanelShow: 'after',\r\n      pivotPanelShow: 'after',\r\n      singleClickEdit: true,\r\n      pivotColumnGroupTotals: 'after',\r\n      pivotRowTotals: 'after',\r\n      onGridReady: params => {\r\n        params.api.sizeColumnsToFit();\r\n      },\r\n      onFirstDataRendered: params => {\r\n        params.api.sizeColumnsToFit();\r\n      },\r\n      getRowStyle: params => {\r\n        if (params.data.isOverLapped) {\r\n          return this.overlappingStyle;\r\n        }\r\n        if (params.data.isGapPresent) {\r\n          return this.gapStyle;\r\n        }\r\n      }\r\n    } as GridOptions;\r\n    this.taxRatesGrid.sideBar = SideBar(GridId.taxRatesId, GridName.taxRates, this.taxRatesGrid);\r\n  }\r\n\r\n  setColDefs() {\r\n    const colDefs: Array<ColDef | ColGroupDef> = [\r\n      {\r\n        headerName: 'Id',\r\n        field: 'id',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Effective From',\r\n        field: 'effectiveFrom',\r\n        sortable: true,\r\n        filter: true\r\n      },\r\n      {\r\n        headerName: 'Effective To',\r\n        field: 'effectiveTo',\r\n        sortable: true,\r\n        filter: true\r\n      },\r\n      {\r\n        headerName: 'Long Term Tax Rate %',\r\n        field: 'longTermTaxRate',\r\n        sortable: true,\r\n        filter: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          this.dataDictionary.numberFormatter(params.node.data.longTermTaxRate, true)\r\n      },\r\n      {\r\n        headerName: 'Short Term Tax Rate %',\r\n        field: 'shortTermTaxRate',\r\n        sortable: true,\r\n        type: 'numericColumn',\r\n        valueFormatter: params =>\r\n          this.dataDictionary.numberFormatter(params.node.data.shortTermTaxRate, true)\r\n      },\r\n      {\r\n        headerName: 'Short Term Period',\r\n        field: 'shortTermPeriod',\r\n        sortable: true,\r\n        type: 'numericColumn'\r\n      },\r\n      {\r\n        headerName: 'Actions',\r\n        cellRendererFramework: TemplateRendererComponent,\r\n        cellRendererParams: {\r\n          ngTemplate: this.actionButtons\r\n        },\r\n        minWidth: 200\r\n      },\r\n      {\r\n        headerName: 'Created By',\r\n        field: 'createdBy',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Last Updated By ',\r\n        field: 'lastUpdatedBy ',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Created Date',\r\n        field: 'createdDate',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Is Over Lapped',\r\n        field: 'isOverLapped',\r\n        hide: true\r\n      },\r\n      {\r\n        headerName: 'Is Gap Present',\r\n        field: 'isGapPresent',\r\n        hide: true\r\n      }\r\n    ];\r\n    this.taxRatesGrid.api.setColumnDefs(colDefs);\r\n  }\r\n\r\n  getContextMenuItems(params): Array<ContextMenu> {\r\n    const addDefaultItems = [];\r\n    return GetContextMenu(false, addDefaultItems, true, null, params);\r\n  }\r\n\r\n  refreshGrid() {\r\n    this.taxRatesGrid.api.showLoadingOverlay();\r\n    this.getTaxRates();\r\n  }\r\n\r\n  openTaxRateModal() {\r\n    let lastTaxRateData;\r\n    if (this.taxRatesData.length !== 0) {\r\n      lastTaxRateData = this.taxRatesData[this.taxRatesData.length - 1];\r\n    } else {\r\n      lastTaxRateData = null;\r\n    }\r\n    this.taxRateModal.openModal(null, lastTaxRateData);\r\n  }\r\n\r\n  closeTaxRateModal() {\r\n    this.getTaxRates();\r\n  }\r\n\r\n  editTaxRate(row) {\r\n    const lastIndex = this.taxRatesData.findIndex(taxRate => taxRate.id === row.id);\r\n    const lastTaxRateData = this.taxRatesData[lastIndex];\r\n    this.taxRateModal.openModal(row, lastTaxRateData);\r\n  }\r\n\r\n  openConfirmationModal(row) {\r\n    this.taxRateRow = row;\r\n    this.confirmationModal.showModal();\r\n  }\r\n\r\n  deleteTaxRate() {\r\n    this.fundTheoreticalApiService.deleteTaxRate(this.taxRateRow.id).subscribe(\r\n      response => {\r\n        if (response.isSuccessful) {\r\n          this.toastrService.success('Tax Rate deleted successfully!');\r\n          this.getTaxRates();\r\n        } else {\r\n          this.toastrService.error('TaxRate deletion failed!');\r\n        }\r\n      },\r\n      error => {\r\n        this.toastrService.error('Something went wrong. Try again later!');\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}