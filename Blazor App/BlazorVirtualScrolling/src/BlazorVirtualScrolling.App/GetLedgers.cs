// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using LedgersType;
//
//    var getLedgers = GetLedgers.FromJson(jsonString);

namespace LedgersType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class GetLedgers
    {
        [JsonProperty("data")]
        public List<LedgerProp> Data { get; set; }

        [JsonProperty("meta")]
        public Meta Meta { get; set; }
    }

    public partial class LedgerProp
    {
         
        public int ind { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("value")]
        public double Value { get; set; }

        [JsonProperty("effectiveDate")]
        public DateTimeOffset EffectiveDate { get; set; }

        [JsonProperty("fund")]
        public Account Fund { get; set; }

        [JsonProperty("account")]
        public Account Account { get; set; }

        [JsonProperty("accountType")]
        public AccountType AccountType { get; set; }

        [JsonProperty("customer")]
        public Customer Customer { get; set; }
    }

    public partial class Customer
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("email")]
        public string Email { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("initials")]
        public string Initials { get; set; }
    }


    public partial class Account
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }

    public partial class AccountType
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }
    }


    public partial class Meta
    {
        [JsonProperty("total")]
        public long Total { get; set; }

        [JsonProperty("pages")]
        public long Pages { get; set; }

        [JsonProperty("limit")]
        public long Limit { get; set; }

        [JsonProperty("page")]
        public long Page { get; set; }

        [JsonProperty("next")]
        public long Next { get; set; }
    }

    public partial class GetLedgers
    {
        public static GetLedgers FromJson(string json) => JsonConvert.DeserializeObject<GetLedgers>(json, LedgersType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this GetLedgers self) => JsonConvert.SerializeObject(self, LedgersType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
